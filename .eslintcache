[{"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\serviceWorker.js":"3","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\routes.js":"4","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\GlobalStyles.js":"5","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\mixins\\chartjs.js":"6","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\auth.js":"7","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\ForgotPassword\\PasswordReset.js":"8","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\testautocomplete.js":"9","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\auth\\LoginView.js":"10","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\auth\\RegisterView.js":"11","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\errors\\NotFoundView.js":"12","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\homepage\\Homepage.js":"13","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveUpload\\DriveUploadForm.js":"14","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveUpload\\AfterDriveUpload.js":"15","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\theme\\index.js":"16","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Page.js":"17","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\data.js":"18","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\DriveService.js":"19","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\LoginService.js":"20","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\CompanyService.js":"21","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveListView\\ProfileDetails.js":"22","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\theme\\typography.js":"23","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\theme\\shadows.js":"24","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveListView\\index.js":"25","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\TopBars\\TopBarBeforeSignIn.js":"26","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\SDashboardLayout\\index.js":"27","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\EDashboardLayout\\index.js":"28","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\ImportStudent\\index.js":"29","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\DashboardLayout\\index.js":"30","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\MainLayout\\index.js":"31","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\CompanyListView\\index.js":"32","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\account\\AccountView\\index.js":"33","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\customer\\CustomerListView\\index.js":"34","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\student\\StudentListView\\index.js":"35","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\index.js":"36","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\product\\ProductListView\\index.js":"37","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employee\\EmployeeListView\\index.js":"38","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\index.js":"39","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\index.js":"40","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\settings\\SettingsView\\index.js":"41","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employeeAccount\\employeeAccountView\\index.js":"42","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\EmployeeServices.js":"43","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\studentService.js":"44","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Login.js":"45","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\CompanyListView\\Toolbar.js":"46","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\CompanyListView\\Results.js":"47","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\TrafficByDevice.js":"48","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\settings\\SettingsView\\Password.js":"49","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\settings\\SettingsView\\Notifications.js":"50","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Register\\RegisterDialog.js":"51","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employeeAccount\\employeeAccountView\\Profile.js":"52","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employeeAccount\\employeeAccountView\\ProfileDetails.js":"53","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\TasksProgress.js":"54","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\TotalCustomers.js":"55","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\TotalProfit.js":"56","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\Sales.js":"57","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\LatestOrders.js":"58","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\LatestProducts.js":"59","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\Budget.js":"60","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\TrafficByDevice.js":"61","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\TotalProfit.js":"62","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\TotalCustomers.js":"63","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\TasksProgress.js":"64","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\Sales.js":"65","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\LatestOrders.js":"66","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\LatestProducts.js":"67","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\Budget.js":"68","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employee\\EmployeeListView\\data.js":"69","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employee\\EmployeeListView\\Toolbar.js":"70","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employee\\EmployeeListView\\Results.js":"71","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\product\\ProductListView\\data.js":"72","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\product\\ProductListView\\ProductCard.js":"73","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\product\\ProductListView\\Toolbar.js":"74","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\TrafficByDevice.js":"75","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\TotalProfit.js":"76","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\TotalCustomers.js":"77","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\AuthorizedHttpUrl.js":"78","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Snackbar\\snackbar.js":"79","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\useForm.js":"80","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employee\\EmployeeListView\\ProfileDetails.js":"81","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\utils\\getInitials.js":"82","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Popup.js":"83","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\useTable.js":"84","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\Controls.js":"85","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\ActionButton.js":"86","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\Button.js":"87","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\DatePicker.js":"88","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\Checkbox.js":"89","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\Select.js":"90","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\RadioGroup.js":"91","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\Input.js":"92","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Register\\RegisterContent.js":"93","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\CompanyListView\\ProfileDetails.js":"94","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\CompanyUpload\\ProfileDetails.js":"95","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\ForgotPassword\\ForgotPassword.js":"96","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\HttpUrl.js":"97","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\RegisterService.js":"98","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\TasksProgress.js":"99","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\LatestProducts.js":"100","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\Budget.js":"101","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\Sales.js":"102","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\student\\StudentListView\\data.js":"103","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\LatestOrders.js":"104","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\student\\StudentListView\\Toolbar.js":"105","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\student\\StudentListView\\Results.js":"106","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\customer\\CustomerListView\\data.js":"107","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\customer\\CustomerListView\\Toolbar.js":"108","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\customer\\CustomerListView\\Results.js":"109","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\account\\AccountView\\ProfileDetails.js":"110","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\account\\AccountView\\Profile.js":"111","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\MainLayout\\TopBar.js":"112","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\TopBars\\TopBar.js":"113","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\ImportStudent\\ImportExcel.js":"114","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveListView\\Toolbar.js":"115","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveListView\\Results.js":"116","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\DarkModeTheme\\ThemeProvider.tsx":"117","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\student\\StudentListView\\ProfileDetails.js":"118","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\account\\AccountView\\AcademicData.js":"119","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\account\\AccountView\\PastAcademicData.js":"120","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Logo.js":"121","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\account\\AccountView\\PersonalStudentData.js":"122","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\ImportStudent\\SingleStudImport.js":"123","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\DashboardLayout\\NavBar\\index.js":"124","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\EDashboardLayout\\NavBar\\index.js":"125","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\SDashboardLayout\\NavBar\\index.js":"126","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\EDashboardLayout\\NavBar\\NavItem.js":"127","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\SDashboardLayout\\NavBar\\NavItem.js":"128","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js":"129","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\CoordinatorSearch.js":"130","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\CompanySearch.js":"131","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\rounds\\RoundDetails.js":"132","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveListView\\DriveMenuButton.js":"133","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\VolunteeringDrives.js":"134","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\EligibleDrives.js":"135"},{"size":333,"mtime":1611300270290,"results":"136","hashOfConfig":"137"},{"size":583,"mtime":1612535725726,"results":"138","hashOfConfig":"137"},{"size":5089,"mtime":1611300270301,"results":"139","hashOfConfig":"137"},{"size":3907,"mtime":1612535723749,"results":"140","hashOfConfig":"137"},{"size":709,"mtime":1611300270251,"results":"141","hashOfConfig":"137"},{"size":5777,"mtime":1611300270299,"results":"142","hashOfConfig":"137"},{"size":1781,"mtime":1611898037253,"results":"143","hashOfConfig":"137"},{"size":5146,"mtime":1611511592623,"results":"144","hashOfConfig":"137"},{"size":6125,"mtime":1612529129262,"results":"145","hashOfConfig":"137"},{"size":6317,"mtime":1611300270314,"results":"146","hashOfConfig":"137"},{"size":6641,"mtime":1611300270314,"results":"147","hashOfConfig":"137"},{"size":1617,"mtime":1611300270320,"results":"148","hashOfConfig":"137"},{"size":3233,"mtime":1611300270321,"results":"149","hashOfConfig":"137"},{"size":39604,"mtime":1612529128903,"results":"150","hashOfConfig":"137"},{"size":1653,"mtime":1612530269590,"results":"151","hashOfConfig":"137"},{"size":578,"mtime":1611300270309,"results":"152","hashOfConfig":"137"},{"size":523,"mtime":1611300270253,"results":"153","hashOfConfig":"137"},{"size":17013,"mtime":1612431624516,"results":"154","hashOfConfig":"137"},{"size":502,"mtime":1612529128533,"results":"155","hashOfConfig":"137"},{"size":704,"mtime":1611300270303,"results":"156","hashOfConfig":"137"},{"size":594,"mtime":1612431624486,"results":"157","hashOfConfig":"137"},{"size":13896,"mtime":1612531440838,"results":"158","hashOfConfig":"137"},{"size":579,"mtime":1611300270310,"results":"159","hashOfConfig":"137"},{"size":1645,"mtime":1611300270310,"results":"160","hashOfConfig":"137"},{"size":781,"mtime":1612431624508,"results":"161","hashOfConfig":"137"},{"size":3672,"mtime":1612529128531,"results":"162","hashOfConfig":"137"},{"size":1410,"mtime":1611300270298,"results":"163","hashOfConfig":"137"},{"size":1410,"mtime":1611300270294,"results":"164","hashOfConfig":"137"},{"size":860,"mtime":1611898037260,"results":"165","hashOfConfig":"137"},{"size":1410,"mtime":1611300270293,"results":"166","hashOfConfig":"137"},{"size":1050,"mtime":1611300270295,"results":"167","hashOfConfig":"137"},{"size":792,"mtime":1612431624502,"results":"168","hashOfConfig":"137"},{"size":1939,"mtime":1612431624498,"results":"169","hashOfConfig":"137"},{"size":891,"mtime":1611300270316,"results":"170","hashOfConfig":"137"},{"size":889,"mtime":1611300270342,"results":"171","hashOfConfig":"137"},{"size":1816,"mtime":1612540406480,"results":"172","hashOfConfig":"137"},{"size":1662,"mtime":1611300270323,"results":"173","hashOfConfig":"137"},{"size":890,"mtime":1611300270319,"results":"174","hashOfConfig":"137"},{"size":2512,"mtime":1611300270329,"results":"175","hashOfConfig":"137"},{"size":2502,"mtime":1612431624525,"results":"176","hashOfConfig":"137"},{"size":797,"mtime":1611300270339,"results":"177","hashOfConfig":"137"},{"size":2166,"mtime":1612529129218,"results":"178","hashOfConfig":"137"},{"size":838,"mtime":1611511592627,"results":"179","hashOfConfig":"137"},{"size":486,"mtime":1611511592628,"results":"180","hashOfConfig":"137"},{"size":6822,"mtime":1611898037254,"results":"181","hashOfConfig":"137"},{"size":2590,"mtime":1612431624501,"results":"182","hashOfConfig":"137"},{"size":4556,"mtime":1612431624500,"results":"183","hashOfConfig":"137"},{"size":3304,"mtime":1611300270334,"results":"184","hashOfConfig":"137"},{"size":3713,"mtime":1611300270339,"results":"185","hashOfConfig":"137"},{"size":3245,"mtime":1611300270338,"results":"186","hashOfConfig":"137"},{"size":1842,"mtime":1611300270271,"results":"187","hashOfConfig":"137"},{"size":2043,"mtime":1612529129043,"results":"188","hashOfConfig":"137"},{"size":9467,"mtime":1612529129154,"results":"189","hashOfConfig":"137"},{"size":1633,"mtime":1611300270332,"results":"190","hashOfConfig":"137"},{"size":2176,"mtime":1611300270333,"results":"191","hashOfConfig":"137"},{"size":1452,"mtime":1611300270333,"results":"192","hashOfConfig":"137"},{"size":3438,"mtime":1611300270332,"results":"193","hashOfConfig":"137"},{"size":4137,"mtime":1611300270330,"results":"194","hashOfConfig":"137"},{"size":2906,"mtime":1611300270331,"results":"195","hashOfConfig":"137"},{"size":2134,"mtime":1611300270330,"results":"196","hashOfConfig":"137"},{"size":3304,"mtime":1611300270328,"results":"197","hashOfConfig":"137"},{"size":1452,"mtime":1611300270328,"results":"198","hashOfConfig":"137"},{"size":2176,"mtime":1611300270327,"results":"199","hashOfConfig":"137"},{"size":1633,"mtime":1611300270327,"results":"200","hashOfConfig":"137"},{"size":3438,"mtime":1611300270327,"results":"201","hashOfConfig":"137"},{"size":4137,"mtime":1611300270324,"results":"202","hashOfConfig":"137"},{"size":2906,"mtime":1611300270325,"results":"203","hashOfConfig":"137"},{"size":2134,"mtime":1611300270324,"results":"204","hashOfConfig":"137"},{"size":3506,"mtime":1611300270319,"results":"205","hashOfConfig":"137"},{"size":2522,"mtime":1612529128957,"results":"206","hashOfConfig":"137"},{"size":6921,"mtime":1611511592632,"results":"207","hashOfConfig":"137"},{"size":1715,"mtime":1611300270323,"results":"208","hashOfConfig":"137"},{"size":2689,"mtime":1611300270323,"results":"209","hashOfConfig":"137"},{"size":1898,"mtime":1611300270323,"results":"210","hashOfConfig":"137"},{"size":3304,"mtime":1611300270337,"results":"211","hashOfConfig":"137"},{"size":1452,"mtime":1611300270337,"results":"212","hashOfConfig":"137"},{"size":2176,"mtime":1611300270337,"results":"213","hashOfConfig":"137"},{"size":612,"mtime":1612529128532,"results":"214","hashOfConfig":"137"},{"size":502,"mtime":1611511592626,"results":"215","hashOfConfig":"137"},{"size":1212,"mtime":1611300270288,"results":"216","hashOfConfig":"137"},{"size":6608,"mtime":1611300270317,"results":"217","hashOfConfig":"137"},{"size":145,"mtime":1611300270311,"results":"218","hashOfConfig":"137"},{"size":1381,"mtime":1612529128487,"results":"219","hashOfConfig":"137"},{"size":3885,"mtime":1611300270289,"results":"220","hashOfConfig":"137"},{"size":410,"mtime":1611300270275,"results":"221","hashOfConfig":"137"},{"size":875,"mtime":1611300270273,"results":"222","hashOfConfig":"137"},{"size":739,"mtime":1611300270274,"results":"223","hashOfConfig":"137"},{"size":814,"mtime":1611300270286,"results":"224","hashOfConfig":"137"},{"size":753,"mtime":1611300270275,"results":"225","hashOfConfig":"137"},{"size":920,"mtime":1611300270287,"results":"226","hashOfConfig":"137"},{"size":802,"mtime":1611300270287,"results":"227","hashOfConfig":"137"},{"size":476,"mtime":1611300270286,"results":"228","hashOfConfig":"137"},{"size":12642,"mtime":1612529128489,"results":"229","hashOfConfig":"137"},{"size":4432,"mtime":1612431624499,"results":"230","hashOfConfig":"137"},{"size":3735,"mtime":1612431624503,"results":"231","hashOfConfig":"137"},{"size":2782,"mtime":1611511592622,"results":"232","hashOfConfig":"137"},{"size":427,"mtime":1612431624489,"results":"233","hashOfConfig":"137"},{"size":345,"mtime":1612431624493,"results":"234","hashOfConfig":"137"},{"size":1633,"mtime":1611300270336,"results":"235","hashOfConfig":"137"},{"size":2906,"mtime":1611300270336,"results":"236","hashOfConfig":"137"},{"size":2134,"mtime":1611300270334,"results":"237","hashOfConfig":"137"},{"size":3438,"mtime":1611300270336,"results":"238","hashOfConfig":"137"},{"size":3506,"mtime":1611300270342,"results":"239","hashOfConfig":"137"},{"size":4137,"mtime":1611300270335,"results":"240","hashOfConfig":"137"},{"size":2360,"mtime":1612529129224,"results":"241","hashOfConfig":"137"},{"size":6885,"mtime":1612529129222,"results":"242","hashOfConfig":"137"},{"size":3506,"mtime":1611300270316,"results":"243","hashOfConfig":"137"},{"size":1900,"mtime":1611300270316,"results":"244","hashOfConfig":"137"},{"size":5681,"mtime":1611300270315,"results":"245","hashOfConfig":"137"},{"size":13284,"mtime":1612431624497,"results":"246","hashOfConfig":"137"},{"size":2061,"mtime":1611511592629,"results":"247","hashOfConfig":"137"},{"size":801,"mtime":1611300270295,"results":"248","hashOfConfig":"137"},{"size":2567,"mtime":1612529128530,"results":"249","hashOfConfig":"137"},{"size":3636,"mtime":1611898037258,"results":"250","hashOfConfig":"137"},{"size":2634,"mtime":1612431624507,"results":"251","hashOfConfig":"137"},{"size":3852,"mtime":1612537520135,"results":"252","hashOfConfig":"137"},{"size":1726,"mtime":1611300270226,"results":"253","hashOfConfig":"137"},{"size":7349,"mtime":1612529129220,"results":"254","hashOfConfig":"137"},{"size":15450,"mtime":1612431624494,"results":"255","hashOfConfig":"137"},{"size":10551,"mtime":1612431624495,"results":"256","hashOfConfig":"137"},{"size":187,"mtime":1611300270252,"results":"257","hashOfConfig":"137"},{"size":11659,"mtime":1612431624495,"results":"258","hashOfConfig":"137"},{"size":64592,"mtime":1611898037259,"results":"259","hashOfConfig":"137"},{"size":4515,"mtime":1611300270292,"results":"260","hashOfConfig":"137"},{"size":5341,"mtime":1612529128528,"results":"261","hashOfConfig":"137"},{"size":3449,"mtime":1611300270297,"results":"262","hashOfConfig":"137"},{"size":1722,"mtime":1611300270294,"results":"263","hashOfConfig":"137"},{"size":1722,"mtime":1611300270297,"results":"264","hashOfConfig":"137"},{"size":1722,"mtime":1611300270292,"results":"265","hashOfConfig":"137"},{"size":2829,"mtime":1612529128712,"results":"266","hashOfConfig":"137"},{"size":2755,"mtime":1612529128581,"results":"267","hashOfConfig":"137"},{"size":4914,"mtime":1612530422828,"results":"268","hashOfConfig":"137"},{"size":3261,"mtime":1612537363241,"results":"269","hashOfConfig":"137"},{"size":4624,"mtime":1612541201441,"results":"270","hashOfConfig":"137"},{"size":4600,"mtime":1612540976092,"results":"271","hashOfConfig":"137"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},"lz2zyz",{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"274"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"274"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"274"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"274"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"274"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"274"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"274"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"274"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"274"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"274"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"274"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"274"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"274"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"274"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"274"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"274"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"274"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"274"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"274"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"274"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"274"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"274"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"274"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"274"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"274"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"274"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"274"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"274"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"274"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"274"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"274"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"274"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"274"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"508"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"274"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"274"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"274"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"274"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"274"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"274"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"274"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"546"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"274"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"274"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"274"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"274"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"274"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"274"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"580"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"580"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"274"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"591","messages":"592","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\index.js",[],["593","594"],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\serviceWorker.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\routes.js",["595"],"import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport DashboardLayout from './layouts/DashboardLayout';\r\nimport SDashboardLayout from './layouts/SDashboardLayout';\r\nimport EDashboardLayout from './layouts/EDashboardLayout';\r\nimport MainLayout from './layouts/MainLayout';\r\nimport AccountView from './views/account/AccountView';\r\nimport CustomerListView from './views/customer/CustomerListView';\r\nimport EmployeeListView from './views/employee/EmployeeListView';\r\nimport StudentListView from './views/student/StudentListView';\r\nimport DashboardView from './views/reports/DashboardView';\r\nimport EmployeeDashboardView from './views/reports/EmployeeDashboardView';\r\nimport StudentDashboardView from './views/reports/StudentDashboardView';\r\nimport LoginView from './views/auth/LoginView';\r\nimport RegisterView from './views/auth/RegisterView';\r\nimport NotFoundView from './views/errors/NotFoundView';\r\nimport ProductListView from './views/product/ProductListView';\r\nimport SettingsView from './views/settings/SettingsView';\r\nimport DriveView from './views/drive/DriveUpload/DriveUploadForm';\r\nimport DriveListView from './views/drive/DriveListView';\r\nimport CompanyView from './views/drive/CompanyListView';\r\nimport HomePage from './views/homepage/Homepage';\r\nimport Auth from './auth';\r\nimport PasswordReset from './components/ForgotPassword/PasswordReset';\r\nimport Route from 'react-router-dom';\r\nimport ImportStudent from './views/ImportStudent';\r\nimport EmployeeAccountView from './views/employeeAccount/employeeAccountView';\r\nimport AfterDriveView from './views/drive/DriveUpload/AfterDriveUpload';\r\nimport VolunteerSearch from './views/testautocomplete';\r\n\r\n\r\nconst isAuthenticated = Auth.isUserAuthenticated();\r\nconst routes = [\r\n  { path: '/', element: <HomePage /> },\r\n  {\r\n    path: 'app',\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: 'account', element: <AccountView /> },\r\n      { path: 'customers', element: <CustomerListView /> },\r\n      { path: 'dashboard', element: <DashboardView /> },\r\n      { path: 'products', element: <ProductListView /> },\r\n      { path: 'settings', element: <SettingsView /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> },\r\n    ]\r\n  },\r\n  {\r\n    path: 'student',\r\n    element: isAuthenticated ? <SDashboardLayout />: <Navigate to=\"/\"/>,\r\n    children: [\r\n      { path: 'account', element: <AccountView /> },\r\n      { path: 'dashboard', element: <StudentDashboardView /> },\r\n      { path: 'settings', element: <SettingsView /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  },\r\n  {\r\n    path: 'employee',\r\n    element: isAuthenticated ? <EDashboardLayout />: <Navigate to=\"/\"/>,\r\n    children: [\r\n      { path: 'empaccount', element: <EmployeeAccountView /> },\r\n      { path: 'employees', element: <EmployeeListView /> },\r\n      { path: 'students', element: <StudentListView /> },\r\n      { path: 'dashboard', element: <EmployeeDashboardView /> },\r\n      { path: 'settings', element: <SettingsView /> },\r\n      { path: 'drive', element: <DriveView /> },\r\n      { path: 'companies', element: <CompanyView /> },\r\n      { path: 'alldrives', element: <DriveListView /> },\r\n      { path: 'afterdrive', element: <AfterDriveView /> },\r\n      { path: 'import', element: <ImportStudent /> },\r\n      { path: 'auto', element: <VolunteerSearch /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  },\r\n  {\r\n    path: '/',\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: 'login', element: <LoginView /> },\r\n      { path: 'register', element: <RegisterView /> },\r\n      { path: 'resetpassword/:token', element:  <PasswordReset /> },\r\n      { path: '404', element: <NotFoundView /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  },\r\n  \r\n];\r\n\r\n\r\n// const routes = (\r\n//       <Route exact path=\"/\" component={ HomePage } />\r\n//   );\r\n\r\nexport default routes;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\GlobalStyles.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\mixins\\chartjs.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\auth.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\ForgotPassword\\PasswordReset.js",["596"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    TextField,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport LoginService from '../../services/LoginService';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {\r\n        margin: theme.spacing(2),\r\n        alignSelf: 'center'\r\n    }\r\n}));\r\n\r\nconst PasswordReset = ({ route, className, ...rest }) => {\r\n    const { token } = useParams();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isTokenValid, setIsTokenValid] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState({\r\n        confirm: ''\r\n    });\r\n\r\n    const [isSubmitting, setSubmitionCompleted] = React.useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        setValue({\r\n            confirm: event.target.value\r\n        });\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            new_password: '',\r\n        },\r\n        onSubmit: (values, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            console.log(\"Change Password\");\r\n            console.log(\"New Password\", values.new_password);\r\n            console.log(\"New Password\", value.confirm);\r\n            if (value.confirm === values.new_password) {\r\n                // await\r\n                LoginService.updateForgotPassword({ token: token, password: values.new_password })\r\n                    .then(result => {\r\n                        console.log(\"Password Changes successfully\");\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    })\r\n            }\r\n            else {\r\n                console.log(\"Password not matching\")\r\n                setSubmitionCompleted(false);\r\n                setSubmitting(false);\r\n            }\r\n\r\n        },\r\n        validationSchema: Yup.object({\r\n            // email: Yup.string().email('Invalid Email').required('Required'),\r\n            // password: Yup.string().min(5, 'Minimum 5 characters required').required('Required'),\r\n            // password: Yup.string().min(5, 'Minimum 5 characters required').required('Required'),\r\n        })\r\n    });\r\n    (async () => {\r\n        await\r\n            LoginService.validateForgotPasswordToken({ token: token })\r\n                .then(res => {\r\n                    console.log(\"Token validated\")\r\n                    setIsLoading(false);\r\n                    setIsTokenValid(true)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    setIsLoading(false);\r\n                    setIsTokenValid(false)\r\n                });\r\n\r\n    })();\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div>\r\n                Loading\r\n            </div>\r\n        )\r\n    }\r\n    if (isTokenValid)\r\n        return (\r\n            <form onSubmit={formik.handleSubmit} className={clsx(classes.root, className)} {...rest}>\r\n                <Card>\r\n                    <CardHeader\r\n                        subheader=\"Update password\"\r\n                        title=\"Password\"\r\n                    />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"New Password\"\r\n                            margin=\"normal\"\r\n                            name=\"new_password\"\r\n                            id=\"new_password\"\r\n                            onChange={formik.handleChange}\r\n                            type=\"password\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Confirm password\"\r\n                            margin=\"normal\"\r\n                            name=\"confirm\"\r\n                            onChange={handleChange}\r\n                            type=\"password\"\r\n                            value={value.confirm}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <Box\r\n                        display=\"flex\"\r\n                        justifyContent=\"flex-end\"\r\n                        p={2}\r\n                    >\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            // onClick = {changePassword}\r\n                            type=\"submit\"\r\n                            disabled={isSubmitting}\r\n                        >\r\n                            Update\r\n                </Button>\r\n                    </Box>\r\n                </Card>\r\n            </form>\r\n        );\r\n    else {\r\n        return (\r\n            <div>\r\n                Token is invalid\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PasswordReset;\r\n\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\testautocomplete.js",["597","598"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function(...args) {\r\n    const context = this;\r\n    if (timeout) clearTimeout(timeout);\r\n    timeout = setTimeout(() => {\r\n      timeout = null;\r\n      func.apply(context, args);\r\n    }, wait);\r\n  };\r\n}\r\n\r\nexport default function VolunteerSearch() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [inputSearch, setInputSearch] = useState(\"\");\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const debounceOnChange = React.useCallback(\r\n    debounce(value => {\r\n      setInputSearch(value);\r\n    }, 400),\r\n    []\r\n  );\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const loading = open && options.length === 0;\r\n  const [volunteers, setVolunteers] = useState([]);\r\n\r\n  function handleChange(value) {\r\n    setInputValue(value);\r\n    debounceOnChange(value);\r\n  }\r\n\r\n  const contents = []\r\n  function handleResult(data){\r\n      for (let i = 0; i < data.length; i++) {\r\n        const item= data[i].email;\r\n        contents[i] = item;\r\n      }\r\n      console.log(\"Contents: \",contents)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    (async () => {\r\n      const response = await axios.get(\r\n        \"http://20.37.50.140:8000/api/volunteer/search.json/?q=:inputValue\".replace(\r\n          /:inputValue/gi,\r\n          inputValue\r\n        )\r\n      );\r\n\r\n      if (active) {\r\n        console.log(response.data);\r\n        setOptions(response.data);\r\n      }\r\n    })();\r\n  }, [inputSearch]);\r\n\r\n  return (\r\n    <div className=\"VolunteerSearch\">\r\n      <Autocomplete\r\n        multiple\r\n        filterSelectedOptions\r\n        options={options}\r\n        getOptionLabel={option => option.first_name+\" \"+option.last_name}\r\n        open={open}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n        }}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        autoComplete\r\n        loading={loading}\r\n        inputValue={inputValue}\r\n        includeInputInList\r\n        disableOpenOnFocus\r\n        onChange={(event, newValue) => {setVolunteers(newValue)}}\r\n        renderInput={params => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Search Volunteer\"\r\n            variant=\"outlined\"\r\n            onChange={event => handleChange(event.target.value)}\r\n            fullWidth\r\n          />\r\n        )}\r\n        renderOption={option => {\r\n          return <div>{option.first_name+\" \"+option.last_name}</div>;\r\n        }}\r\n      />\r\n\r\n      <button type=\"button\" onClick={handleResult(volunteers)}>See</button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\auth\\LoginView.js",["599","600","601","602"],"import React from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from '../../components/Page';\r\nimport axios from 'axios';\r\nimport clsx from 'clsx';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    '&:hover': {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n  fabProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: -6,\r\n    left: -6,\r\n    zIndex: 1,\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  }\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const [isSubmitionCompleted, setSubmitionCompleted] = React.useState(false);\r\n\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const timer = React.useRef();\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  const handleButtonClick = () => {\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Login\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: 'honeypatre019@gmail.com',\r\n              password: 'test1234'\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n              password: Yup.string().max(255).required('Password is required')\r\n            })}\r\n            onSubmit={(values, { setSubmitting}) => {\r\n              setSubmitting(true);\r\n              //console.log(\"Form Data\", values);\r\n              axios({\r\n                method: 'post',\r\n                url: 'https://cors-anywhere.herokuapp.com/https://tnpvision-auth.herokuapp.com/api/login/',\r\n                data: {username: values.email, password: values.password }, \r\n              })\r\n              .then((result) => {    \r\n                  localStorage.setItem(\"token\", result.data.token);  \r\n                  console.log(result);   \t\t\t\t\t    \r\n                  if (result.status === 200){\r\n                    \r\n                  navigate('/app/dashboard', { replace: true });\r\n                  }\r\n                  else{\r\n                    console.log(result);\r\n                    alert('Invalid User');\r\n                  }\r\n                    setSubmitionCompleted(true); \r\n                     \r\n                })\r\n                .catch((error) => {\r\n                  console.log(error);\r\n                })        \r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Sign in\r\n                  </Typography>\r\n                </Box>\r\n                \r\n                <Box\r\n                  mt={3}\r\n                  mb={1}\r\n                >\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box my={2}>\r\n                \r\n                  \r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={buttonClassname}\r\n                      disabled={loading, isSubmitting}\r\n                      onClick={handleButtonClick}\r\n                      type=\"submit\"\r\n                    >\r\n                      Sign In\r\n                    </Button>\r\n                    {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Don&apos;t have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/register\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\auth\\RegisterView.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\errors\\NotFoundView.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\homepage\\Homepage.js",["603"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Typography, Grid, Box, ButtonBase, Paper} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './BodyContent.css'\r\nimport homepage from '../../static/images/homepage.svg';\r\nimport TopBar from '../../layouts/TopBars/TopBarBeforeSignIn';\r\n// /home/leet/college/Project/material-kit-react/src/layouts/MainLayout/TopBar.js\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n    },\t\r\n\t//Body Style\r\n\tpaper: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\tmargin: 'auto',\r\n\t\tmaxWidth: 500,\r\n\t\theight: '100vh'\r\n    },\r\n    image: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n    },\r\n    img: {\r\n\t\tmargin: 'auto',\r\n\t\tdisplay: 'block',\r\n\t\tmaxWidth: '100%',\r\n\t\tmaxHeight: '100%',\r\n    },\r\n}));\r\n\r\n function HomePage(props) {\r\n\r\n\tconst classes = useStyles();\r\n\t\r\n\t/*const[users, setUsers] = useState([]);\r\n\tuseEffect((props) => {\r\n\t\taxios.get(\"https://jsonplaceholder.typicode.com/todos\", {\r\n\t\t\theaders:{\r\n\t\t\t\tAuthorizartion: localStorage.getItem(\"userToken\")\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tsetUsers(res.data)\r\n\t\t\tconsole.log(res);\r\n\t\t})\r\n\t\t.catch(function (error){\r\n\t\t\tconsole.log(\"Error Fetching Data\");\r\n\t\t\tprops.showError(\"Session Invalid\");\r\n\t\t})\r\n\t}, [])*/\r\n\t\r\n\treturn (\r\n// ========================================================== HEADER CONTENT =============================================================== \r\n\t\t<div className={classes.root}>\r\n\t\t\t<Paper style={{height: '100vh', width: '100%'}}>\r\n\t\t\t\t<TopBar />\r\n{/* ========================================================== BODY CONTENT =============================================================== */}\r\n\t\t\t\t<Grid item xs={12} container spacing={5} style={{minHeight:'90vh'}} >\r\n\t\t\t\t<Grid item xs={false} sm={1} />\r\n\t\t\t\t\t<Grid item sm={5} >\r\n\t\t\t\t\t\t<ButtonBase className={classes.image} >\r\n\t\t\t\t\t\t\t<img className={classes.img} alt=\"complex\" src={homepage}/>\r\n\t\t\t\t\t\t</ButtonBase>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm container direction=\"column\" spacing={2} style={{alignSelf: 'center'}} >\r\n\t\t\t\t\t\t<Grid item sm >\r\n\t\t\t\t\t\t\t<Typography gutterBottom variant=\"subtitle1\">\r\n\t\t\t\t\t\t\t\t<Box \r\n\t\t\t\t\t\t\t\t\tfontWeight={500} m={1}\r\n\t\t\t\t\t\t\t\t\ttextAlign='center'\r\n\t\t\t\t\t\t\t\t\tfontStyle='normal'\r\n\t\t\t\t\t\t\t\t\tfontSize='35px'\r\n\t\t\t\t\t\t\t\t\tlineHeight='50px'\r\n\t\t\t\t\t\t\t\t\tletterSpacing='0.08em'>\r\n\t\t\t\t\t\t\t\t\tYour one stop solution\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box \r\n\t\t\t\t\t\t\t\t\tfontWeight={200} m={1}\r\n\t\t\t\t\t\t\t\t\ttextAlign='center'\r\n\t\t\t\t\t\t\t\t\tfontStyle='normal'\r\n\t\t\t\t\t\t\t\t\tfontSize='36px'\r\n\t\t\t\t\t\t\t\t\tlineHeight='42px'\r\n\t\t\t\t\t\t\t\t\tletterSpacing='0.08em'>\r\n\t\t\t\t\t\t\t\t\tfor\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box \r\n\t\t\t\t\t\t\t\t\tfontWeight={700} m={1}\r\n\t\t\t\t\t\t\t\t\ttextAlign='center'\r\n\t\t\t\t\t\t\t\t\tfontStyle='normal'\r\n\t\t\t\t\t\t\t\t\tfontSize='40px'\r\n\t\t\t\t\t\t\t\t\tlineHeight='47px'\r\n\t\t\t\t\t\t\t\t\tletterSpacing='0.08em'>\r\n\t\t\t\t\t\t\t\t\tManaging Placement\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box \r\n\t\t\t\t\t\t\t\t\tfontWeight={700} m={1}\r\n\t\t\t\t\t\t\t\t\ttextAlign='center'\r\n\t\t\t\t\t\t\t\t\tfontStyle='normal'\r\n\t\t\t\t\t\t\t\t\tfontSize='40px'\r\n\t\t\t\t\t\t\t\t\tlineHeight='47px'\r\n\t\t\t\t\t\t\t\t\tletterSpacing='0.08em'>\r\n\t\t\t\t\t\t\t\t\tActivities\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={false} sm={1} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveUpload\\DriveUploadForm.js",["604","605","606","607","608","609","610","611","612","613","614"],"// import React, { useState, useEffect } from 'react'\r\n// import {Formik, Form, Field, FieldArray} from 'formik'\r\n// import {TextField} from 'formik-material-ui'\r\n// import {Card, CardContent, Button, Box, Grid, Typography, MenuItem, Slider } from '@material-ui/core'\r\n// import { KeyboardDateTimePicker  } from 'formik-material-ui-pickers'\r\n// import {MuiPickersUtilsProvider} from '@material-ui/pickers';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import { Autocomplete} from 'formik-material-ui-lab';\r\n// import {top100Films, JobJocation, AllBranches} from '../data';\r\n// import { CKEditor } from '@ckeditor/ckeditor5-react';\r\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n// import MuiTextField from '@material-ui/core/TextField';\r\n// import MultipleValueTextInput from 'react-multivalue-text-input';\r\n// import parse from 'html-react-parser';\r\n// import CompanyService from '../../../services/CompanyService';\r\n// import { useForm } from '../../../components/useForm';\r\n// import StudentService from '../../../services/studentService';\r\n// import EmployeeService from '../../../services/EmployeeServices';\r\n// import Popup from \"../../../components/Popup\";\r\n// import ProfileDetails from \"../CompanyUpload/ProfileDetails\"\r\n\r\n\r\n\r\n//   const ranges = [\r\n//     {\r\n//         value: 'none',\r\n//         label: 'None',\r\n//     },\r\n//     {\r\n//       value: 'fulltime',\r\n//       label: 'Full Time, Permanent',\r\n//     },\r\n//     {\r\n//       value: 'parttime',\r\n//       label: 'Part Time',\r\n//     },\r\n//     {\r\n//       value: 'internship',\r\n//       label: 'Internship',\r\n//     },\r\n//   ];\r\n\r\n//   const departments = [\r\n//     {\r\n//       value: 'none',\r\n//       label: 'None',\r\n//     },\r\n//     {\r\n//       value: 'oncampus',\r\n//       label: 'On Campus',\r\n//     },\r\n//     {\r\n//       value: 'online',\r\n//       label: 'Online',\r\n//     },\r\n//     {\r\n//       value: 'pool',\r\n//       label: 'Pool Campus',\r\n//     },\r\n//   ];\r\n\r\n\r\n// export default function Basic(props) {\r\n\r\n//     const [emails, setEmails] = useState([])\r\n//     const [drivelocation, setDrivelocation] = useState([])\r\n\r\n//     const { addOrEdit } = props;\r\n//     const [value, setValue] = useState(\"\")\r\n//     const handleChange = (e, editor) => {\r\n//         const data = editor.getData()\r\n//         setValue(data)\r\n//     }\r\n\r\n//     const [val, setVal] = useState([0,50])\r\n//     const updateRange= (e, data) =>{\r\n//         setVal(data);\r\n//     }\r\n//     const mark = [\r\n//         {\r\n//             value: 0,\r\n//             label: \"0 CTC\"\r\n//         },\r\n//         {\r\n//             value: 50,\r\n//             label: \"50 CTC\"\r\n//         }\r\n//     ]\r\n\r\n//     const[ posts, setPosts] = useState([]);\r\n//     const getAllCompanies = () => {\r\n//         CompanyService.getAllCompanies()\r\n//           .then(res => {        \r\n//               setPosts(res.data);          \r\n//           })\r\n//           .catch( err => {\r\n//               console.log(err);\r\n//           })\r\n//     }\r\n\r\n//     const[ volposts, setVolposts] = useState([]);\r\n//     const getAllVolunteers = () => {\r\n//         StudentService.getAllStudents()\r\n//           .then(res => {        \r\n//             setVolposts(res.data);          \r\n//           })\r\n//           .catch( err => {\r\n//               console.log(err);\r\n//           })\r\n//     }\r\n\r\n//     const[ corposts, setCorosts] = useState([]);\r\n//     const getAllCoordinators = () => {\r\n//         EmployeeService.getAllEmployee()\r\n//           .then(res => {        \r\n//             setCorosts(res.data);          \r\n//           })\r\n//           .catch( err => {\r\n//               console.log(err);\r\n//           })\r\n//     }\r\n\r\n//     useEffect((props) => {\r\n//     getAllCompanies();\r\n//     getAllVolunteers();\r\n//     getAllCoordinators();\r\n//     }, [])\r\n\r\n//     const {\r\n//         resetForm\r\n//     } = useForm(true);\r\n//     const [openPopup, setOpenPopup] = useState(false) \r\n//     function openPopupWithExtraData(){\r\n//         setOpenPopup(true)\r\n//       }\r\n\r\n//     return(\r\n//     <div>\r\n//         <Grid item container>\r\n//             <Grid item xs={false} sm={1}/>\r\n//             <Grid item xs={12} sm={10}>\r\n//             <Card>   \r\n//             <CardContent>\r\n//             <Box margin={1} paddingBottom={2}>\r\n//                 <Typography variant= \"h2\" color=\"primary\" >Post a Job - Private</Typography>\r\n//             </Box>\r\n//             <Formik\r\n//             initialValues={{\r\n\r\n//                 eligiblebranches: [],\r\n//                 jobtitle:'',\r\n//                 date: new Date(),\r\n//                 drive_location: [],\r\n//                 salary: [],\r\n//                 tenth: '60',\r\n//                 twelfth: '60',\r\n//                 diploma: '60',\r\n//                 engineering: '60',\r\n//                 educational_gap:'0',\r\n//                 year_down:'0',\r\n//                 live_backlog: '0',\r\n//                 dead_backlog: '0',\r\n//                 drive_type: 'none',\r\n//                 employment_type: 'none', \r\n//                 company: {name:''},\r\n//                 rounds:[{ type: '',description:''}],\r\n//                 assigned_volunteers: [],\r\n//                 assigned_coordinators:[],\r\n\r\n//                 description: '',\r\n//                 hremails: [],\r\n//                 joblocation: [], \r\n                \r\n//             }}\r\n\r\n//             onSubmit={async (values) => {\r\n//                 //console.log(\"consoling:\", parse(value).props)\r\n//                 values.salary= val;\r\n//                 values.description= parse(value).props.children;\r\n//                 values.hremails= emails;\r\n//                 values.drive_location= drivelocation;\r\n//                 console.log(values);\r\n//                 addOrEdit(values, resetForm);\r\n//                 // await new Promise((r) => setTimeout(r, 500));\r\n//                 // alert(JSON.stringify(values, null, 2));\r\n//             }}\r\n//             >  \r\n//             {({values, errors}) => (\r\n//             <Form>\r\n//                 <Box margin={1} paddingBottom={2}>\r\n//                     <Field fullWidth component={TextField} variant=\"outlined\" name=\"jobtitle\" type=\"text\" label=\"Job Posting Headline\" helperText=\"Enter Headline\"/>    \r\n//                 </Box>\r\n//                 {/* <Box margin={1} paddingBottom={2}>\r\n//                     <Field fullWidth component={TextField} type=\"text\" name=\"company\" label=\"Comapny Name\" select variant=\"outlined\" helperText=\"Enter Company Name\" margin=\"normal\" InputLabelProps={{ shrink: true,}}>\r\n//                         {posts.map(post => (\r\n//                             <MenuItem key={post.id} value={post.name}>\r\n//                             {post.name}\r\n//                             </MenuItem>\r\n//                         ))}\r\n//                         <MenuItem><Button variant=\"contained\" color=\"primary\" onClick={()=>{openPopupWithExtraData()}}>Add Company</Button></MenuItem>\r\n//                     </Field>\r\n//                 </Box> */}\r\n//                 <Box margin={1} paddingBottom={2}>\r\n//                     <Field\r\n//                         name=\"company\"\r\n//                         component={Autocomplete}\r\n//                         options={posts}\r\n//                         getOptionLabel={option => option.name}\r\n//                         fullWidth\r\n//                         renderInput={(params) => (\r\n//                             <MuiTextField\r\n//                             {...params}\r\n//                             helperText=\"Add Company\"\r\n//                             label=\"Comapny Name\"\r\n//                             variant=\"outlined\"\r\n//                             />\r\n//                         )}\r\n//                     /> \r\n//                     <br/>\r\n//                     <Button variant=\"contained\" color=\"primary\" onClick={()=>{openPopupWithExtraData()}}>Add New Company</Button>\r\n//                 </Box>\r\n//                 <Grid container spacing={3}>\r\n//                     <Grid item xs={6}>\r\n//                         <Box margin={1} paddingBottom={2}>\r\n//                             <Field fullWidth component={TextField} type=\"text\" name=\"drive_type\" label=\"Drive Type\" select variant=\"outlined\" helperText=\"Please select Drive Type\" margin=\"normal\" InputLabelProps={{ shrink: true,}}>\r\n//                                 {departments.map((option) => (\r\n//                                     <MenuItem key={option.value} value={option.value}>\r\n//                                     {option.label}\r\n//                                     </MenuItem>\r\n//                                 ))}\r\n//                             </Field>\r\n//                         </Box>\r\n//                     </Grid>\r\n//                     <Grid item xs={6}>\r\n//                         <Box margin={1} paddingBottom={2}>\r\n//                             <Field fullWidth component={TextField} variant=\"outlined\" type=\"text\" name=\"employment_type\" label=\"Employment Type\" select helperText=\"Please select Employment Type\" margin=\"normal\" InputLabelProps={{shrink: true,}}>\r\n//                             {ranges.map((option) => (\r\n//                                 <MenuItem key={option.value} value={option.value}>\r\n//                                 {option.label}\r\n//                                 </MenuItem>\r\n//                             ))}\r\n//                             </Field>\r\n//                         </Box>\r\n//                     </Grid>\r\n//                 </Grid>\r\n                \r\n//                 <Box margin={1} paddingBottom={2}>\r\n//                     <Typography style={{color:\"grey\"}} >Enter Job Description</Typography>\r\n//                     <CKEditor \r\n//                         editor={ClassicEditor}\r\n//                         onChange={handleChange}\r\n//                     />\r\n//                 </Box>\r\n//                 <Box margin={1} paddingBottom={2}>\r\n//                     <Field\r\n//                             name=\"eligiblebranches\"\r\n//                             multiple\r\n//                             component={Autocomplete}\r\n//                             options={AllBranches}\r\n//                             getOptionLabel={(option) => option.branch}\r\n//                             fullWidth\r\n//                             renderInput={(params) => (\r\n//                                 <MuiTextField\r\n//                                 {...params}\r\n//                                 helperText=\"Add Eligible Branches\"\r\n//                                 label=\"Eligible Branches\"\r\n//                                 variant=\"outlined\"\r\n//                                 />\r\n//                             )}\r\n//                         />\r\n//                 </Box>\r\n//                 <Box margin={1} paddingBottom={2}>\r\n//                     <Field\r\n//                             name=\"joblocation\"\r\n//                             multiple\r\n//                             component={Autocomplete}\r\n//                             options={JobJocation}\r\n//                             getOptionLabel={(option) => option.city}\r\n//                             fullWidth\r\n//                             renderInput={(params) => (\r\n//                                 <MuiTextField\r\n//                                 {...params}\r\n//                                 helperText=\"Add Job Locations\"\r\n//                                 label=\"Job Locations\"\r\n//                                 variant=\"outlined\"\r\n//                                 />\r\n//                             )}\r\n//                         />\r\n//                 </Box>\r\n//                 <Grid container spacing={3}>\r\n//                     <Grid item xs={6}>\r\n//                         <Box margin={2} paddingBottom={1} paddingTop={1}>\r\n//                             <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n//                                 <Field variant=\"outlined\" component={KeyboardDateTimePicker } name=\"date\" label=\"Date Of Drive\" format=\"dd/MM/yyyy HH:mm\" helperText=\"Enter Date Of Drive\" fullWidth/>\r\n//                             </MuiPickersUtilsProvider>\r\n//                         </Box>\r\n//                     </Grid>\r\n//                     <Grid item xs={6}>\r\n//                         <Box margin={2} paddingBottom={1} paddingTop={1}>\r\n//                             <Typography style={{color:\"grey\"}} >Salary Range</Typography>\r\n//                             <Field component={Slider}\r\n//                                 name=\"salary\"\r\n//                                 value={val}\r\n//                                 onChange={updateRange}\r\n//                                 marks = {mark}\r\n//                                 step = {0.1}\r\n//                                 max = {50}\r\n//                                 valueLabelDisplay = \"auto\">   \r\n//                             </Field>         \r\n//                         </Box>\r\n//                     </Grid>\r\n//                 </Grid> \r\n                \r\n//                 <Grid container spacing={3}>\r\n//                     <Grid item xs={6}>\r\n//                         <Box margin={1} paddingBottom={2}>\r\n//                             <MultipleValueTextInput\r\n//                                 style={{height:\"50px\", color:\"grey\"}}\r\n//                                 onItemAdded={(item, allItems) => {setEmails(allItems)}}\r\n//                                 onItemDeleted={(item, allItems) => {setEmails(allItems)}}\r\n//                                 label=\"HR Emails\"\r\n//                                 name=\"emails\"\r\n//                                 placeholder=\"  Enter HR Emails\"\r\n//                             />\r\n//                         </Box>\r\n//                     </Grid>\r\n//                     <Grid item xs={6}>\r\n//                         <Box margin={1} paddingBottom={2}>\r\n//                             <MultipleValueTextInput\r\n//                                 style={{height:\"50px\", color:\"grey\"}}\r\n//                                 onItemAdded={(item, allItems) => {setDrivelocation(allItems)}}\r\n//                                 onItemDeleted={(item, allItems) => {setDrivelocation(allItems)}}\r\n//                                 label=\"Drive Locations\"\r\n//                                 name=\"drive_location\"\r\n//                                 placeholder=\"  Enter Drive Locations\"\r\n//                             />\r\n//                         </Box>\r\n//                     </Grid>\r\n//                 </Grid>  \r\n\r\n//                 <Grid container spacing={3}>\r\n//                     <Grid item xs={4}>\r\n//                         <Box margin={1} paddingBottom={2}>\r\n//                             <Field fullWidth variant=\"outlined\" component={TextField} name=\"tenth\" type=\"text\" label=\"10th Percentage\" helperText=\"Enter 10th Percentage Criteria\"/>    \r\n//                         </Box>\r\n//                     </Grid>\r\n//                     <Grid item xs={4}>\r\n//                         <Box margin={1} paddingBottom={2}>\r\n//                             <Field fullWidth variant=\"outlined\" component={TextField} name=\"twelfth\" type=\"text\" label=\"12th Percentage\" helperText=\"Enter 12th Percentage Criteria\"/>    \r\n//                         </Box>\r\n//                     </Grid>\r\n//                     <Grid item xs={4}>\r\n//                         <Box margin={1} paddingBottom={2}>\r\n//                             <Field fullWidth variant=\"outlined\" component={TextField} name=\"diploma\" type=\"text\" label=\"Diploma Percentage\" helperText=\"Enter Diploma Percentage Criteria\"/>    \r\n//                         </Box>\r\n//                     </Grid>\r\n//                 </Grid>\r\n\r\n//                 <Grid container spacing={3}>\r\n//                     <Grid item xs={4}>\r\n//                         <Box margin={1} paddingBottom={2}>\r\n//                             <Field fullWidth variant=\"outlined\" component={TextField} name=\"engineering\" type=\"number\" label=\"Engineering Percentage\" helperText=\"Enter Engineering Percentage Criteria\"/>    \r\n//                         </Box>\r\n//                     </Grid>\r\n//                     <Grid item xs={4}>\r\n//                         <Box margin={1} paddingBottom={2}>\r\n//                             <Field fullWidth variant=\"outlined\" component={TextField} name=\"educational_gap\" type=\"number\" label=\"Educational Gap\" helperText=\"Enter Educational Gap Criteria\"/>    \r\n//                         </Box>\r\n//                     </Grid>\r\n//                     <Grid item xs={4}>\r\n//                         <Box margin={1} paddingBottom={2}>\r\n//                             <Field fullWidth variant=\"outlined\" component={TextField} name=\"year_down\" type=\"number\" label=\"Year Down\" helperText=\"Enter Year Down Criteria\"/>    \r\n//                         </Box>\r\n//                     </Grid>\r\n//                 </Grid>\r\n\r\n//                 <Grid container spacing={3}>\r\n//                     <Grid item xs={6}>\r\n//                         <Box margin={1} paddingBottom={2}>\r\n//                             <Field fullWidth variant=\"outlined\" component={TextField} name=\"live_backlog\" type=\"number\" label=\"Live Backlog\" helperText=\"Enter Live Backlog Count\" />    \r\n//                         </Box>\r\n//                     </Grid>\r\n//                     <Grid item xs={6}>\r\n//                         <Box margin={1} paddingBottom={2}>\r\n//                             <Field fullWidth variant=\"outlined\" component={TextField} name=\"dead_backlog\" type=\"number\" label=\"Dead Backlog\" helperText=\"Enter Dead Backlog Count\" />    \r\n//                         </Box>\r\n//                     </Grid>\r\n//                 </Grid>\r\n                \r\n                \r\n//                 <Box margin={1} paddingBottom={2}>\r\n//                     <Field\r\n//                         name=\"assigned_volunteers\"\r\n//                         multiple\r\n//                         component={Autocomplete}\r\n//                         options={top100Films}\r\n//                         getOptionLabel={(option) => option.title}\r\n//                         fullWidth\r\n//                         renderInput={(params) => (\r\n//                             <MuiTextField\r\n//                             {...params}\r\n//                             helperText=\"Add Volunteers for Drive Management\"\r\n//                             label=\"Volunteers\"\r\n//                             variant=\"outlined\"\r\n//                             />\r\n//                         )}\r\n//                     />\r\n//                 </Box>\r\n//                 <Box margin={1} paddingBottom={2}>\r\n//                     <Field\r\n//                         name=\"assigned_coordinators\"\r\n//                         multiple\r\n//                         component={Autocomplete}\r\n//                         options={top100Films}\r\n//                         getOptionLabel={(option) => option.title}\r\n//                         fullWidth\r\n//                         renderInput={(params) => (\r\n//                             <MuiTextField\r\n//                             {...params}\r\n//                             helperText=\"Add Coordinators for Drive Management\"\r\n//                             label=\"Coordinators\"\r\n//                             variant=\"outlined\"\r\n//                             />\r\n//                         )}\r\n//                     />\r\n//                 </Box>\r\n//                 <Box margin={1} >\r\n//                     <Typography variant= \"body1\" >Enter Rounds Information</Typography>\r\n//                 </Box>\r\n//                 <Box margin={1} paddingBottom={2}>\r\n//                     <FieldArray name=\"rounds\">\r\n//                         {({push, remove,})=>(\r\n//                             <React.Fragment>\r\n//                                 {values.rounds.map((_,index) => (\r\n//                                     <div key={index}>\r\n//                                     <Grid container item spacing={3}>                                        \r\n//                                         <Grid item>\r\n//                                             <Field \r\n//                                                 name={`rounds[${index}].type`}\r\n//                                                 component={TextField}\r\n//                                                 label=\"Round Type\"\r\n//                                                 variant=\"outlined\"\r\n//                                             />\r\n//                                         </Grid>\r\n//                                         <Grid item>\r\n//                                             <Field \r\n//                                                 name={`rounds[${index}].description`}\r\n//                                                 component={TextField}\r\n//                                                 label=\"Round Description\"\r\n//                                                 variant=\"outlined\"\r\n//                                             />\r\n//                                         </Grid>\r\n//                                         {/* <Grid item>\r\n//                                             <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n//                                             <Field \r\n//                                                 name={`rounds[${index}].date`}\r\n//                                                 component={KeyboardDateTimePicker}\r\n//                                                 label=\"Round Date\"\r\n//                                                 inputVariant=\"outlined\"\r\n//                                             />\r\n//                                             </MuiPickersUtilsProvider>\r\n//                                         </Grid> */}\r\n//                                         <Grid item>\r\n//                                             <Button variant=\"contained\" color=\"primary\" onClick={() => remove(index)}>Delete Round</Button>\r\n//                                         </Grid>\r\n//                                     </Grid>\r\n//                                     </div>\r\n//                                 ))}\r\n//                                 <Grid container item spacing={3}>\r\n//                                 <Grid item>\r\n//                                     <Button variant=\"contained\" color=\"primary\" onClick={() => push({type:'', description:''})}>Add Round</Button>\r\n//                                 </Grid>\r\n//                                 </Grid>\r\n//                             </React.Fragment>\r\n//                         )}\r\n//                     </FieldArray>\r\n//                 </Box>\r\n\r\n//                 <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n//                     Submit\r\n//                 </Button>\r\n//                 <br/><br/>\r\n//             </Form>\r\n//              )}\r\n//             </Formik>\r\n\r\n//         </CardContent>\r\n//             </Card> \r\n//             </Grid>\r\n//             <Grid item xs={false} sm={1}/>\r\n//             </Grid>\r\n\r\n//             <Popup\r\n//                 title=\"Company Form\"\r\n//                 openPopup={openPopup}\r\n//                 setOpenPopup={setOpenPopup}\r\n//             >\r\n//                 <ProfileDetails addOrEdit={addOrEdit}/>\r\n//             </Popup>\r\n//     </div>\r\n//     );\r\n//     }\r\n\r\n\r\nimport React,{ useState, useEffect } from 'react'\r\nimport {Formik, Form, Field, FieldArray} from 'formik'\r\nimport {TextField} from 'formik-material-ui'\r\nimport {Card, CardContent, Button, Box, Grid, Typography, MenuItem, Slider, makeStyles } from '@material-ui/core'\r\nimport { KeyboardDateTimePicker  } from 'formik-material-ui-pickers'\r\nimport {MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { Autocomplete} from 'formik-material-ui-lab';\r\nimport {top100Films, JobJocation, AllBranches, JobJocationtemp} from '../data';\r\nimport CompanyService from '../../../services/CompanyService';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport MuiTextField from '@material-ui/core/TextField';\r\nimport MultipleValueTextInput from 'react-multivalue-text-input';\r\nimport parse from 'html-react-parser';\r\nimport DriveService from '../../../services/DriveService';\r\nimport axios from 'axios'\r\nimport Auth from '../../../auth';\r\nimport VolunteerSearch from '../../testautocomplete';\r\n//import MomentUtils from \"@date-io/moment\";\r\n//import moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.dark,\r\n      minHeight: '100%',\r\n      paddingBottom: theme.spacing(3),\r\n      paddingTop: theme.spacing(3)\r\n    }\r\n  }));\r\n\r\n  const employee_type = [\r\n    {\r\n      value: 'Full Time',\r\n      label: 'Full Time',\r\n    },\r\n    {\r\n      value: 'Internship',\r\n      label: 'Internship',\r\n    },\r\n  ];\r\n\r\n  const driveType = [\r\n    {\r\n      value: 'ON',\r\n      label: 'ON Campus',\r\n    },\r\n    {\r\n      value: 'OFF',\r\n      label: 'OFF Campus',\r\n    },\r\n    {\r\n      value: 'POOL',\r\n      label: 'Pool Campus',\r\n    },\r\n  ];\r\n\r\nexport default function Basic(props) {\r\n    const classes = useStyles();\r\n    //const [emails, setEmails] = useState([])\r\n    const [volunteers, setVolunteers] = useState([])\r\n    const [coordinators, setCoordinators] = useState([])\r\n    //const [drivelocation, setDrivelocation] = useState(\"\")\r\n    const [selectedDate, handleDateChange] = useState(new Date(\"2018-01-01T00:00:00.000Z\"));\r\n\r\n    const [value, setValue] = useState(\"\")\r\n    const handleChange = (e, editor) => {\r\n        const data = editor.getData()\r\n        setValue(data)\r\n    }\r\n\r\n    const [val, setVal] = useState([0,50])\r\n    \r\n    const updateRange= (e, data) =>{\r\n        setVal(data);\r\n    }\r\n    const mark = [\r\n        {\r\n            value: 0,\r\n            label: \"0 CTC\"\r\n        },\r\n        {\r\n            value: 50,\r\n            label: \"50 CTC\"\r\n        }\r\n    ]\r\n\r\n    const[ posts, setPosts] = useState([]);\r\n        const getAllCompanies = () => {\r\n        CompanyService.getAllCompanies()\r\n          .then(res => {        \r\n              setPosts(res.data);          \r\n          })\r\n          .catch( err => {\r\n              console.log(err);\r\n          })\r\n    }\r\n\r\n    useEffect((props) => {\r\n        getAllCompanies();\r\n    }, [])\r\n\r\n    return(\r\n    <div className={classes.root}>\r\n        <Grid item container>\r\n            <Grid item xs={false} sm={1}/>\r\n            <Grid item xs={12} sm={10}>\r\n            <Card>   \r\n            <CardContent>\r\n            <Box margin={1} paddingBottom={2}>\r\n                <Typography variant= \"h2\" color=\"primary\" >Post a Job - Private</Typography>\r\n            </Box>\r\n            <Formik\r\n            initialValues={{\r\n                eligible_branches: [{branch:null}],\r\n                jobtitle:'',\r\n                date: '',\r\n                login_time: 0,\r\n                drive_location: '',\r\n                min_salary: 0,\r\n                max_salary: 0,\r\n                tenth: 60.00,\r\n                twelth: 60.00,\r\n                diploma: 60.00,\r\n                engineering: 60.00,\r\n                educational_gap: 0,                \r\n                year_down: 0,\r\n                live_backlog: 0,\r\n                dead_backlog: 0,\r\n                drive_type: 'ON',\r\n                employment_type: 'Full Time', \r\n                company: 8,\r\n                rounds:[{\r\n                    name: \"\",\r\n                    number: 0,\r\n                    description: \"\",\r\n                    students: []\r\n                }],\r\n                assigned_coordinators: [3],\r\n                assigned_volunteers: [4],\r\n\r\n                companytest: {name:''},\r\n                //description: '',\r\n                //hremails: [],\r\n                //joblocation: [],\r\n            }}\r\n\r\n            onSubmit={async (values) => {\r\n                values.assigned_volunteers = volunteers;\r\n                values.assigned_coordinators = coordinators;\r\n                values.min_salary = val[0]\r\n                values.max_salary = val[1]\r\n                values.date = new Date(selectedDate).toISOString()\r\n                values.company = values.companytest.id\r\n            \r\n\r\n                // axios.post(\"https://tnpvision-cors.herokuapp.com/http://20.37.50.140:8000/api/drive\", values,{\r\n                //     headers: {\r\n                //         \"Content-type\": \"application/json\",\r\n                //         \"X-Requested-With\": \"XMLHttpRequest\",\r\n                //         \"Authorization\": \"Token \" + Auth.getToken() \r\n                //       }\r\n                // })\r\n\r\n                DriveService.addSingleDrive(values)\r\n                .then((result) => {    \r\n                    console.log(\"Data Added:\",result);\r\n                })\r\n                .catch((error) =>{\r\n                    console.log(error);\r\n                });\r\n                 console.log(values);\r\n            }}\r\n            >  \r\n            {({values, errors}) => (\r\n            <Form>\r\n                <Box margin={1} paddingBottom={2}>\r\n                    <VolunteerSearch/>\r\n                </Box>\r\n                <Box margin={1} paddingBottom={2}>\r\n                    <Field\r\n                        name=\"eligible_branches\"\r\n                        multiple\r\n                        component={Autocomplete}\r\n                        options={AllBranches}\r\n                        getOptionLabel={(option) => option.branch}\r\n                        fullWidth\r\n                        renderInput={(params) => (\r\n                            <MuiTextField\r\n                            {...params}\r\n                            helperText=\"Add Eligible Branches\"\r\n                            label=\"Eligible Branches\"\r\n                            variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </Box>\r\n                \r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field fullWidth component={TextField} variant=\"outlined\" name=\"jobtitle\" type=\"text\" label=\"Job Title\" />  \r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field\r\n                                name=\"companytest\"\r\n                                component={Autocomplete}\r\n                                options={posts}\r\n                                getOptionLabel={option => option.name}\r\n                                fullWidth\r\n                                renderInput={(params) => (\r\n                                    <MuiTextField\r\n                                    {...params}\r\n                                    helperText=\"Add Company\"\r\n                                    label=\"Comapny Name\"\r\n                                    variant=\"outlined\"\r\n                                    />\r\n                                )}\r\n                            /> \r\n                            <br/>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field fullWidth component={TextField} type=\"text\" name=\"drive_type\" label=\"Drive Type\" select variant=\"outlined\" margin=\"normal\" InputLabelProps={{ shrink: true,}}>\r\n                                {driveType.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Field>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field fullWidth component={TextField} variant=\"outlined\" type=\"text\" name=\"employment_type\" label=\"Employment Type\" select margin=\"normal\" InputLabelProps={{shrink: true,}}>\r\n                            {employee_type.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                            </Field>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field fullWidth variant=\"outlined\" component={TextField} name=\"login_time\" type=\"number\" label=\"Login Time\" />    \r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <Box margin={2} paddingBottom={1} paddingTop={1}>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Field variant=\"outlined\" component={KeyboardDateTimePicker } name=\"date\" value={selectedDate} onChange={handleDateChange} label=\"Date Of Drive\" format=\"yyyy/MM/dd HH:mm\" fullWidth/>\r\n                            </MuiPickersUtilsProvider>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Box margin={2} paddingBottom={1} paddingTop={1}>\r\n                            <Typography style={{color:\"grey\"}} >Salary Range</Typography>\r\n                            <Field component={Slider}\r\n                                name=\"salary\"\r\n                                value={val}\r\n                                onChange={updateRange}\r\n                                marks = {mark}\r\n                                step = {0.1}\r\n                                max = {50}\r\n                                valueLabelDisplay = \"auto\">   \r\n                            </Field>         \r\n                        </Box>\r\n                    </Grid>\r\n                </Grid> \r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field fullWidth variant=\"outlined\" component={TextField} name=\"drive_location\" type=\"text\" label=\"Drive Location\" />    \r\n                        </Box> \r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field fullWidth variant=\"outlined\" component={TextField} name=\"tenth\" type=\"text\" label=\"10th Percentage\" />    \r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field fullWidth variant=\"outlined\" component={TextField} name=\"twelth\" type=\"text\" label=\"12th Percentage\" />    \r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field fullWidth variant=\"outlined\" component={TextField} name=\"diploma\" type=\"text\" label=\"Diploma Percentage\" />    \r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field fullWidth variant=\"outlined\" component={TextField} name=\"engineering\" type=\"number\" label=\"Engineering Percentage\" />    \r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field fullWidth variant=\"outlined\" component={TextField} name=\"educational_gap\" type=\"number\" label=\"Educational Gap\" />    \r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field fullWidth variant=\"outlined\" component={TextField} name=\"year_down\" type=\"number\" label=\"Year Down\" />    \r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field fullWidth variant=\"outlined\" component={TextField} name=\"live_backlog\" type=\"number\" label=\"Live Backlog\" />    \r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Box margin={1} paddingBottom={2}>\r\n                            <Field fullWidth variant=\"outlined\" component={TextField} name=\"dead_backlog\" type=\"number\" label=\"Dead Backlog\" />    \r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                \r\n                <Box margin={1} paddingBottom={2}>\r\n                        <MultipleValueTextInput\r\n                                style={{height:\"50px\", color:\"grey\"}}\r\n                                onItemAdded={(item, allItems) => {setVolunteers(allItems)}}\r\n                                onItemDeleted={(item, allItems) => {setVolunteers(allItems)}}\r\n                                label=\"Volunteers\"\r\n                                name=\"assigned_volunteers\"\r\n                                placeholder=\"  Enter Volunteers\"\r\n                                type=\"number\"\r\n                        />\r\n                </Box>\r\n                <Box margin={1} paddingBottom={2}>\r\n                        <MultipleValueTextInput\r\n                                style={{height:\"50px\", color:\"grey\"}}\r\n                                onItemAdded={(item, allItems) => {setCoordinators(allItems)}}\r\n                                onItemDeleted={(item, allItems) => {setCoordinators(allItems)}}\r\n                                label=\"Coordinators\"\r\n                                name=\"assigned_coordinators\"\r\n                                placeholder=\"  Enter Coordinators\"\r\n                                type=\"number\"\r\n                        />\r\n                </Box>\r\n                <Box margin={1} >\r\n                    <Typography variant= \"body1\" >Enter Rounds Information</Typography>\r\n                </Box>\r\n                <Box margin={1} paddingBottom={2}>\r\n                    <FieldArray name=\"rounds\">\r\n                        {({push, remove,})=>(\r\n                            <React.Fragment>\r\n                                {values.rounds.map((_,index) => (\r\n                                    <div key={index}>\r\n                                    <Grid container item spacing={3}>                                        \r\n                                        <Grid item>\r\n                                            <Field \r\n                                                name={`rounds[${index}].name`}\r\n                                                component={TextField}\r\n                                                label=\"Round Name\"\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Field \r\n                                                name={`rounds[${index}].number`}\r\n                                                component={TextField}\r\n                                                label=\"Round Number\"\r\n                                                variant=\"outlined\"\r\n                                                type=\"number\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Field \r\n                                                name={`rounds[${index}].description`}\r\n                                                component={TextField}\r\n                                                label=\"Round Description\"\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => remove(index)}>Delete Round</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </div>\r\n                                ))}\r\n                                <Grid container item spacing={3}>\r\n                                <Grid item>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => push({name:'', number:'', description:'',students: []})}>Add Round</Button>\r\n                                </Grid>\r\n                                </Grid>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </FieldArray>\r\n                </Box>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                <br/><br/>\r\n            </Form>\r\n            )}\r\n            </Formik>\r\n\r\n        </CardContent>\r\n            </Card> \r\n            </Grid>\r\n            <Grid item xs={false} sm={1}/>\r\n            </Grid>\r\n    </div>\r\n    );\r\n    }\r\n\r\n\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveUpload\\AfterDriveUpload.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\theme\\index.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Page.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\data.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\DriveService.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\LoginService.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\CompanyService.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveListView\\ProfileDetails.js",["615","616","617","618","619"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useForm } from '../../../components/useForm';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\nimport { AllBranches } from '../data';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport StudentService from '../../../services/studentService';\r\nimport EmployeeService from '../../../services/EmployeeServices';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  CardHeader,\r\n  Divider,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\n\r\nconst initialFValues = {\r\n  id: 0,\r\n  eligible_branches: [{branch:\"\"}],\r\n  company: [{id:\"\",name:\"\",website:\"\", industry:\"\"}],\r\n  isDeleted: false,\r\n  jobtitle: \"\",\r\n  date: \"\",\r\n  login_time: 30,\r\n  drive_location: \"\",\r\n  min_salary:\"\",\r\n  max_salary:\"\",\r\n  tenth:60.0,\r\n  twelth:60.0,\r\n  diploma:60.0,\r\n  live_backlog:0,\r\n  dead_backlog:0,\r\n  drive_type:\"\",\r\n  rounds:[{name:\"\",number:\"\", description:\"\",students:[]}],\r\n  assigned_coordinators:[{id:\"\",first_name:\"\",last_name:\"\"}],\r\n  assigned_volunteers:[{id:\"\",user: [{first_name:\"\",last_name:\"\"}]}]\r\n}\r\n\r\n\r\nexport default function ProfileDetails(props) {\r\n  \r\n  const [values, setValues] = useState({\r\n    id: 0,\r\n    eligible_branches: [{branch:\"\"}],\r\n    company: [{id:\"\",name:\"\",website:\"\", industry:\"\"}],\r\n    isDeleted: false,\r\n    jobtitle: \"\",\r\n    date: \"\",\r\n    login_time: 30,\r\n    drive_location: \"\",\r\n    min_salary:\"\",\r\n    max_salary:\"\",\r\n    tenth:60.0,\r\n    twelth:60.0,\r\n    diploma:60.0,\r\n    live_backlog:0,\r\n    dead_backlog:0,\r\n    drive_type:\"\",\r\n    rounds:[{name:\"\",number:\"\", description:\"\",students:[]}],\r\n    assigned_coordinators:[{id:\"\",first_name:\"\",last_name:\"\"}],\r\n    assigned_volunteers:[{id:\"\",user: [{first_name:\"\",last_name:\"\"}]}],\r\n  });\r\n\r\n  const { addOrEdit, recordForEdit } = props\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    setErrors({\r\n      ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every(x => x === \"\")\r\n  }\r\n  const {\r\n    errors,\r\n    setErrors,\r\n    resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (validate()) {\r\n      const data = {\r\n        //\"id\": values.id,\r\n        \"eligible_branches\": values.eligible_branches,\r\n        \"jobtitle\": values.jobtitle,\r\n        \"date\": values.date, \r\n        \"login_time\": values.login_time,\r\n        \"drive_location\": values.drive_location,\r\n        \"min_salary\": values.min_salary,\r\n        \"max_salary\": values.max_salary,\r\n        \"tenth\": values.tenth,\r\n        \"twelth\": values.twelth,\r\n        \"diploma\": values.diploma,\r\n        \"engineering\": values.engineering,\r\n        \"educational_gap\": values.educational_gap,\r\n        \"year_down\": values.year_down,\r\n        \"live_backlog\": values.live_backlog,\r\n        \"dead_backlog\": values.dead_backlog,\r\n        \"drive_type\": values.drive_type,\r\n        \"employment_type\": values.employment_type,\r\n        \"company\": values.company,\r\n        \"rounds\": values.rounds,\r\n        \"assigned_coordinators\": values.assigned_coordinators,\r\n        \"assigned_volunteers\": values.assigned_volunteers,\r\n      }\r\n\r\n      addOrEdit(values, resetForm);\r\n      axios.patch(\"https://tnpvision-cors.herokuapp.com/http://20.37.50.140:8000/api/drive/\" + values.id+\"/\", data)\r\n        .then(res =>{\r\n          console.log(\"res\", res);\r\n        }).catch(error => {\r\n          console.log(error);\r\n          \r\n        });\r\n    }\r\n  }\r\n  const[ volposts, setVolposts] = useState([]);\r\n  const getAllVolunteers = () => {\r\n      StudentService.getAllStudents()\r\n        .then(res => {        \r\n          setVolposts(res.data);          \r\n        })\r\n        .catch( err => {\r\n            console.log(err);\r\n        })\r\n  }\r\n\r\n  const[ corposts, setCorosts] = useState([]);\r\n  const getAllCoordinators = () => {\r\n      EmployeeService.getAllEmployee()\r\n        .then(res => {        \r\n          setCorosts(res.data);          \r\n        })\r\n        .catch( err => {\r\n            console.log(err);\r\n        })\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getAllVolunteers();\r\n    getAllCoordinators();\r\n    if (recordForEdit != null) {\r\n      setValues({\r\n        ...values,\r\n        // 'id': recordForEdit.id,\r\n        // 'jobtitle':recordForEdit.jobtitle,\r\n        // 'drive_location':recordForEdit.drive_location,\r\n\r\n        \"id\": recordForEdit.id,\r\n        \"eligible_branches\": recordForEdit.eligible_branches,\r\n        \"jobtitle\": recordForEdit.jobtitle,\r\n        \"date\": recordForEdit.date,\r\n        \"login_time\": recordForEdit.login_time,\r\n        \"drive_location\": recordForEdit.drive_location,\r\n        \"min_salary\": recordForEdit.min_salary,\r\n        \"max_salary\": recordForEdit.max_salary,\r\n        \"tenth\": recordForEdit.tenth,\r\n        \"twelth\": recordForEdit.twelth,\r\n        \"diploma\": recordForEdit.diploma,\r\n        \"engineering\": recordForEdit.engineering,\r\n        \"educational_gap\": recordForEdit.educational_gap,\r\n        \"year_down\": recordForEdit.year_down,\r\n        \"live_backlog\": recordForEdit.live_backlog,\r\n        \"dead_backlog\": recordForEdit.dead_backlog,\r\n        \"drive_type\": recordForEdit.drive_type,\r\n        \"employment_type\": recordForEdit.employment_type,\r\n        \"company\": recordForEdit.company,\r\n        \"rounds\": recordForEdit.rounds,\r\n        \"assigned_coordinators\": recordForEdit.assigned_coordinators,\r\n        \"assigned_volunteers\": recordForEdit.assigned_volunteers,\r\n      });\r\n      console.log(\"IN Detaisl : \", values);\r\n      console.log(\"IN Detaisl : \", recordForEdit);\r\n    }\r\n  }, [recordForEdit])\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      autoComplete=\"off\"\r\n      noValidate\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Drive Details\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n        <Typography variant=\"h6\">Drive ID: {values.id}</Typography><br/><br/>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            {/* <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <Autocomplete\r\n                multiple\r\n                options={AllBranches}\r\n                getOptionLabel={(option) => option.branch}\r\n                fullWidth\r\n                renderInput={(params) => <TextField {...params} label=\"Eligible Branches\" variant=\"outlined\" />}\r\n                value={values.eligible_branches}\r\n              />\r\n            </Grid> */}\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the Company\"\r\n                label=\"Company\"\r\n                name=\"company\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.company.name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the Job Title\"\r\n                label=\"Job Title\"\r\n                name=\"jobtitle\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.jobtitle}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the Drive Date\"\r\n                label=\"Date\"\r\n                name=\"date\"\r\n                onChange={handleChange}\r\n                required\r\n                value={moment (new Date(values.date)).format(\"DD/MM/YYYY hh:mm a\")}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the Login Time\"\r\n                label=\"Login Time\"\r\n                name=\"login_time\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.login_time}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the Drive Location\"\r\n                label=\"Drive Loocation\"\r\n                name=\"drive_location\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.drive_location}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the Minimum Salary\"\r\n                label=\"Minimum Salary\"\r\n                name=\"min_salary\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.min_salary}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the Maximum Salary\"\r\n                label=\"Minimum Salary\"\r\n                name=\"max_salary\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.max_salary}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the Tenth Percentage Criteria\"\r\n                label=\"Tenth Percentage Criteria\"\r\n                name=\"tenth\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.tenth}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the Twelth Percentage Criteria\"\r\n                label=\"Twelth Percentage Criteria\"\r\n                name=\"twelth\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.twelth}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the Diploma Percentage Criteria\"\r\n                label=\"Diploma Percentage Criteria\"\r\n                name=\"diploma\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.diploma}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the Live Backlog Criteria\"\r\n                label=\"Live Backlog Criteria\"\r\n                name=\"live_backlog\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.live_backlog}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the Dead Backlog Criteria\"\r\n                label=\"Dead Backlog Criteria\"\r\n                name=\"dead_backlog\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.dead_backlog}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the Drive Type\"\r\n                label=\"Drive Type\"\r\n                name=\"drive_type\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.drive_type}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Drive Location\"\r\n                name=\"drive_location\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.drive_location}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\theme\\typography.js",["620"],"export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\theme\\shadows.js",["621"],"export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveListView\\index.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\TopBars\\TopBarBeforeSignIn.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\SDashboardLayout\\index.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\EDashboardLayout\\index.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\ImportStudent\\index.js",["622"],"import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from '../../components/Page';\r\nimport ImportExcel from './ImportExcel';\r\n// import Toolbar from './Toolbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst ImportStudent = () => {\r\n  const classes = useStyles();\r\n//   const [customers] = useState(data);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      //title=\"Customers\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        {/* <Toolbar /> */}\r\n        <Box mt={3}>\r\n          <ImportExcel />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ImportStudent;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\DashboardLayout\\index.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\MainLayout\\index.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\CompanyListView\\index.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\account\\AccountView\\index.js",["623","624"],"import React, { useState, useEffect} from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from '../../../components/Page';\r\nimport Profile from './Profile';\r\nimport ProfileDetails from './ProfileDetails';\r\nimport axios from \"axios\";\r\nimport Auth from '../../../auth'\r\nimport StudentService from '../../../services/studentService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    gender: \"\",\r\n    group: 0,\r\n    id: 0,\r\n  })\r\n\r\n  useEffect((props) => {\r\n    StudentService.getStudentDetail()\r\n      .then(function(res){\r\n        const { data} = res;\r\n        console.log(\"data: \",data);\r\n        setUserData({\r\n          email: data.user.email,\r\n          first_name: data.user.first_name,\r\n          last_name: data.user.last_name,\r\n          gender: data.gender,\r\n          group: data.group,\r\n          id: data.id,\r\n        });\r\n      }).catch(error =>{\r\n        console.log(error);\r\n        \r\n      })\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Account\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Profile userData={userData} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <ProfileDetails  userData={userData} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\customer\\CustomerListView\\index.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\student\\StudentListView\\index.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\index.js",["625","626","627","628","629","630","631","632","633","634","635"],"import React from 'react';\nimport { Container, Grid, Typography, makeStyles, Divider } from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport EligibleDrives from './EligibleDrives';\nimport VolunteeringDrives from './VolunteeringDrives';\nimport LatestOrders from './LatestOrders';\nimport LatestProducts from './LatestProducts';\nimport Sales from './Sales';\nimport TasksProgress from './TasksProgress';\nimport TotalCustomers from './TotalCustomers';\nimport TotalProfit from './TotalProfit';\nimport TrafficByDevice from './TrafficByDevice';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  title: {\n    paddingTop: '15px'\n  },\n}));\n\nconst Dashboard = props => {\n  const classes = useStyles();\n  const { history } = props;\n  return (\n    <Page className={classes.root} title=\"Dashboard\">\n      <Container maxWidth={false}>        \n          <EligibleDrives />\n        </Container>\n      <Container maxWidth={false}>      \n        <VolunteeringDrives />\n      \n      {/* <Grid item lg={3} sm={6} xl={3} xs={12}>\n        <TotalCustomers />\n      </Grid>\n      <Grid item lg={3} sm={6} xl={3} xs={12}>\n        <TasksProgress />\n      </Grid>\n      <Grid item lg={3} sm={6} xl={3} xs={12}>\n        <TotalProfit />\n      </Grid>\n      <Grid item lg={8} md={12} xl={9} xs={12}>\n        <Sales />\n      </Grid>\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <TrafficByDevice />\n      </Grid>\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <LatestProducts />\n      </Grid>\n      <Grid item lg={8} md={12} xl={9} xs={12}>\n        <LatestOrders />\n        </Grid> */}\n      </Container >\n    </Page >\n  );\n};\n\nexport default Dashboard;\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\product\\ProductListView\\index.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employee\\EmployeeListView\\index.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\index.js",["636"],"import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from '../../../components/Page';\r\nimport Budget from './Budget';\r\nimport LatestOrders from './LatestOrders';\r\nimport LatestProducts from './LatestProducts';\r\nimport Sales from './Sales';\r\nimport TasksProgress from './TasksProgress';\r\nimport TotalCustomers from './TotalCustomers';\r\nimport TotalProfit from './TotalProfit';\r\nimport TrafficByDevice from './TrafficByDevice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Dashboard = (props) => {\r\n  const classes = useStyles();\r\n  const { history} = props;\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Student Dashboard\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <Budget />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalCustomers />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalProfit />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <Sales />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TrafficByDevice />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <LatestProducts />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <LatestOrders />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\index.js",["637"],"import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from '../../../components/Page';\r\nimport Budget from './Budget';\r\nimport LatestOrders from './LatestOrders';\r\nimport LatestProducts from './LatestProducts';\r\nimport Sales from './Sales';\r\nimport TasksProgress from './TasksProgress';\r\nimport TotalCustomers from './TotalCustomers';\r\nimport TotalProfit from './TotalProfit';\r\nimport TrafficByDevice from './TrafficByDevice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Dashboard = (props) => {\r\n  const classes = useStyles();\r\n  const { history} = props;\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Dashboard\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n          <Budget />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalCustomers />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalProfit />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <Sales />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TrafficByDevice />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <LatestProducts />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <LatestOrders />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\settings\\SettingsView\\index.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employeeAccount\\employeeAccountView\\index.js",["638","639"],"import React, { useState, useEffect} from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from '../../../components/Page';\r\nimport Profile from './Profile';\r\nimport ProfileDetails from './ProfileDetails';\r\nimport axios from \"axios\";\r\nimport Auth from '../../../auth'\r\nimport StudentService from '../../../services/studentService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    group: 0,\r\n    id: 0,\r\n    college: \"\",\r\n    mobile: \"\",\r\n    doj: \"\",\r\n    department: \"\",\r\n    designation: \"\"\r\n  })\r\n\r\n  useEffect((props) => {\r\n    StudentService.getStudentDetail()\r\n      .then(function(res){\r\n        const { data} = res;\r\n        console.log(\"data idex\", data);\r\n        \r\n        setUserData({\r\n          email: data.user.email,\r\n          first_name: data.user.first_name,\r\n          last_name: data.user.last_name,\r\n          group: data.group,\r\n          id: data.id,\r\n          college: data.college,\r\n          mobile: data.mobile,\r\n          doj: data.doj,\r\n          department: data.department,\r\n          designation: data.designation\r\n        });\r\n      }).catch(error =>{\r\n        console.log(error);\r\n        \r\n      })\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Account\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Profile userData={userData} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <ProfileDetails  userData={userData} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\EmployeeServices.js",["640"],"import http from './HttpUrl';\r\nimport httpauth from './AuthorizedHttpUrl';\r\n\r\nclass EmployeeServices{\r\n    // getAll(){\r\n    //     return http.get('/register');\r\n    // }\r\n    // getSingle(email){\r\n    //     return http.get(`/register/${email}`);\r\n    // }\r\n    // create(data) {\r\n    //     return http.post(\"/register/\", data);\r\n    // }\r\n    // getUser(email, password){\r\n    //     return http.post(\"/login\", email, password);\r\n    // }\r\n\r\n    getAllEmployee() {\r\n        return httpauth.get('/api/employees/')\r\n    }\r\n\r\n    getSingleEmployee(data){\r\n        return httpauth.get(`/api/employee/${data.id}`)\r\n    }\r\n\r\n    getEmployeeDetail(){\r\n        return httpauth.get('/api/user/')\r\n    }\r\n\r\n    deleteEmployee(data){\r\n        return httpauth.delete(`/api/employee/${data.id}`)\r\n    }\r\n}\r\n\r\nexport default new EmployeeServices();","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\studentService.js",["641"],"import http from './HttpUrl';\r\nimport httpauth from './AuthorizedHttpUrl';\r\n\r\nclass StudentService {\r\n    getAllStudents() {\r\n        return httpauth.get('/api/students/')\r\n    }\r\n\r\n    getSingleStudent(data){\r\n        return httpauth.get(`/api/student/${data.id}`)\r\n    }\r\n\r\n    getStudentDetail(){\r\n        return httpauth.get('/api/user/')\r\n    }\r\n\r\n    deleteStudent(data){\r\n        return httpauth.delete(`/api/student/${data.id}`)\r\n    }\r\n}\r\n\r\nexport default new StudentService();","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Login.js",["642","643","644"],"import React, { useEffect, useState } from 'react';\r\nimport { Dialog, DialogTitle, DialogActions, DialogContent, TextField, DialogContentText, Button, Grid, ButtonBase } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ForgotPassword from './ForgotPassword/ForgotPassword'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n//import MuiAlert from '@material-ui/lab/Alert';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport loginpage from '../static/images/loginpage.svg';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n// import DataServices from '../../services/Services'\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport LoginService from '../services/LoginService';\r\nimport CustomSnackbar from './Snackbar/snackbar';\r\nimport Auth from '../auth';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\t'& > * + *': {\r\n\t\t\tmarginTop: theme.spacing(2),\r\n\t\t},\r\n\t},\r\n\ttextField: {\r\n\t\tmargin: theme.spacing(2),\r\n\t\tjustifyContent: 'flex-start',\r\n\t\tmarginTop: theme.spacing(-2)\r\n\r\n\t},\r\n\tbutton: {\r\n\t\tmarginLeft: '15px',\r\n\t\theight: 'auto',\r\n\t\tmarginTop: '6px',\r\n\t\tmarginBottom: 'auto',\r\n\t},\r\n\tdialogEffect: {\r\n\t\tmaxWidth: 'xl',\r\n\t},\r\n\timage: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t},\r\n\timg: {\r\n\t\tmargin: 'auto',\r\n\t\tdisplay: 'block',\r\n\t\tmaxWidth: '100%',\r\n\t\tmaxHeight: '100%',\r\n\t},\r\n\tsectionMobile: {\r\n\t\tdisplay: 'flex',\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\tvariant: 'text'\r\n\t\t}\r\n\t}\r\n}));\r\n\r\nfunction Login(props) {\r\n\tconst classes = useStyles();\r\n\tconst [isLogin, setIsLogin] = useState(false)\r\n\r\n\t//===================================== Dialog Box =====================================\r\n\tconst [loginOpen, setLoginOpen] = React.useState(false);\r\n\tconst [isSubmitionCompleted, setSubmitionCompleted] = React.useState(false);\r\n\r\n\tconst handleLoginOpen = () => {\r\n\t\tsetSubmitionCompleted(false);\r\n\t\tsetLoginOpen(true);\r\n\t};\r\n\tconst handleLoginClose = () => {\r\n\t\tsetLoginOpen(false);\r\n\t};\r\n\r\n\t//===================================== SnackBar =====================================\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\r\n\tconst handleClose = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst navigate = useNavigate();\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\temail: '',\r\n\t\t\tpassword: ''\r\n\t\t},\r\n\t\tonSubmit: (values, { setSubmitting }) => {\r\n\t\t\t\r\n\t\t\tsetSubmitting(true);\r\n\t\t\tLoginService.login({ username: values.email, password: values.password })\r\n\t\t\t\t.then(result => {\r\n\t\t\t\t\tconsole.log(result.data.data);\r\n\t\t\t\t\tif (result.status === 200 && result.data.data.token !== \"\") {\r\n\t\t\t\t\t\tAuth.authenticateUser(result.data.data.token, result.data.data.expiry)\r\n\t\t\t\t\t\t//localStorage.setItem('expiry', result.data.data.expiry); \r\n\t\t\t\t\t\t//localStorage.setItem(\"token\", result.data.data.token);\r\n\t\t\t\t\t\tsetIsLogin(true)\r\n\t\t\t\t\t\tif (result.data.data.group === 1)\r\n\t\t\t\t\t\t\tnavigate('/student/dashboard', { replace: true });\r\n\t\t\t\t\t\telse if (result.data.data.group === 2 || result.data.data.group === 3 || result.data.data.group === 4)\r\n\t\t\t\t\t\t\tnavigate('/employee/dashboard', { replace: true });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetSubmitionCompleted(true);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\tsetIsLogin(false)\r\n\t\t\t\t\talert(\"Wrong Username or Password\");\r\n\t\t\t\t\tsetSubmitting(false)\r\n\r\n\t\t\t\t})\r\n\t\r\n\t\t},\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\temail: Yup.string().email('Invalid Email').required('Required'),\r\n\t\t\tpassword: Yup.string().min(5, 'Minimum 5 characters required').required('Required'),\r\n\t\t})\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Button className={classes.button} variant='outlined' style={{ color: \"white\" }} onClick={handleLoginOpen}>Login</Button>\r\n\t\t\t\t<Dialog open={loginOpen} onClose={handleLoginClose} className={classes.dialogEffect} fullWidth component={'span'}>\r\n\r\n\t\t\t\t\t{!isSubmitionCompleted && <React.Fragment>\r\n\t\t\t\t\t\t<DialogTitle>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item xs={false} sm={11}>\r\n\t\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={false} sm={1} style={{ textAlign: 'end' }}>\r\n\t\t\t\t\t\t\t\t\t<CancelIcon onClick={handleLoginClose} variant='contained' color=\"primary\" />\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t\t<Grid container justify='center' style={{ marginBottom: '10px' }}>\r\n\t\t\t\t\t\t\t<Grid item xs={false} sm={6}>\r\n\t\t\t\t\t\t\t\t<ButtonBase className={classes.image} >\r\n\t\t\t\t\t\t\t\t\t<img className={classes.img} alt=\"complex\" src={loginpage} />\r\n\t\t\t\t\t\t\t\t</ButtonBase>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={false} sm>\r\n\t\t\t\t\t\t\t\t<form onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t\t\t\t\t<Box border={1} borderColor=\"grey.500\" margin='10px' borderRadius='5px'>\r\n\t\t\t\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur={formik.handleBlur}\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={formik.errors.email && formik.touched.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\thelperText={(formik.errors.email && formik.touched.email) && formik.errors.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={formik.values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur={formik.handleBlur}\r\n\t\t\t\t\t\t\t\t\t\t\t\terror={formik.errors.password && formik.touched.password}\r\n\t\t\t\t\t\t\t\t\t\t\t\thelperText={(formik.errors.password && formik.touched.password) && formik.errors.password}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={formik.values.password}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<DialogContentText style={{ marginTop: '8px' }} component={'div'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ForgotPassword  />\r\n\t\t\t\t\t\t\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t<DialogActions className={classes.textField}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button onClick={handleClick} type=\"submit\" color=\"primary\" variant='contained' disabled={formik.isSubmitting}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Dialog>\r\n\t\t\t</React.Fragment>\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t{isLogin &&\r\n\t\t\t\t<Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n\t\t\t\t\t<CustomSnackbar onClose={handleClose} severity=\"success\" message=\"You are Logged In\" />\r\n\t\t\t\t</Snackbar>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default Login;","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\CompanyListView\\Toolbar.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\CompanyListView\\Results.js",["645"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport Popup from \"../../../components/Popup\";\r\nimport ProfileDetails from \"./ProfileDetails\"\r\nimport {\r\n  Box,\r\n  Card,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CompanyService from '../../../services/CompanyService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  delete:{\r\n    backgroundColor: \"red\",\r\n    marginLeft: \"5px\"\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, ...rest }) => {\r\n\r\n  const classes = useStyles();\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const[ posts, setPosts] = useState([]);\r\n\r\n  const getAllCompanies = () => {\r\n    CompanyService.getAllCompanies()\r\n      .then(res => {        \r\n          setPosts(res.data);          \r\n      })\r\n      .catch( err => {\r\n          console.log(err);\r\n      })\r\n  }\r\n\r\n    useEffect((props) => {\r\n      getAllCompanies();\r\n    }, [])\r\n\r\n    const deleteCompany = (id) => {\r\n      console.log(\"Student in func : \"+ id);\r\n      CompanyService.deleteCompanies({id: id})\r\n      .then(res => {\r\n          console.log(\"in Result  : \"+res.data);\r\n          getAllCompanies();                \r\n      })\r\n      .catch( err => {\r\n          console.log(err);\r\n      })\r\n\r\n    }\r\n    function openPopupWithExtraData(id){\r\n      console.log(\"Student in func : \"+ id);\r\n      CompanyService.getSingleCompany({id: id})\r\n      .then(res => {\r\n          console.log(\"in Result  : \"+res.data);                \r\n          openInPopup(res.data);\r\n      })\r\n      .catch( err => {\r\n          console.log(err);\r\n      })\r\n    }\r\n\r\n    const addOrEdit = (company, resetForm) => {\r\n      if (company.id === 0)\r\n          console.log(\"Inserted\");\r\n      else\r\n          console.log(\"Edited\");\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n      console.log(\"From add or edit\")\r\n      getAllCompanies();\r\n  }\r\n    const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      // className={clsx(classes.root, className)}\r\n      // {...rest}\r\n    >\r\n        <PerfectScrollbar>\r\n          <Box minWidth={1050}>\r\n          \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  ID\r\n                </TableCell>\r\n                <TableCell>\r\n                  Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Website\r\n                </TableCell>\r\n                <TableCell>\r\n                  Industry\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {\r\n                posts.map((company) => (\r\n                <TableRow key={company.id}>\r\n                  <TableCell>\r\n                    {company.id} \r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {company.name}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {company.website}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {company.industry}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  <Fab size=\"small\" color=\"primary\" aria-label=\"edit\" onClick={()=>{openPopupWithExtraData(company.id)}}>\r\n                    <EditIcon />\r\n                  </Fab>\r\n                  <Fab size=\"small\" color=\"secondary\"  className={classes.delete} aria-label=\"delete\" onClick={()=>{deleteCompany(company.id)}}>\r\n                    <DeleteIcon />\r\n                  </Fab>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )    \r\n          )}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n        </PerfectScrollbar>\r\n\r\n     <Popup\r\n        title=\"Company Form\"\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n      >\r\n        <ProfileDetails\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} />\r\n    </Popup>\r\n    </Card>\r\n  )\r\n};\r\n\r\nResults.propTypes = {\r\n  // className: PropTypes.string,\r\n  // customers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\TrafficByDevice.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\settings\\SettingsView\\Password.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\settings\\SettingsView\\Notifications.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Register\\RegisterDialog.js",["646"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {withRouter} from 'react-router-dom'\r\nimport RegisterContent from './RegisterContent';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport {makeStyles, Grid, Box} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    button:{\r\n\t\tmarginLeft: '15px',\r\n\t\theight: 'auto',\r\n\t\tmarginTop : '6px',\r\n\t\tmarginBottom: 'auto',\r\n    },\r\n}));\r\n\r\nfunction FormDialog(props) {\r\n  \r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className={classes.button} variant=\"outlined\" style={{color: \"white\"}} onClick={handleClickOpen}>\r\n        Register\r\n      </Button>\r\n      <Dialog maxWidth='xs' fullWidth open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">\r\n              <Grid container>\r\n                  <Grid item xs={false} sm={11}>\r\n                      Registration\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={1}>\r\n                      <CancelIcon color=\"primary\" fontSize=\"large\" onClick={handleClose}/>\r\n                  </Grid> \r\n              </Grid>     \r\n        </DialogTitle>\r\n        <Box border= {1} borderColor= \"grey.500\" margin= '20px' borderRadius= '5px'>\r\n        <DialogContent>\r\n            <RegisterContent/>\r\n        </DialogContent>\r\n        </Box>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormDialog;","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employeeAccount\\employeeAccountView\\Profile.js",["647","648","649","650"],"import React, { useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from \"axios\";\r\nimport Auth from '../../../auth'\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, userData, ...rest }) => {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {userData.first_name+\" \"+userData.last_name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${user.city} ${user.country}`}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employeeAccount\\employeeAccountView\\ProfileDetails.js",["651","652","653","654","655","656","657","658","659","660","661"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport Controls from \"../../../components/controls/Controls\";\r\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\r\n// import HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { useForm, Form } from '../../../components/useForm';\r\n// import { ReactMultiEmailCustom } from 'react-multi-email-custom';\r\n// import 'react-multi-email-custom/style.css';\r\n\r\n\r\n\r\nconst genderItems = [\r\n  { id: 'M', title: 'Male' },\r\n  { id: 'F', title: 'Female' },\r\n  { id: 'O', title: 'Other' },\r\n]\r\n\r\nconst initialFValues = {\r\n  id: 0,\r\n  user: {\r\n    email: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\"\r\n  },\r\n  gender: \"M\",\r\n  isDeleted: false,\r\n  isProfileComplete: false\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className, userData, ...rest }) => {\r\n  const classes = useStyles();\r\n  // const [emails,setEmails] = useState([])\r\n  // const myStyle = {};\r\n  const [values, setValues] = useState({\r\n    \"email\" : \"\",\r\n    \"first_name\" : \"\",\r\n    \"last_name\" : \"\",\r\n    \"gender\" : \"M\",\r\n    \"group\" : 0,\r\n    \"id\" : 0,\r\n  });\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('first_name' in fieldValues)\r\n      temp.first_name = fieldValues.first_name ? \"\" : \"This field is required.\"\r\n    if ('last_name' in fieldValues)\r\n      temp.last_name = fieldValues.last_name ? \"\" : \"This field is required.\"\r\n    if ('email' in fieldValues)\r\n      temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n    setErrors({\r\n      ...temp\r\n    })\r\n\r\n    if (fieldValues == values)\r\n      return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const {\r\n    valuess,\r\n    setValuess,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    console.log(\"e\",e);\r\n    \r\n    if (validate()) {\r\n      const data = {\r\n        \"user\": {\r\n          \"email\": values.email,\r\n          \"first_name\": values.first_name,\r\n          \"last_name\": values.last_name\r\n        },\r\n        \"gender\": values.gender,\r\n      }\r\n\r\n      axios.patch(\"https://tnpvision-cors.herokuapp.com/https://tnpvisionapi.herokuapp.com/api/student/\" + values.id, data)\r\n        .then(res =>{\r\n          console.log(\"res\", res);\r\n        }).catch(error => {\r\n          console.log(error);\r\n          \r\n        });\r\n    }\r\n  }\r\n\r\n  useEffect(() =>{\r\n    if(userData !=null){\r\n      setValues({\r\n        ...values,\r\n        \"email\" : userData.email,\r\n        \"first_name\" : userData.first_name,\r\n        \"last_name\" : userData.last_name,\r\n        \"gender\" : userData.gender,\r\n        \"group\" : userData.group,\r\n        \"id\" : userData.id,\r\n      })\r\n    }\r\n  },[userData])\r\n \r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      autoComplete=\"off\"\r\n      noValidate\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Student Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"first_name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.first_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"last_name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.last_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              {/* <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              /> */}\r\n              <Controls.RadioGroup\r\n                name=\"gender\"\r\n                label=\"Gender\"\r\n                value={values.gender}\r\n                onChange={handleChange}\r\n                items={genderItems}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <FormControl>\r\n                <FormControlLabel\r\n                  control={<MuiCheckbox\r\n                    name=\"isProfileComplete\"\r\n                    disabled\r\n                    color=\"primary\"\r\n                    checked={values.isProfileComplete}\r\n                  />}\r\n                  label=\"Is Profile Completed  ?\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <FormControl>\r\n                <FormControlLabel\r\n                  control={<MuiCheckbox\r\n                    name=\"isDeleted\"\r\n                    disabled\r\n                    color=\"primary\"\r\n                    checked={values.isDeleted}\r\n                  />}\r\n                  label=\"Is Deleted ?\"\r\n                />\r\n              </FormControl>\r\n              {/* <FormControl>\r\n              <ReactMultiEmailCustom\r\n                style={myStyle}\r\n                emails={emails}\r\n                onChange={_emails => {\r\n                  setEmails(_emails);\r\n                }}\r\n                getLabel={(\r\n                  email,\r\n                  index,\r\n                  removeEmail,\r\n                ) => {\r\n                  return (\r\n                    <label key={index}>\r\n                      {email}\r\n                      <HighlightOffIcon color=\"secondary\" name=\"delete\" onClick={() => removeEmail(index)} />\r\n                    </label>\r\n                  );\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <label>react-multi-email-custom value</label>\r\n              {emails.join(', ') || 'empty'}\r\n            </FormControl> */}\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\TasksProgress.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\TotalCustomers.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\TotalProfit.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\Sales.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\LatestOrders.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\LatestProducts.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\EmployeeDashboardView\\Budget.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\TrafficByDevice.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\TotalProfit.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\TotalCustomers.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\TasksProgress.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\Sales.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\LatestOrders.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\LatestProducts.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\DashboardView\\Budget.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employee\\EmployeeListView\\data.js",["662"],"import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'West Virginia',\r\n      city: 'Parkersburg',\r\n      street: '2849 Fulton Street'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_3.png',\r\n    createdAt: 1555016400000,\r\n    email: 'ekaterina.tankova@devias.io',\r\n    name: 'Ekaterina Tankova',\r\n    phone: '304-428-3097'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Bristow',\r\n      city: 'Iowa',\r\n      street: '1865  Pleasant Hill Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_4.png',\r\n    createdAt: 1555016400000,\r\n    email: 'cao.yu@devias.io',\r\n    name: 'Cao Yu',\r\n    phone: '712-351-5711'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Georgia',\r\n      city: 'Atlanta',\r\n      street: '4894  Lakeland Park Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_2.png',\r\n    createdAt: 1555016400000,\r\n    email: 'alexa.richardson@devias.io',\r\n    name: 'Alexa Richardson',\r\n    phone: '770-635-2682'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Ohio',\r\n      city: 'Dover',\r\n      street: '4158  Hedge Street'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_5.png',\r\n    createdAt: 1554930000000,\r\n    email: 'anje.keizer@devias.io',\r\n    name: 'Anje Keizer',\r\n    phone: '908-691-3242'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Texas',\r\n      city: 'Dallas',\r\n      street: '75247'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_6.png',\r\n    createdAt: 1554757200000,\r\n    email: 'clarke.gillebert@devias.io',\r\n    name: 'Clarke Gillebert',\r\n    phone: '972-333-4106'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Bakerfield',\r\n      street: '317 Angus Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_1.png',\r\n    createdAt: 1554670800000,\r\n    email: 'adam.denisov@devias.io',\r\n    name: 'Adam Denisov',\r\n    phone: '858-602-3409'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Redondo Beach',\r\n      street: '2188  Armbrester Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_7.png',\r\n    createdAt: 1554325200000,\r\n    email: 'ava.gregoraci@devias.io',\r\n    name: 'Ava Gregoraci',\r\n    phone: '415-907-2647'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Nevada',\r\n      city: 'Las Vegas',\r\n      street: '1798  Hickory Ridge Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_8.png',\r\n    createdAt: 1523048400000,\r\n    email: 'emilee.simchenko@devias.io',\r\n    name: 'Emilee Simchenko',\r\n    phone: '702-661-1654'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Michigan',\r\n      city: 'Detroit',\r\n      street: '3934  Wildrose Lane'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_9.png',\r\n    createdAt: 1554702800000,\r\n    email: 'kwak.seong.min@devias.io',\r\n    name: 'Kwak Seong-Min',\r\n    phone: '313-812-8947'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Utah',\r\n      city: 'Salt Lake City',\r\n      street: '368 Lamberts Branch Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_10.png',\r\n    createdAt: 1522702800000,\r\n    email: 'merrile.burgett@devias.io',\r\n    name: 'Merrile Burgett',\r\n    phone: '801-301-7894'\r\n  }\r\n];\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employee\\EmployeeListView\\Toolbar.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employee\\EmployeeListView\\Results.js",["663","664","665","666","667","668","669","670","671"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport EmployeeService from '../../../services/EmployeeServices';\r\nimport useTable from \"../../../components/useTable\";\r\nimport Popup from \"../../../components/Popup\";\r\nimport ProfileDetails from \"./ProfileDetails\"\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport getInitials from '../../../utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  delete:{\r\n    backgroundColor: \"red\",\r\n    marginLeft: \"5px\"\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, customers, ...rest }) => {\r\n\r\n  const classes = useStyles();\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const[ posts, setPosts] = useState([]);\r\n\r\n  const getAllEmployees = () => {\r\n    EmployeeService.getAllEmployee()\r\n      .then(res => {        \r\n          setPosts(res.data);          \r\n      })\r\n      .catch( err => {\r\n          console.log(err);\r\n      })\r\n  }\r\n\r\n    \r\n    useEffect((props) => {\r\n      getAllEmployees();\r\n    }, [])\r\n\r\n    const deleteEmployee = (id) => {\r\n      console.log(\"employee in func : \"+ id);\r\n      EmployeeService.deleteEmployee({id: id})\r\n      .then(res => {\r\n          console.log(\"in Result  : \"+res.data);\r\n          getAllEmployees();                \r\n      })\r\n      .catch( err => {\r\n          console.log(err);\r\n      })\r\n\r\n    }\r\n    function openPopupWithExtraData(id){\r\n      console.log(\"employee in func : \"+ id);\r\n      EmployeeService.getSingleEmployee({id: id})\r\n      .then(res => {\r\n          console.log(\"in Result  : \"+res.data);                \r\n          openInPopup(res.data);\r\n      })\r\n      .catch( err => {\r\n          console.log(err);\r\n      })\r\n    }\r\n\r\n    const addOrEdit = (employee, resetForm) => {\r\n      if (employee.id == 0)\r\n          // StudentService.insertstudent(employee)\r\n          console.log(\"Inserted\");\r\n      else\r\n          console.log(\"Edited\");\r\n          // StudentService.updatestudent(employee)\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n      console.log(\"From add or edit\")\r\n      getAllEmployees();\r\n  }\r\n    const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      \r\n        <PerfectScrollbar>\r\n          <Box minWidth={1050}>\r\n          \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Full Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Email\r\n                </TableCell>\r\n                <TableCell>\r\n                  College\r\n                </TableCell>\r\n                <TableCell>\r\n                  Action\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              \r\n              {\r\n                posts.map((employee) => (\r\n                <TableRow\r\n                  //hover\r\n                  key={employee.id}\r\n                  //selected={selectedstudentIds.indexOf(employee.id) !== -1}\r\n                >\r\n                  <TableCell>\r\n                       {`${employee.user.first_name} ${employee.user.last_name}`}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {employee.user.email}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {/*`${employee.address.city}, ${employee.address.state}, ${employee.address.country}`*/}\r\n                    {employee.college}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  <Fab size=\"small\" color=\"primary\" aria-label=\"edit\" onClick={()=>{openPopupWithExtraData(employee.id)}}>\r\n                    <EditIcon />\r\n                  </Fab>\r\n                  <Fab size=\"small\" color=\"secondary\"  className={classes.delete} aria-label=\"delete\" onClick={()=>{deleteEmployee(employee.id)}}>\r\n                    <DeleteIcon />\r\n                  </Fab>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n              \r\n                )}\r\n\r\n            </TableBody>\r\n          </Table>\r\n\r\n        </Box>\r\n        </PerfectScrollbar>\r\n\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n     <Popup\r\n        title=\"Employee Form\"\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n      >\r\n        <ProfileDetails\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} />\r\n    </Popup>\r\n    </Card>\r\n  )\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\product\\ProductListView\\data.js",["672"],"import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    createdAt: '27/03/2019',\r\n    description: 'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\r\n    media: '/static/images/products/product_1.png',\r\n    title: 'Dropbox',\r\n    totalDownloads: '594'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '31/03/2019',\r\n    description: 'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\r\n    media: '/static/images/products/product_2.png',\r\n    title: 'Medium Corporation',\r\n    totalDownloads: '625'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '03/04/2019',\r\n    description: 'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\r\n    media: '/static/images/products/product_3.png',\r\n    title: 'Slack',\r\n    totalDownloads: '857'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'Lyft is an on-demand transportation company based in San Francisco, California.',\r\n    media: '/static/images/products/product_4.png',\r\n    title: 'Lyft',\r\n    totalDownloads: '406'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'GitHub is a web-based hosting service for version control of code using Git.',\r\n    media: '/static/images/products/product_5.png',\r\n    title: 'GitHub',\r\n    totalDownloads: '835'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\r\n    media: '/static/images/products/product_6.png',\r\n    title: 'Squarespace',\r\n    totalDownloads: '835'\r\n  }\r\n];\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\product\\ProductListView\\ProductCard.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\product\\ProductListView\\Toolbar.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\TrafficByDevice.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\TotalProfit.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\TotalCustomers.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\AuthorizedHttpUrl.js",["673"],"// import axios from \"axios\";\r\n\r\n// export default axios.create({\r\n//   baseURL: \"http://localhost:3000/api\",\r\n//   headers: {\r\n//     \"Content-type\": \"application/json\"\r\n//   }\r\n// });\r\n\r\nimport axios from \"axios\";\r\nimport Auth from './../auth';\r\nimport {Redirect } from 'react-router';\r\n\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://20.37.50.140:8000\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n    \"X-Requested-With\": \"XMLHttpRequest\",\r\n    //'Cache-Control': 'no-cache',\r\n    \"Authorization\": \"Token \" + Auth.getToken() \r\n    // != null ? Auth.getToken : {<Redirect to=\"/\" />}\r\n  }\r\n});","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Snackbar\\snackbar.js",["674","675"],"import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n\treturn <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction CustomSnackbar(props) {\r\n  return (\r\n    <div>\r\n        <Alert onClose={props.onClose} severity={props.severity}>\r\n          {props.message}\r\n        </Alert>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomSnackbar","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\useForm.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\employee\\EmployeeListView\\ProfileDetails.js",["676","677","678","679","680","681","682","683","684","685","686"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport axios from 'axios';\r\nimport { useForm, Form } from '../../../components/useForm';\r\nimport Controls from \"../../../components/controls/Controls\";\r\nimport PropTypes from 'prop-types';\r\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  CardHeader,\r\n  Divider,\r\n  Checkbox,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\n\r\nconst initialFValues = {\r\n  id: 0,\r\n  user: {\r\n    email: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\"\r\n  },\r\n  gender: \"M\",\r\n  isDeleted: false,\r\n  isProfileComplete: false\r\n}\r\n\r\n\r\nexport default function ProfileDetails(props) {\r\n  const [values, setValues] = useState({\r\n    id: 0,\r\n    email: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    college: \"\",\r\n    isDeleted: false,\r\n    isProfileComplete: false\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const { addOrEdit, recordForEdit } = props\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('first_name' in fieldValues)\r\n      temp.first_name = fieldValues.first_name ? \"\" : \"This field is required.\"\r\n    if ('last_name' in fieldValues)\r\n      temp.last_name = fieldValues.last_name ? \"\" : \"This field is required.\"\r\n    if ('email' in fieldValues)\r\n      temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n    setErrors({\r\n      ...temp\r\n    })\r\n\r\n    if (fieldValues == values)\r\n      return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const {\r\n    valuess,\r\n    setValuess,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (validate()) {\r\n      const data = {\r\n        \"user\": {\r\n          \"email\": values.email,\r\n          \"first_name\": values.first_name,\r\n          \"last_name\": values.last_name\r\n        },\r\n        \"college\": values.college\r\n      }\r\n\r\n      addOrEdit(values, resetForm);\r\n      axios.patch(\"https://tnpvision-cors.herokuapp.com/https://tnpvisionapi.herokuapp.com/api/employee/\" + values.id, data)\r\n        .then(res =>{\r\n          console.log(\"res\", res);\r\n        }).catch(error => {\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n\r\n    if (recordForEdit != null) {\r\n      setValues({\r\n        ...values,\r\n        'id': recordForEdit.id,\r\n        'first_name':recordForEdit.user.first_name,\r\n        'last_name':recordForEdit.user.last_name,\r\n        'email':recordForEdit.user.email,\r\n        'college':recordForEdit.college,\r\n        'isDeleted' : recordForEdit.isDeleted,\r\n        'isProfileComplete': recordForEdit.isProfileComplete\r\n      });\r\n      console.log(\"IN Detaisl : \", values);\r\n      console.log(\"IN Detaisl : \", recordForEdit);\r\n    }\r\n  }, [recordForEdit])\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      autoComplete=\"off\"\r\n      noValidate\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"employee Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"first_name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.first_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"last_name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.last_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"College\"\r\n                name=\"college\"\r\n                onChange={handleChange}\r\n                type=\"text\"\r\n                value={values.college}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <FormControl>\r\n                <FormControlLabel\r\n                  control={<MuiCheckbox\r\n                    name=\"isProfileComplete\"\r\n                    disabled\r\n                    color=\"primary\"\r\n                    checked={values.isProfileComplete}\r\n                  />}\r\n                  label=\"Is Profile Completed  ?\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <FormControl>\r\n                <FormControlLabel\r\n                  control={<MuiCheckbox\r\n                    name=\"isDeleted\"\r\n                    disabled\r\n                    color=\"primary\"\r\n                    checked={values.isDeleted}\r\n                  />}\r\n                  label=\"Is Deleted ?\"\r\n                />\r\n              </FormControl>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\utils\\getInitials.js",["687"],"export default (name = '') => name\r\n  .replace(/\\s+/, ' ')\r\n  .split(' ')\r\n  .slice(0, 2)\r\n  .map((v) => v && v[0].toUpperCase())\r\n  .join('');\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Popup.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\useTable.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\Controls.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\ActionButton.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\Button.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\DatePicker.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\Checkbox.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\Select.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\RadioGroup.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\controls\\Input.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Register\\RegisterContent.js",["688","689","690","691","692"],"import React from 'react';\r\nimport {Button, MenuItem, Typography} from '@material-ui/core';\r\nimport { ValidatorForm, TextValidator, SelectValidator} from 'react-material-ui-form-validator';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport axios from 'axios';\r\nimport RegisterService from '../../services/RegisterService';\r\n\r\nconst roles = [\r\n    {\r\n      value: 'none',\r\n      label: 'None',\r\n    },\r\n    {\r\n        value: 'asst. professor',\r\n        label: 'Asst. Professor',\r\n    },\r\n    {\r\n        value: 'principal',\r\n        label: 'Principal',\r\n    },\r\n];\r\n\r\nconst college = [\r\n    {\r\n      value: 'none',\r\n      label: 'None',\r\n    },\r\n    {\r\n        value: 'DYPCOE',\r\n        label: 'DYPCOE',\r\n    },\r\n    {\r\n        value: 'DYPIEMR',\r\n        label: 'DYPIEMR',\r\n    },\r\n];\r\n\r\nconst department = [\r\n    {\r\n      value: 'none',\r\n      label: 'None',\r\n    },\r\n    {\r\n        value: 'Computer',\r\n        label: 'Computer',\r\n    },\r\n    {\r\n        value: 'IT',\r\n        label: 'IT',\r\n    },\r\n    {\r\n        value: 'IT',\r\n        label: 'IT',\r\n    },\r\n    {\r\n        value: 'IT',\r\n        label: 'IT',\r\n    },\r\n];\r\n\r\nclass RegisterContent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          name: \"React\",\r\n          showHideGender: false,\r\n          showHideCollege: false,\r\n          user: {\r\n              firstname: '',            \r\n              lastname: '',\r\n              email: '',\r\n              password: '',\r\n              repeatPassword: '',\r\n              gender: '',\r\n              college: '',\r\n              type:'',\r\n              mobile:'',\r\n              doj:'',\r\n              department:'',\r\n              designation:'none'\r\n        },\r\n          \r\n        };\r\n        this.hideComponent = this.hideComponent.bind(this);\r\n      }\r\n\r\n    \r\n    componentDidMount() {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            if (value !== this.state.user.password) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    handleSelect = (event) => {\r\n        this.state.user.type = event.target.value;\r\n        this.hideComponent(event.target.value);\r\n    }\r\n    hideComponent(name) {\r\n        console.log(\"Hiding : \" + name);\r\n        switch (name) {\r\n            case \"student\":\r\n                this.setState({ showHideGender: true });\r\n                this.setState({ showHideCollege: false });\r\n                break;\r\n            case \"faculty\":\r\n                this.setState({ showHideGender: false });\r\n                this.setState({ showHideCollege: true });\r\n                break;\r\n            default:\r\n                break;\r\n                }\r\n            }\r\n    handleChange = (event) => {\r\n        console.log(\"Selected : \"+event.target.value);\r\n        const { user } = this.state;\r\n        user[event.target.name] = event.target.value;\r\n        this.setState({ user });\r\n    }\r\n    \r\n   \r\n    handleSubmit = () => {\r\n        const { user } = this.state;\r\n        \r\n        console.log(\"Registering\" + user.type);\r\n        if(user.type === \"student\")\r\n        {\r\n            const data = \r\n            {\r\n                \"first_name\": user.firstname,\r\n                \"last_name\": user.lastname,\r\n                \"email\": user.email,\r\n                \"password\": user.password,\r\n                \"studentProfile\": {\r\n                    \"gender\": user.gender,\r\n                    \"mobile\":user.mobile,\r\n                    \"doj\":user.doj,\r\n                    \"department\":user.department,\r\n                    \"designation\":user.designation\r\n                }\r\n            }\r\n            console.log(data);\r\n\r\n            RegisterService.registerStudent(data)\r\n            .then((result) => {    \r\n                console.log(result);\r\n                alert(\"Registration Successfull, Please login!\");\r\n                \r\n            })\r\n            .catch((error) =>{\r\n                console.log(error);\r\n            });\r\n        }\r\n        else if (user.type === \"faculty\")\r\n        {\r\n            const data = \r\n            {\r\n                \"first_name\": user.firstname,\r\n                \"last_name\": user.lastname,\r\n                \"email\": user.email,\r\n                \"password\": user.password,\r\n                \"employeeProfile\": {\r\n                    \"college\": user.college,\r\n                    'mobile': user.mobile,\r\n                    'doj': user.doj,\r\n                    'department': user.department,\r\n                    'designation': user.designation\r\n                }\r\n            }\r\n            console.log(data);\r\n\r\n            RegisterService.registerEmployee(data)\r\n            .then((result) => {    \r\n                console.log(result);\r\n                alert(\"Registration Successfull, Please verify your email!\");\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    handleRegister = () =>{\r\n        const {user} = this.state;\r\n        \r\n        const selectedRole = user.role;\r\n        \r\n        if(selectedRole==='student'){\r\n            const {history} = this.props;\r\n            history.push('/StudentRegistration')\r\n        }\r\n        else if(selectedRole==='employee'){\r\n            const {history} = this.props;\r\n            history.push('/FacultyRegistration') \r\n        }\r\n        // else if(selectedRole==='tnpofficer'){\r\n            //     const {history} = this.props;\r\n            //     history.push('/TPORegistration')\r\n            // }\r\n        }\r\n        \r\n        \r\n        render() {\r\n            const { user } = this.state;\r\n            return (\r\n                <ValidatorForm onSubmit={this.handleSubmit}>\r\n                <FormLabel component=\"legend\">Register As:</FormLabel>\r\n                <RadioGroup aria-label=\"type\" name=\"type\" >\r\n                    <FormControlLabel value=\"student\" control={<Radio />} label=\"Student\" onClick={this.handleSelect}/>\r\n                    <FormControlLabel value=\"faculty\" control={<Radio />} label=\"Faculty\" onClick={this.handleSelect}/>\r\n                </RadioGroup>\r\n                <TextValidator\r\n                    autoFocus\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"First Name\"\r\n                    onChange={this.handleChange}\r\n                    name=\"firstname\"\r\n                    type=\"text\"\r\n                    validators={['required']}\r\n                    errorMessages={['This field is required']}\r\n                    value={user.firstname}\r\n                />\r\n                <br/>\r\n                <TextValidator\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"Last Name\"\r\n                    onChange={this.handleChange}\r\n                    name=\"lastname\"\r\n                    type=\"text\"\r\n                    validators={['required']}\r\n                    errorMessages={['This field is required']}\r\n                    value={user.lastname}\r\n                />\r\n                <br/>\r\n                <TextValidator\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"Email Address\"\r\n                    onChange={this.handleChange}\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    validators={['isEmail','required']}\r\n                    errorMessages={['Invalid Email Address','This field is required']}\r\n                    value={user.email}\r\n                />\r\n                <br/>\r\n                <TextValidator\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"Password\"\r\n                    onChange={this.handleChange}\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    validators={['required']}\r\n                    errorMessages={['This field is required']}\r\n                    value={user.password}\r\n                />\r\n                <br/>\r\n                <TextValidator\r\n                    required\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"Repeat password\"\r\n                    onChange={this.handleChange}\r\n                    name=\"repeatPassword\"\r\n                    type=\"password\"\r\n                    validators={['isPasswordMatch', 'required']}\r\n                    errorMessages={['Password mismatch', 'This field is required']}\r\n                    value={user.repeatPassword}\r\n                />\r\n                <br/>\r\n                \r\n                {this.state.showHideGender && \r\n                <div > \r\n                <FormLabel component=\"legend\">Gender</FormLabel>\r\n                <RadioGroup aria-label=\"gender\" name=\"gender\" onChange={this.handleChange} >\r\n                    <FormControlLabel value=\"M\" control={<Radio />} label=\"Male\" />\r\n                    <FormControlLabel value=\"F\" control={<Radio />} label=\"Female\" />\r\n                </RadioGroup><br/> </div>}\r\n                \r\n                {this.state.showHideCollege &&\r\n                <div>\r\n                <TextValidator                    \r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"College\"\r\n                    onChange={this.handleChange}\r\n                    name=\"college\"\r\n                    type=\"text\"\r\n                    value={user.college}\r\n                />\r\n                <br/>\r\n                <TextValidator                    \r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"Mobile\"\r\n                    onChange={this.handleChange}\r\n                    name=\"mobile\"\r\n                    type=\"text\"\r\n                    value={user.mobile}\r\n                />\r\n                <br/>\r\n                <TextValidator                    \r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={this.handleChange}\r\n                    name=\"doj\"\r\n                    type=\"date\"\r\n                    value={user.doj}\r\n                />\r\n                <br/>\r\n                <TextValidator                    \r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"Department\"\r\n                    onChange={this.handleChange}\r\n                    name=\"department\"\r\n                    type=\"text\"\r\n                    value={user.department}\r\n                />\r\n                <br/>\r\n                            <SelectValidator\r\n                                fullWidth\r\n                                required\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                name=\"designation\"\r\n                                Label=\"Designation\"\r\n                                value={user.designation}\r\n                                validators={[\"required\"]}\r\n                                errorMessages={[\"this field is required\"]}\r\n                                className=\"\"\r\n                            >\r\n                                {roles.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n          </SelectValidator>\r\n                {/* <TextValidator                    \r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"Designation\"\r\n                    onChange={this.handleChange}\r\n                    name=\"designation\"\r\n                    type=\"text\"\r\n                    value={user.designation}\r\n                /> */}\r\n                <br/>\r\n                </div>\r\n                }\r\n                <Button color=\"primary\" variant=\"contained\" type=\"submit\">Register</Button>\r\n                <br/>\r\n            </ValidatorForm>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterContent;","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\CompanyListView\\ProfileDetails.js",["693"],"import React, { useState, useEffect } from 'react';\r\nimport { useForm } from '../../../components/useForm';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\nimport CompanyService from '../../../services/CompanyService';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  CardHeader,\r\n  Divider,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst initialFValues = {\r\n  id: 0,\r\n  name: \"\",\r\n  website: \"\",\r\n  industry: \"\",\r\n}\r\n\r\nexport default function ProfileDetails(props) {\r\n  \r\n  const [values, setValues] = useState({\r\n    id: 0,\r\n    name: \"\",\r\n    website: \"\",\r\n    industry: \"\",\r\n  });\r\n\r\n  const { addOrEdit, recordForEdit } = props\r\n  \r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    setErrors({\r\n      ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n    errors,\r\n    setErrors,\r\n    resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (validate()) {\r\n      const data = {\r\n        //\"id\": values.id,\r\n        \"name\": values.name,\r\n        \"website\": values.website,\r\n        \"industry\": values.industry\r\n      }\r\n\r\n      addOrEdit(values, resetForm);\r\n      CompanyService.editSingleCompany(values,data);\r\n      // axios.patch(\"https://tnpvision-cors.herokuapp.com/http://20.37.50.140:8000/api/company/\" + values.id+\"/\", data)\r\n      //   .then(res =>{\r\n      //     console.log(\"res\", res);\r\n      //   }).catch(error => {\r\n      //     console.log(error);     \r\n      //   });\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n\r\n    if (recordForEdit != null) {\r\n      setValues({\r\n        ...values,\r\n        'id': recordForEdit.id,\r\n        'name':recordForEdit.name,\r\n        'website':recordForEdit.website,\r\n        'industry':recordForEdit.industry,\r\n      });\r\n      console.log(\"IN Detaisl : \", values);\r\n      console.log(\"IN Detaisl : \", recordForEdit);\r\n    }\r\n  }, [recordForEdit])\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      autoComplete=\"off\"\r\n      noValidate\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Company Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <Typography variant=\"h6\">Company ID: {values.id}</Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the name\"\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Website\"\r\n                name=\"website\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.website}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Industry\"\r\n                name=\"industry\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.industry}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\CompanyUpload\\ProfileDetails.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\ForgotPassword\\ForgotPassword.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\HttpUrl.js",["694"],"// import axios from \"axios\";\r\n\r\n// export default axios.create({\r\n//   baseURL: \"http://localhost:3000/api\",\r\n//   headers: {\r\n//     \"Content-type\": \"application/json\"\r\n//   }\r\n// });\r\n\r\nimport axios from \"axios\";\r\nimport Auth from './../auth';\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://20.37.50.140:8000\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n    \"X-Requested-With\": \"XMLHttpRequest\",\r\n  }\r\n});","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\services\\RegisterService.js",["695"],"import http from './HttpUrl';\r\nimport httpauth from './AuthorizedHttpUrl';\r\nclass RegisterService {\r\n    registerStudent(data) {\r\n        return httpauth.post('/api/register/student/', data);\r\n    }\r\n\r\n    registerEmployee(data) {\r\n        return httpauth.post('/api/register/employee/', data);\r\n    }\r\n}\r\n\r\nexport default new RegisterService();","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\TasksProgress.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\LatestProducts.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\Budget.js",[],["696","697"],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\Sales.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\student\\StudentListView\\data.js",["698"],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\LatestOrders.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\student\\StudentListView\\Toolbar.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\student\\StudentListView\\Results.js",["699","700","701","702","703","704","705","706"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport useTable from \"../../../components/useTable\";\r\nimport Popup from \"../../../components/Popup\";\r\nimport ProfileDetails from \"./ProfileDetails\"\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport StudentService from '../../../services/studentService';\r\nimport getInitials from '../../../utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  delete:{\r\n    backgroundColor: \"red\",\r\n    marginLeft: \"5px\"\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, customers, ...rest }) => {\r\n\r\n  const classes = useStyles();\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const[ posts, setPosts] = useState([]);\r\n\r\n  const getAllStudents = () => {\r\n    StudentService.getAllStudents()\r\n      .then(res => {        \r\n          setPosts(res.data);          \r\n      })\r\n      .catch( err => {\r\n          console.log(err);\r\n      })\r\n  }\r\n\r\n    \r\n    useEffect((props) => {\r\n      getAllStudents();\r\n    }, [])\r\n\r\n    const deleteStudent = (id) => {\r\n      console.log(\"Student in func : \"+ id);\r\n      StudentService.deleteStudent({id: id})\r\n      .then(res => {\r\n          console.log(\"in Result  : \"+res.data);\r\n          getAllStudents();                \r\n      })\r\n      .catch( err => {\r\n          console.log(err);\r\n      })\r\n\r\n    }\r\n    function openPopupWithExtraData(id){\r\n      console.log(\"Student in func : \"+ id);\r\n      StudentService.getSingleStudent({id: id})\r\n      .then(res => {\r\n          console.log(\"in Result  : \"+res.data);                \r\n          openInPopup(res.data);\r\n      })\r\n      .catch( err => {\r\n          console.log(err);\r\n      })\r\n    }\r\n\r\n    const addOrEdit = (student, resetForm) => {\r\n      if (student.id === 0)\r\n          // StudentService.insertstudent(student)\r\n          console.log(\"Inserted\");\r\n      else\r\n          console.log(\"Edited\");\r\n          // StudentService.updatestudent(student)\r\n      resetForm()\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n      console.log(\"From add or edit\")\r\n      getAllStudents();\r\n  }\r\n    const openInPopup = item => {\r\n      setRecordForEdit(item)\r\n      setOpenPopup(true)\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      \r\n        <PerfectScrollbar>\r\n          <Box minWidth={1050}>\r\n          \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  Full Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Email\r\n                </TableCell>\r\n                <TableCell>\r\n                  Gender\r\n                </TableCell>\r\n                <TableCell>\r\n                  Action\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              \r\n              {\r\n                posts.map((student) => (\r\n                <TableRow\r\n                  //hover\r\n                  key={student.id}\r\n                  //selected={selectedstudentIds.indexOf(student.id) !== -1}\r\n                >\r\n                  <TableCell>\r\n                       {`${student.user.first_name} ${student.user.last_name}`}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {student.user.email}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {/*`${student.address.city}, ${student.address.state}, ${student.address.country}`*/}\r\n                    {student.gender}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  <Fab size=\"small\" color=\"primary\" aria-label=\"edit\" onClick={()=>{openPopupWithExtraData(student.id)}}>\r\n                    <EditIcon />\r\n                  </Fab>\r\n                  <Fab size=\"small\" color=\"secondary\"  className={classes.delete} aria-label=\"delete\" onClick={()=>{deleteStudent(student.id)}}>\r\n                    <DeleteIcon />\r\n                  </Fab>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n              \r\n                )}\r\n\r\n            </TableBody>\r\n          </Table>\r\n\r\n        </Box>\r\n        </PerfectScrollbar>\r\n\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n     <Popup\r\n        title=\"Student Form\"\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n      >\r\n        <ProfileDetails\r\n            recordForEdit={recordForEdit}\r\n            addOrEdit={addOrEdit} />\r\n    </Popup>\r\n    </Card>\r\n  )\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\customer\\CustomerListView\\data.js",["707"],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\customer\\CustomerListView\\Toolbar.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\customer\\CustomerListView\\Results.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\account\\AccountView\\ProfileDetails.js",["708","709","710","711","712","713","714","715","716","717","718","719"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport Controls from \"../../../components/controls/Controls\";\r\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox , Typography , AppBar} from '@material-ui/core';\r\n// import HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport {\r\n  Box\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { useForm, Form } from '../../../components/useForm';\r\n// import { ReactMultiEmailCustom } from 'react-multi-email-custom';\r\n// import 'react-multi-email-custom/style.css';\r\nimport PersonalData from './PersonalStudentData'\r\nimport AcademicData from './AcademicData'\r\nimport PastAcademicData from './PastAcademicData'\r\n\r\n\r\nconst initialFValues = {\r\n  id: 0,\r\n  user: {\r\n    email: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\"\r\n  },\r\n  gender: \"M\",\r\n  isDeleted: false,\r\n  isProfileComplete: false\r\n}\r\n\r\n// eslint-disable-next-line no-lone-blocks\r\n{/*const ProfileDetails = ({ className, userData, ...rest }) => {\r\n  const classes = useStyles();\r\n  // const [emails,setEmails] = useState([])\r\n  // const myStyle = {};\r\n  const [values, setValues] = useState({\r\n    \"email\" : \"\",\r\n    \"first_name\" : \"\",\r\n    \"last_name\" : \"\",\r\n    \"gender\" : \"M\",\r\n    \"group\" : 0,\r\n    \"id\" : 0,\r\n  });\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('first_name' in fieldValues)\r\n      temp.first_name = fieldValues.first_name ? \"\" : \"This field is required.\"\r\n    if ('last_name' in fieldValues)\r\n      temp.last_name = fieldValues.last_name ? \"\" : \"This field is required.\"\r\n    if ('email' in fieldValues)\r\n      temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n    setErrors({\r\n      ...temp\r\n    })\r\n\r\n    if (fieldValues == values)\r\n      return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const {\r\n    valuess,\r\n    setValuess,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    console.log(\"e\",e);\r\n    \r\n    if (validate()) {\r\n      const data = {\r\n        \"user\": {\r\n          \"email\": values.email,\r\n          \"first_name\": values.first_name,\r\n          \"last_name\": values.last_name\r\n        },\r\n        \"gender\": values.gender,\r\n      }\r\n\r\n      axios.patch(\"https://tnpvision-cors.herokuapp.com/https://tnpvisionapi.herokuapp.com/api/student/\" + values.id, data)\r\n        .then(res =>{\r\n          console.log(\"res\", res);\r\n        }).catch(error => {\r\n          console.log(error);\r\n          \r\n        });\r\n    }\r\n  }\r\n\r\n  useEffect(() =>{\r\n    if(userData !=null){\r\n      setValues({\r\n        ...values,\r\n        \"email\" : userData.email,\r\n        \"first_name\" : userData.first_name,\r\n        \"last_name\" : userData.last_name,\r\n        \"gender\" : userData.gender,\r\n        \"group\" : userData.group,\r\n        \"id\" : userData.id,\r\n      })\r\n    }\r\n  },[userData])\r\n \r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      autoComplete=\"off\"\r\n      noValidate\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Student Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"first_name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.first_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"last_name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.last_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              /> \r\n              <Controls.RadioGroup\r\n                name=\"gender\"\r\n                label=\"Gender\"\r\n                value={values.gender}\r\n                onChange={handleChange}\r\n                items={genderItems}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <FormControl>\r\n                <FormControlLabel\r\n                  control={<MuiCheckbox\r\n                    name=\"isProfileComplete\"\r\n                    disabled\r\n                    color=\"primary\"\r\n                    checked={values.isProfileComplete}\r\n                  />}\r\n                  label=\"Is Profile Completed  ?\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <FormControl>\r\n                <FormControlLabel\r\n                  control={<MuiCheckbox\r\n                    name=\"isDeleted\"\r\n                    disabled\r\n                    color=\"primary\"\r\n                    checked={values.isDeleted}\r\n                  />}\r\n                  label=\"Is Deleted ?\"\r\n                />\r\n              </FormControl>\r\n              <FormControl>\r\n              <ReactMultiEmailCustom\r\n                style={myStyle}\r\n                emails={emails}\r\n                onChange={_emails => {\r\n                  setEmails(_emails);\r\n                }}\r\n                getLabel={(\r\n                  email,\r\n                  index,\r\n                  removeEmail,\r\n                ) => {\r\n                  return (\r\n                    <label key={index}>\r\n                      {email}\r\n                      <HighlightOffIcon color=\"secondary\" name=\"delete\" onClick={() => removeEmail(index)} />\r\n                    </label>\r\n                  );\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <label>react-multi-email-custom value</label>\r\n              {emails.join(', ') || 'empty'}\r\n            </FormControl> \r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n    );\r\n};*/}\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  \r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component={'span'}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function ProfileDetails({ className, userData, ...rest }) {\r\n\r\n  const [values, setValues] = useState({\r\n    \"email\" : \"\",\r\n    \"first_name\" : \"\",\r\n    \"last_name\" : \"\",\r\n    \"gender\" : \"M\",\r\n    \"group\" : 0,\r\n    \"id\" : 0,\r\n\r\n    \"phone\" : \"\",\r\n    \"category\" : \"\",\r\n    \"pan\" : \"\",\r\n    \"aadhar\" : \"\",\r\n    \"dob\" : \"\",\r\n    \"hometown\" : \"\",\r\n\r\n    \"tenthpercentage\": \"60\",\r\n    \"tenthboard\": \"\",\r\n    \"tenthyear\": \"\",\r\n    \"twelfthpercenatge\": \"60\",\r\n    \"twelfthboard\": \"\",\r\n    \"twelfthyear\": \"\",\r\n    \"diplomapercentage\": \"60\",\r\n    \"diplomaboard\": \"\",\r\n    \"diplomayear\": \"\",\r\n    \"enggqualifyyear\": \"\",\r\n    \"enggqualifyscore\": \"\",\r\n\r\n    \"college\": \"\",\r\n    \"branch\": \"\",\r\n    \"yearofstudy\": \"\",\r\n    \"prn\": \"\",\r\n    \"sem1sgpa\":\"\",\r\n    \"sem1percentage\":\"\",\r\n    \"sem2sgpa\":\"\",\r\n    \"sem2percentage\":\"\",\r\n    \"sem3sgpa\":\"\",\r\n    \"sem3percentage\":\"\",\r\n    \"sem4sgpa\":\"\",\r\n    \"sem4percentage\":\"\",\r\n    \"sem5sgpa\":\"\",\r\n    \"sem5percentage\":\"\",\r\n    \"enggaggregateper\":\"\",\r\n    \"enggaggregatesgpa\": \"\",\r\n    \"live\": \"\",\r\n    \"dead\": \"\",\r\n    \"gaps\": \"\",\r\n    \"yd\": \"\",\r\n\r\n  });\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('first_name' in fieldValues)\r\n      temp.first_name = fieldValues.first_name ? \"\" : \"This field is required.\"\r\n    if ('last_name' in fieldValues)\r\n      temp.last_name = fieldValues.last_name ? \"\" : \"This field is required.\"\r\n    if ('email' in fieldValues)\r\n      temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n    setErrors({\r\n      ...temp\r\n    })\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every(x => x === \"\")\r\n  }\r\n\r\n  const {\r\n    valuess,\r\n    setValuess,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n\r\n  useEffect(() =>{\r\n    if(userData !=null){\r\n      setValues({\r\n        ...values,\r\n        \"email\" : userData.email,\r\n        \"first_name\" : userData.first_name,\r\n        \"last_name\" : userData.last_name,\r\n        \"gender\" : userData.gender,\r\n        \"group\" : userData.group,\r\n        \"id\" : userData.id,\r\n\r\n        \"phone\" : userData.phone,\r\n        \"category\" : userData.category,\r\n        \"pan\" : userData.pan,\r\n        \"aadhar\" : userData.aadhar,\r\n        \"dob\" : userData.dob,\r\n        \"hometown\" : userData.hometown,\r\n\r\n        \"tenthpercentage\": userData.tenthpercentage,\r\n        \"tenthboard\": userData.tenthboard,\r\n        \"tenthyear\": userData.tenthyear,\r\n        \"twelfthpercenatge\": userData.twelfthpercenatge,\r\n        \"twelfthboard\": userData.twelfthboard,\r\n        \"twelfthyear\": userData.twelfthyear,\r\n        \"diplomapercentage\": userData.diplomapercentage,\r\n        \"diplomaboard\": userData.diplomaboard,\r\n        \"diplomayear\": userData.diplomayear,\r\n        \"enggqualifyyear\": userData.enggqualifyyear,\r\n        \"enggqualifyscore\": userData.enggqualifyscore,\r\n\r\n        \"college\": userData.college,\r\n        \"branch\": userData.branch,\r\n        \"yearofstudy\": userData.yearofstudy,\r\n        \"prn\": userData.prn,\r\n        \"sem1sgpa\": userData.sem1sgpa,\r\n        \"sem1percentage\": userData.sem1percentage,\r\n        \"sem2sgpa\":userData.sem2sgpa,\r\n        \"sem2percentage\": userData.sem2percentage,\r\n        \"sem3sgpa\": userData.sem3sgpa,\r\n        \"sem3percentage\": userData.sem3percentage,\r\n        \"sem4sgpa\": userData.sem4sgpa,\r\n        \"sem4percentage\": userData.sem4percentage,\r\n        \"sem5sgpa\": userData.sem5sgpa,\r\n        \"sem5percentage\": userData.sem5percentage,\r\n        \"enggaggregateper\": userData.enggaggregateper,\r\n        \"enggaggregatesgpa\": userData.enggaggregatesgpa,\r\n        \"live\": userData.live,\r\n        \"dead\": userData.dead,\r\n        \"gaps\": userData.gaps,\r\n        \"yd\": userData.yd,\r\n      })\r\n    }\r\n  },[userData]);\r\n\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChangeTabs = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n\r\n    <div >\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChangeTabs} aria-label=\"simple tabs example\">\r\n          <Tab label=\"Personal Details\" {...a11yProps(0)} />\r\n          <Tab label=\"Academic Details\" {...a11yProps(1)} />\r\n          <Tab label=\"Past Academic Details\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n       <TabPanel value={value} index={0}>\r\n          <PersonalData userData={userData}/>  \r\n       </TabPanel>\r\n       <TabPanel value={value} index={1}>\r\n          <AcademicData userData={userData}/>\r\n       </TabPanel>\r\n       <TabPanel value={value} index={2}>\r\n          <PastAcademicData userData={userData}/>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n// eslint-disable-next-line no-lone-blocks\r\n{/*ProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};*/}\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\account\\AccountView\\Profile.js",["720","721","722","723"],"import React, { useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from \"axios\";\r\nimport Auth from '../../../auth'\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, userData, ...rest }) => {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {userData.first_name+\" \"+userData.last_name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${user.city} ${user.country}`}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\MainLayout\\TopBar.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\TopBars\\TopBar.js",["724","725"],"import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles, Typography\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport Logo from '../../components/Logo';\r\nimport LoginService from './../../services/LoginService';\r\nimport Auth from './../../auth';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n        width: 'auto',\r\n        color: 'white'\r\n    },\r\n},\r\n}));\r\n\r\nconst TopBar = ({\r\n  className,\r\n  onMobileNavOpen,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n  const navigate = useNavigate();\r\n  const logout = () =>{\r\n    LoginService.logout()\r\n      .then(result => {\r\n        Auth.deauthenticateUser();\r\n        navigate('/', { replace: true });\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n        <Typography className={classes.title} variant=\"h3\" noWrap> TnPVision </Typography>\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\"  onClick={logout}>\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onMobileNavOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <IconButton color=\"inherit\"  onClick={logout}>\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default TopBar;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\ImportStudent\\ImportExcel.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveListView\\Toolbar.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveListView\\Results.js",["726"],"import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {DriveMenuButton} from './DriveMenuButton';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport DriveService from '../../../services/DriveService';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  delete:{\r\n    backgroundColor: \"red\",\r\n    marginLeft: \"5px\"\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, ...rest }) => {\r\n\r\n  const classes = useStyles();\r\n  const[ posts, setPosts] = useState([]);\r\n\r\n  const getAllDrives = () => {\r\n    DriveService.getAllDrives()\r\n      .then(res => {        \r\n          setPosts(res.data);          \r\n      })\r\n      .catch( err => {\r\n          console.log(err);\r\n      })\r\n  }\r\n\r\n    useEffect((props) => {\r\n      getAllDrives();\r\n    }, [])\r\n\r\n  const goToEdit = (id, e) => {\r\n    e.preventDefault();\r\n    console.log(id);\r\n  };\r\n  return (\r\n    <Card\r\n      //className={clsx(classes.root, className)}\r\n      //{...rest}\r\n    >\r\n      \r\n        <PerfectScrollbar>\r\n          <Box minWidth={1050}>  \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>\r\n                  ID\r\n                </TableCell>\r\n                <TableCell>\r\n                  Job Title\r\n                </TableCell>\r\n                <TableCell>\r\n                  Drive Location\r\n                </TableCell>\r\n                <TableCell>\r\n                  Drive Date\r\n                </TableCell>\r\n                <TableCell>\r\n                  Minimum Salary\r\n                </TableCell>\r\n                <TableCell>\r\n                  Maximum Salary\r\n                </TableCell>\r\n                <TableCell>\r\n                  Tenth\r\n                </TableCell>\r\n                <TableCell>\r\n                  Twelfth\r\n                </TableCell>\r\n                <TableCell>\r\n                  Diploma\r\n                </TableCell>\r\n                <TableCell>\r\n                  Actions\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              \r\n              {\r\n                posts.map((drive) => (\r\n\r\n                <TableRow key={drive.id}>\r\n                  <TableCell>\r\n                    {drive.id} \r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {drive.jobtitle}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {drive.drive_location}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {/* {drive.date} */}\r\n                    {moment (new Date(drive.date)).format(\"DD/MM/YYYY hh:mm a\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {drive.min_salary}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {drive.max_salary}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {drive.tenth}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {drive.twelth}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {drive.diploma}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  <DriveMenuButton goToEdit={goToEdit} row={drive} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n              \r\n                )}\r\n\r\n            </TableBody>\r\n          </Table>\r\n\r\n        </Box>\r\n        </PerfectScrollbar>\r\n    </Card>\r\n  )\r\n};\r\n\r\nResults.propTypes = {\r\n  // className: PropTypes.string,\r\n  // customers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\DarkModeTheme\\ThemeProvider.tsx",[],["727","728"],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\student\\StudentListView\\ProfileDetails.js",["729","730","731","732","733","734","735","736"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport axios from 'axios';\r\nimport { useForm, Form } from '../../../components/useForm';\r\nimport Controls from \"../../../components/controls/Controls\";\r\nimport PropTypes from 'prop-types';\r\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  CardHeader,\r\n  Divider,\r\n  Checkbox,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst genderItems = [\r\n  { id: 'M', title: 'Male' },\r\n  { id: 'F', title: 'Female' },\r\n  { id: 'O', title: 'Other' },\r\n]\r\n\r\nconst initialFValues = {\r\n  id: 0,\r\n  user: {\r\n    email: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\"\r\n  },\r\n  gender: \"M\",\r\n  isDeleted: false,\r\n  isProfileComplete: false\r\n}\r\n\r\n\r\nexport default function ProfileDetails(props) {\r\n  const [values, setValues] = useState({\r\n    id: 0,\r\n    email: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    gender: \"M\",\r\n    isDeleted: false,\r\n    isProfileComplete: false\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const { addOrEdit, recordForEdit } = props\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('first_name' in fieldValues)\r\n      temp.first_name = fieldValues.first_name ? \"\" : \"This field is required.\"\r\n    if ('last_name' in fieldValues)\r\n      temp.last_name = fieldValues.last_name ? \"\" : \"This field is required.\"\r\n    if ('email' in fieldValues)\r\n      temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n    setErrors({\r\n      ...temp\r\n    })\r\n\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every(x => x === \"\")\r\n  }\r\n  const {\r\n    valuess,\r\n    setValuess,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange,\r\n    resetForm\r\n  } = useForm(initialFValues, true, validate);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (validate()) {\r\n      const data = {\r\n        \"user\": {\r\n          \"email\": values.email,\r\n          \"first_name\": values.first_name,\r\n          \"last_name\": values.last_name\r\n        },\r\n        \"gender\": values.gender\r\n      }\r\n\r\n      addOrEdit(values, resetForm);\r\n      // { recordForEdit &&\r\n      axios.patch(\"https://tnpvision-cors.herokuapp.com/http://20.37.50.140:8000/api/student/\" + values.id, data)\r\n        .then(res =>{\r\n          console.log(\"res\", res);\r\n        }).catch(error => {\r\n          console.log(error);  \r\n        });\r\n     \r\n      // { !recordForEdit && \r\n      //   axios.post(\"https://tnpvision-cors.herokuapp.com/https://tnpvisionapi.herokuapp.com/api/student/\" + values.id, data)\r\n      //   .then(res =>{\r\n      //     console.log(\"res\", res);\r\n      //   }).catch(error => {\r\n      //     console.log(error);  \r\n      //   });\r\n      // }\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n\r\n    if (recordForEdit != null) {\r\n      setValues({\r\n        ...values,\r\n        'id': recordForEdit.id,\r\n        'first_name':recordForEdit.user.first_name,\r\n        'last_name':recordForEdit.user.last_name,\r\n        'email':recordForEdit.user.email,\r\n        'gender':recordForEdit.gender,\r\n        'isDeleted' : recordForEdit.isDeleted,\r\n        'isProfileComplete': recordForEdit.isProfileComplete\r\n      });\r\n      console.log(\"IN Detaisl : \", values);\r\n      console.log(\"IN Detaisl : \", recordForEdit);\r\n    }\r\n  }, [recordForEdit])\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      autoComplete=\"off\"\r\n      noValidate\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Student Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"first_name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.first_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"last_name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.last_name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              {/* <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              /> */}\r\n              <Controls.RadioGroup\r\n                name=\"gender\"\r\n                label=\"Gender\"\r\n                value={values.gender}\r\n                onChange={handleChange}\r\n                items={genderItems}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <FormControl>\r\n                <FormControlLabel\r\n                  control={<MuiCheckbox\r\n                    name=\"isProfileComplete\"\r\n                    disabled\r\n                    color=\"primary\"\r\n                    checked={values.isProfileComplete}\r\n                  />}\r\n                  label=\"Is Profile Completed  ?\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <FormControl>\r\n                <FormControlLabel\r\n                  control={<MuiCheckbox\r\n                    name=\"isDeleted\"\r\n                    disabled\r\n                    color=\"primary\"\r\n                    checked={values.isDeleted}\r\n                  />}\r\n                  label=\"Is Deleted ?\"\r\n                />\r\n              </FormControl>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\account\\AccountView\\AcademicData.js",["737","738","739","740","741","742","743","744","745","746","747","748","749","750"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Controls from \"../../../components/controls/Controls\";\r\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox , Typography , AppBar} from '@material-ui/core';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Grid,\r\n    TextField,\r\n  } from '@material-ui/core';\r\n  import { useForm, Form } from '../../../components/useForm';\r\n\r\n\r\n  const initialFValues = {\r\n    id: 0,\r\n    user: {\r\n      email: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\"\r\n    },\r\n    gender: \"M\",\r\n    isDeleted: false,\r\n    isProfileComplete: false\r\n  }\r\n\r\n  const AcademicData =({userData}) => {\r\n\r\n    const [values, setValues] = useState({\r\n        \"tenthpercentage\": \"60\",\r\n        \"tenthboard\": \"\",\r\n        \"tenthyear\": \"\",\r\n        \"twelfthpercenatge\": \"60\",\r\n        \"twelfthboard\": \"\",\r\n        \"twelfthyear\": \"\",\r\n        \"diplomapercentage\": \"60\",\r\n        \"diplomaboard\": \"\",\r\n        \"diplomayear\": \"\",\r\n        \"enggqualifyyear\": \"\",\r\n        \"enggqualifyscore\": \"\",\r\n    });\r\n  \r\n    const validate = (fieldValues = values) => {\r\n      let temp = { ...errors }\r\n      if ('first_name' in fieldValues)\r\n        temp.first_name = fieldValues.first_name ? \"\" : \"This field is required.\"\r\n      if ('last_name' in fieldValues)\r\n        temp.last_name = fieldValues.last_name ? \"\" : \"This field is required.\"\r\n      if ('email' in fieldValues)\r\n        temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n      setErrors({\r\n        ...temp\r\n      })\r\n      if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n  \r\n    const {\r\n      valuess,\r\n      setValuess,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n  \r\n    const handleChange = (event) => {\r\n      setValues({\r\n        ...values,\r\n        [event.target.name]: event.target.value\r\n      });\r\n    };\r\n  \r\n    const handleSubmit = e => {\r\n      console.log(values);\r\n      e.preventDefault()\r\n      console.log(\"e\",e);\r\n      \r\n      if (validate()) {\r\n        const data = {\r\n          \"user\": {\r\n            \"email\": values.email,\r\n            \"first_name\": values.first_name,\r\n            \"last_name\": values.last_name\r\n          },\r\n          \"gender\": values.gender,\r\n        }\r\n        // axios.patch(\"https://tnpvision-cors.herokuapp.com/https://tnpvisionapi.herokuapp.com/api/student/\" + values.id, data)\r\n        //   .then(res =>{\r\n        //     console.log(\"res\", res);\r\n        //   }).catch(error => {\r\n        //     console.log(error);   \r\n        //   });\r\n      }\r\n    }\r\n  \r\n    useEffect(() =>{\r\n      if(userData !=null){\r\n        setValues({\r\n            ...values,\r\n            \"college\": userData.college,\r\n            \"branch\": userData.branch,\r\n            \"yearofstudy\": userData.yearofstudy,\r\n            \"prn\": userData.prn,\r\n            \"sem1sgpa\": userData.sem1sgpa,\r\n            \"sem1percentage\": userData.sem1percentage,\r\n            \"sem2sgpa\":userData.sem2sgpa,\r\n            \"sem2percentage\": userData.sem2percentage,\r\n            \"sem3sgpa\": userData.sem3sgpa,\r\n            \"sem3percentage\": userData.sem3percentage,\r\n            \"sem4sgpa\": userData.sem4sgpa,\r\n            \"sem4percentage\": userData.sem4percentage,\r\n            \"sem5sgpa\": userData.sem5sgpa,\r\n            \"sem5percentage\": userData.sem5percentage,\r\n            \"enggaggregateper\": userData.enggaggregateper,\r\n            \"enggaggregatesgpa\": userData.enggaggregatesgpa,\r\n            \"live\": userData.live,\r\n            \"dead\": userData.dead,\r\n            \"gaps\": userData.gaps,\r\n            \"yd\": userData.yd,\r\n        })\r\n      }\r\n    },[userData])\r\n\r\n      return(\r\n          <div>\r\n              <form onSubmit={handleSubmit} autoComplete=\"off\" noValidate>\r\n            <Card>\r\n              <CardHeader\r\n                subheader=\"The information can be edited\"\r\n                title=\"Student Profile\"\r\n              />\r\n              <Divider />\r\n              <CardContent>\r\n                <br/>\r\n                <Grid container spacing={3}>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify your college\"\r\n                        label=\"College\"\r\n                        name=\"college\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.college}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify your branch\"\r\n                        label=\"Branch\"\r\n                        name=\"branch\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.branch}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify your year of study\"\r\n                        label=\"Year of Study\"\r\n                        name=\"yearofstudy\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.yearofstudy}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify your permanent registration number\"\r\n                        label=\"PRN\"\r\n                        name=\"prn\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.prn}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>      \r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Semester 1 SGPA\"\r\n                        label=\"Sem 1 SGPA\"\r\n                        name=\"sem1sgpa\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.sem1sgpa}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Semester 1 Percentage\"\r\n                        label=\"Sem 1 Percentage\"\r\n                        name=\"sem1percentage\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.sem1percentage}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Semester 2 SGPA\"\r\n                        label=\"Sem 2 SGPA\"\r\n                        name=\"sem2sgpa\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.sem2sgpa}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Semester 2 Percentage\"\r\n                        label=\"Sem 2 Percentage\"\r\n                        name=\"sem2percentage\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.sem2percentage}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Semester 3 SGPA\"\r\n                        label=\"Sem 3 SGPA\"\r\n                        name=\"sem3sgpa\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.sem3sgpa}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Semester 3 Percentage\"\r\n                        label=\"Sem 3 Percentage\"\r\n                        name=\"sem3percentage\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.sem3percentage}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Semester 4 SGPA\"\r\n                        label=\"Sem 4 SGPA\"\r\n                        name=\"sem4sgpa\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.sem4sgpa}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Semester 4 Percentage\"\r\n                        label=\"Sem 4 Percentage\"\r\n                        name=\"sem4percentage\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.sem4percentage}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      md={6}\r\n                      xs={12}\r\n                    >\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Semester 5 SGPA\"\r\n                        label=\"Sem 5 SGPA\"\r\n                        name=\"sem5sgpa\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.sem5sgpa}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      md={6}\r\n                      xs={12}\r\n                    >\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Semester 5 Percentage\"\r\n                        label=\"Sem 5 Percentage\"\r\n                        name=\"sem5percentage\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.sem5percentage}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      md={6}\r\n                      xs={12}\r\n                    >\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Engineering Aggregate SGPA\"\r\n                        label=\"Engineering Aggregate SGPA\"\r\n                        name=\"enggaggregatesgpa\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.enggaggregatesgpa}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      md={6}\r\n                      xs={12}\r\n                    >\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please Engineering Aggregate Percentage\"\r\n                        label=\"Engineering Aggregate Percentage\"\r\n                        name=\"enggaggregateper\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.enggaggregateper}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Live Backlogs\"\r\n                        label=\"Live Backlogs\"\r\n                        name=\"live\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.live}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Dead Backlogs\"\r\n                        label=\"Dead Backlogs\"\r\n                        name=\"dead\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.dead}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify the first name\"\r\n                        label=\"Educational Gaps\"\r\n                        name=\"gaps\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.gaps}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify Year Downs\"\r\n                        label=\"Year down\"\r\n                        name=\"yd\"\r\n                        onChange={handleChange}\r\n                        required\r\n                        value={values.yd}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                </Grid>\r\n                    <Divider />\r\n                      <Box\r\n                        display=\"flex\"\r\n                        justifyContent=\"flex-end\"\r\n                        p={2}\r\n                      >\r\n                        <Button\r\n                          color=\"primary\"\r\n                          variant=\"contained\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Save details\r\n                        </Button>\r\n                    </Box>\r\n                  </CardContent>   \r\n            </Card>\r\n        </form>\r\n          </div>\r\n      )\r\n  }\r\n\r\n  export default AcademicData;","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\account\\AccountView\\PastAcademicData.js",["751","752","753","754","755","756","757","758","759","760","761","762","763","764","765"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Controls from \"../../../components/controls/Controls\";\r\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox , Typography , AppBar} from '@material-ui/core';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Grid,\r\n    TextField,\r\n  } from '@material-ui/core';\r\n  import { useForm, Form } from '../../../components/useForm';\r\n\r\n  const genderItems = [\r\n    { id: 'M', title: 'Male' },\r\n    { id: 'F', title: 'Female' },\r\n    { id: 'O', title: 'Other' },\r\n  ]\r\n\r\n  const initialFValues = {\r\n    id: 0,\r\n    user: {\r\n      email: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\"\r\n    },\r\n    gender: \"M\",\r\n    isDeleted: false,\r\n    isProfileComplete: false\r\n  }\r\n\r\n  const PastAcademicData =({userData}) => {\r\n\r\n    const [values, setValues] = useState({\r\n        \"tenthpercentage\": \"60\",\r\n        \"tenthboard\": \"\",\r\n        \"tenthyear\": \"\",\r\n        \"twelfthpercenatge\": \"60\",\r\n        \"twelfthboard\": \"\",\r\n        \"twelfthyear\": \"\",\r\n        \"diplomapercentage\": \"60\",\r\n        \"diplomaboard\": \"\",\r\n        \"diplomayear\": \"\",\r\n        \"enggqualifyyear\": \"\",\r\n        \"enggqualifyscore\": \"\",\r\n    });\r\n  \r\n    const validate = (fieldValues = values) => {\r\n      let temp = { ...errors }\r\n      if ('first_name' in fieldValues)\r\n        temp.first_name = fieldValues.first_name ? \"\" : \"This field is required.\"\r\n      if ('last_name' in fieldValues)\r\n        temp.last_name = fieldValues.last_name ? \"\" : \"This field is required.\"\r\n      if ('email' in fieldValues)\r\n        temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n      setErrors({\r\n        ...temp\r\n      })\r\n      if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n  \r\n    const {\r\n      valuess,\r\n      setValuess,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n  \r\n    const handleChange = (event) => {\r\n      setValues({\r\n        ...values,\r\n        [event.target.name]: event.target.value\r\n      });\r\n    };\r\n  \r\n    const handleSubmit = e => {\r\n      console.log(values);\r\n      e.preventDefault()\r\n      console.log(\"e\",e);\r\n      \r\n      if (validate()) {\r\n        const data = {\r\n          \"user\": {\r\n            \"email\": values.email,\r\n            \"first_name\": values.first_name,\r\n            \"last_name\": values.last_name\r\n          },\r\n          \"gender\": values.gender,\r\n        }\r\n        // axios.patch(\"https://tnpvision-cors.herokuapp.com/https://tnpvisionapi.herokuapp.com/api/student/\" + values.id, data)\r\n        //   .then(res =>{\r\n        //     console.log(\"res\", res);\r\n        //   }).catch(error => {\r\n        //     console.log(error);   \r\n        //   });\r\n      }\r\n    }\r\n  \r\n    useEffect(() =>{\r\n      if(userData !=null){\r\n        setValues({\r\n          ...values,\r\n            \"tenthpercentage\": userData.tenthpercentage,\r\n            \"tenthboard\": userData.tenthboard,\r\n            \"tenthyear\": userData.tenthyear,\r\n            \"twelfthpercenatge\": userData.twelfthpercenatge,\r\n            \"twelfthboard\": userData.twelfthboard,\r\n            \"twelfthyear\": userData.twelfthyear,\r\n            \"diplomapercentage\": userData.diplomapercentage,\r\n            \"diplomaboard\": userData.diplomaboard,\r\n            \"diplomayear\": userData.diplomayear,\r\n            \"enggqualifyyear\": userData.enggqualifyyear,\r\n            \"enggqualifyscore\": userData.enggqualifyscore,\r\n        })\r\n      }\r\n    },[userData])\r\n\r\n      return(\r\n          <div>\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                autoComplete=\"off\"\r\n                noValidate\r\n          >\r\n            <Card>\r\n              <CardHeader\r\n                subheader=\"The information can be edited\"\r\n                title=\"Student Profile\"\r\n              />\r\n              <Divider />\r\n              <CardContent>\r\n                <br/>\r\n                <Grid container spacing={3}>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      type=\"number\"\r\n                      helperText=\"Please specify the Tenth Percentage\"\r\n                      label=\"Tenth Percentage\"\r\n                      name=\"tenthpercentage\"\r\n                      onChange={handleChange}\r\n                      required\r\n                      value={values.tenthpercentage}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      helperText=\"Please specify the Tenth Board \"\r\n                      label=\"Tenth Board of Examination\"\r\n                      name=\"tenthboard\"\r\n                      onChange={handleChange}\r\n                      required\r\n                      value={values.tenthboard}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      helperText=\"Please specify year of passing\"\r\n                      label=\"Tenth year of Passing\"\r\n                      name=\"tenthyear\"\r\n                      onChange={handleChange}\r\n                      required\r\n                      value={values.tenthyear}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      type=\"number\"\r\n                      helperText=\"Please specify the Twelfth Percentage\"\r\n                      label=\"Twelfth Percentage\"\r\n                      name=\"twelfthpercentage\"\r\n                      onChange={handleChange}\r\n                      required\r\n                      value={values.twelfthpercentage}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      helperText=\"Please specify the Twelfth Board\"\r\n                      label=\"Twelfth Board of Examination\"\r\n                      name=\"twelfthboard\"\r\n                      onChange={handleChange}\r\n                      required\r\n                      value={values.twelfthboard}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      helperText=\"Please specify year of passing\"\r\n                      label=\"Twelfth year of Passing\"\r\n                      name=\"twelfthyear\"\r\n                      onChange={handleChange}\r\n                      required\r\n                      value={values.twelfthyear}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    md={6}\r\n                    xs={12}\r\n                  >\r\n                    <TextField\r\n                      fullWidth\r\n                      type=\"number\"\r\n                      helperText=\"Please specify the Diploma Percentage\"\r\n                      label=\"Diploma Percentage\"\r\n                      name=\"diplomapercentage\"\r\n                      onChange={handleChange}\r\n                      required\r\n                      value={values.diplomapercentage}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      helperText=\"Please specify the Diploma Board\"\r\n                      label=\"Diploma Board of Examination\"\r\n                      name=\"diplomaboard\"\r\n                      onChange={handleChange}\r\n                      required\r\n                      value={values.diplomaboard}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      helperText=\"Please specify year of passing\"\r\n                      label=\"Diploma year of Passing\"\r\n                      name=\"diplomapassing\"\r\n                      onChange={handleChange}\r\n                      required\r\n                      value={values.diplomapassing}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      helperText=\"Please specify Engineering Qualifying Exam Year\"\r\n                      label=\"Engineering Qualifying Exam Year\"\r\n                      name=\"enggqualifyingyear\"\r\n                      onChange={handleChange}\r\n                      required\r\n                      value={values.enggyear}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      helperText=\"Please specify Engineering Qualifying Exam Score\"\r\n                      label=\"Engineering Qualifying Exam Score\"\r\n                      name=\"enggqualifyingscore\"\r\n                      onChange={handleChange}\r\n                      required\r\n                      value={values.enggqualifyingscore}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  </Grid>\r\n                  <Divider />\r\n                      <Box\r\n                        display=\"flex\"\r\n                        justifyContent=\"flex-end\"\r\n                        p={2}\r\n                      >\r\n                        <Button\r\n                          color=\"primary\"\r\n                          variant=\"contained\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Save details\r\n                        </Button>\r\n                      </Box>\r\n                      </CardContent>   \r\n                  </Card>\r\n              </form> \r\n\r\n          </div>\r\n      )\r\n  }\r\n\r\n  export default PastAcademicData;","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\components\\Logo.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\account\\AccountView\\PersonalStudentData.js",["766","767","768","769","770","771","772","773","774","775","776","777","778"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Controls from \"../../../components/controls/Controls\";\r\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox , Typography , AppBar} from '@material-ui/core';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Grid,\r\n    TextField,\r\n  } from '@material-ui/core';\r\n  import { useForm, Form } from '../../../components/useForm';\r\n\r\n  const genderItems = [\r\n    { id: 'M', title: 'Male' },\r\n    { id: 'F', title: 'Female' },\r\n    { id: 'O', title: 'Other' },\r\n  ]\r\n\r\n  const initialFValues = {\r\n    id: 0,\r\n    user: {\r\n      email: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\"\r\n    },\r\n    gender: \"M\",\r\n    isDeleted: false,\r\n    isProfileComplete: false\r\n  }\r\n\r\n  const PersonalData =({userData}) => {\r\n\r\n    const [values, setValues] = useState({\r\n      \"email\" : \"\",\r\n      \"first_name\" : \"\",\r\n      \"last_name\" : \"\",\r\n      \"gender\" : \"M\",\r\n      \"group\" : 0,\r\n      \"id\" : 0,\r\n  \r\n      \"phone\" : \"\",\r\n      \"category\" : \"\",\r\n      \"pan\" : \"\",\r\n      \"aadhar\" : \"\",\r\n      \"dob\" : \"\",\r\n      \"hometown\" : \"\",\r\n  \r\n    });\r\n  \r\n    const validate = (fieldValues = values) => {\r\n      let temp = { ...errors }\r\n      if ('first_name' in fieldValues)\r\n        temp.first_name = fieldValues.first_name ? \"\" : \"This field is required.\"\r\n      if ('last_name' in fieldValues)\r\n        temp.last_name = fieldValues.last_name ? \"\" : \"This field is required.\"\r\n      if ('email' in fieldValues)\r\n        temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n      setErrors({\r\n        ...temp\r\n      })\r\n      if (fieldValues === values)\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n  \r\n    const {\r\n      valuess,\r\n      setValuess,\r\n      errors,\r\n      setErrors,\r\n      handleInputChange,\r\n      resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n  \r\n    const handleChange = (event) => {\r\n      setValues({\r\n        ...values,\r\n        [event.target.name]: event.target.value\r\n      });\r\n    };\r\n  \r\n    const handleSubmit = e => {\r\n      console.log(values);\r\n      e.preventDefault()\r\n      console.log(\"e\",e);\r\n      \r\n      if (validate()) {\r\n        const data = {\r\n          \"user\": {\r\n            \"email\": values.email,\r\n            \"first_name\": values.first_name,\r\n            \"last_name\": values.last_name\r\n          },\r\n          \"gender\": values.gender,\r\n        }\r\n        // axios.patch(\"https://tnpvision-cors.herokuapp.com/https://tnpvisionapi.herokuapp.com/api/student/\" + values.id, data)\r\n        //   .then(res =>{\r\n        //     console.log(\"res\", res);\r\n        //   }).catch(error => {\r\n        //     console.log(error);   \r\n        //   });\r\n      }\r\n    }\r\n  \r\n    useEffect(() =>{\r\n      if(userData !=null){\r\n        setValues({\r\n          ...values,\r\n          \"email\" : userData.email,\r\n          \"first_name\" : userData.first_name,\r\n          \"last_name\" : userData.last_name,\r\n          \"gender\" : userData.gender,\r\n          \"group\" : userData.group,\r\n          \"id\" : userData.id,\r\n  \r\n          \"phone\" : userData.phone,\r\n          \"category\" : userData.category,\r\n          \"pan\" : userData.pan,\r\n          \"aadhar\" : userData.aadhar,\r\n          \"dob\" : userData.dob,\r\n          \"hometown\" : userData.hometown,\r\n        })\r\n      }\r\n    },[userData])\r\n\r\n      return(\r\n          <div>\r\n              <form\r\n                    onSubmit={handleSubmit}\r\n                    autoComplete=\"off\"\r\n                    noValidate\r\n                >\r\n                    <Card>\r\n                    <CardHeader\r\n                        subheader=\"The information can be edited\"\r\n                        title=\"Student Profile\"\r\n                    />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <br/>\r\n                            <Grid\r\n                            container\r\n                            spacing={3}\r\n                            >\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                fullWidth\r\n                                helperText=\"Please specify the First Name\"\r\n                                label=\"First Name\"\r\n                                name=\"first_name\"\r\n                                onChange={handleChange}\r\n                                required\r\n                                value={values.first_name}\r\n                                variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                fullWidth\r\n                                helperText=\"Please specify the Last Name\"\r\n                                label=\"Last Name\"\r\n                                name=\"last_name\"\r\n                                onChange={handleChange}\r\n                                required\r\n                                value={values.last_name}\r\n                                variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                fullWidth\r\n                                helperText=\"Please specify the Email Address\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                onChange={handleChange}\r\n                                required\r\n                                value={values.email}\r\n                                variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                fullWidth\r\n                                helperText=\"Please specify the Phone Number\"\r\n                                label=\"Phone Number\"\r\n                                name=\"phone\"\r\n                                onChange={handleChange}\r\n                                type=\"number\"\r\n                                value={values.phone}\r\n                                variant=\"outlined\"\r\n                                /> \r\n                                <Controls.RadioGroup\r\n                                name=\"gender\"\r\n                                label=\"Gender\"\r\n                                value={values.gender}\r\n                                onChange={handleChange}\r\n                                items={genderItems}\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                fullWidth\r\n                                helperText=\"Please specify the Category\"\r\n                                label=\"Category\"\r\n                                name=\"category\"\r\n                                onChange={handleChange}\r\n                                required\r\n                                value={values.category}\r\n                                variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                fullWidth\r\n                                helperText=\"Please specify the PAN\"\r\n                                label=\"PAN\"\r\n                                name=\"pan\"\r\n                                onChange={handleChange}\r\n                                required\r\n                                value={values.pan}\r\n                                variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                fullWidth\r\n                                helperText=\"Please specify the Aadhar Number\"\r\n                                label=\"Aadhar\"\r\n                                name=\"aadhar\"\r\n                                onChange={handleChange}\r\n                                required\r\n                                value={values.aadhar}\r\n                                variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                fullWidth\r\n                                helperText=\"Please specify the Date of Birth\"\r\n                                label=\"Date of Birth\"\r\n                                name=\"dob\"\r\n                                onChange={handleChange}\r\n                                required\r\n                                value={values.dob}\r\n                                variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                fullWidth\r\n                                helperText=\"Please specify the Home Town\"\r\n                                label=\"Home Town\"\r\n                                name=\"hometown\"\r\n                                onChange={handleChange}\r\n                                required\r\n                                value={values.hometown}\r\n                                variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <Box\r\n                            display=\"flex\"\r\n                            justifyContent=\"flex-end\"\r\n                            p={2}\r\n                        >\r\n                            <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            >\r\n                            Save details\r\n                            </Button>\r\n                        </Box>\r\n                    </CardContent>   \r\n                </Card>\r\n            </form>\r\n          </div>\r\n      )\r\n  }\r\n\r\n  export default PersonalData;","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\ImportStudent\\SingleStudImport.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\DashboardLayout\\NavBar\\index.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\EDashboardLayout\\NavBar\\index.js",["779","780","781"],"import React, { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar, Box, Button, Divider, Drawer, Hidden, List, Typography, makeStyles } from '@material-ui/core';\r\nimport { AlertCircle as AlertCircleIcon, BarChart as BarChartIcon, Lock as LockIcon, Settings as SettingsIcon, ShoppingBag as ShoppingBagIcon, User as UserIcon, UserPlus as UserPlusIcon, Users as UsersIcon, Upload as UploadIcon, Download as DownloadIcon} from 'react-feather';\r\nimport NavItem from './NavItem';\r\nimport StudentService from '../../../services/studentService';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith'\r\n};\r\n\r\nvar items;\r\nlet group = 2;\r\nif(group === 2){\r\n  items = [\r\n    {\r\n      href: '/employee/dashboard',\r\n      icon: BarChartIcon,\r\n      title: 'Dashboard'\r\n    },\r\n    {\r\n      href: '/employee/empaccount',\r\n      icon: UserIcon,\r\n      title: 'Account'\r\n    },\r\n    {\r\n      href: '/employee/students',\r\n      icon: UsersIcon,\r\n      title: 'Students'\r\n    },\r\n    {\r\n      href: '/employee/employees',\r\n      icon: ShoppingBagIcon,\r\n      title: 'Employees'\r\n    },\r\n    {\r\n      href: '/employee/settings',\r\n      icon: SettingsIcon,\r\n      title: 'Settings'\r\n    },\r\n    {\r\n      href: '/employee/drive',\r\n      icon: UploadIcon,\r\n      title: 'Drive Upload'\r\n    }, \r\n    {\r\n      href: '/employee/import',\r\n      icon: DownloadIcon,\r\n      title: 'Import Student'\r\n    },\r\n    {\r\n      href: '/employee/companies',\r\n      icon: UserPlusIcon,\r\n      title: 'Companies'\r\n    },\r\n    {\r\n      href: '/employee/alldrives',\r\n      icon: ShoppingBagIcon,\r\n      title: 'All Drives'\r\n    },\r\n  ]\r\n}else if(group === 3){\r\n  items = [\r\n    {\r\n      href: '/employee/dashboard',\r\n      icon: BarChartIcon,\r\n      title: 'Dashboard'\r\n    },  \r\n    {\r\n      href: '/employee/students',\r\n      icon: UsersIcon,\r\n      title: 'Students'\r\n    },\r\n    {\r\n      href: '/employee/employees',\r\n      icon: ShoppingBagIcon,\r\n      title: 'Employees'\r\n    },\r\n    {\r\n      href: '/employee/empaccount',\r\n      icon: UserIcon,\r\n      title: 'Account'\r\n    },\r\n    {\r\n      href: '/employee/settings',\r\n      icon: SettingsIcon,\r\n      title: 'Settings'\r\n    }, \r\n  ]\r\n}\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    gender: \"\",\r\n    group: 0,\r\n    id: 0,\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n   // eslint-disable-next-line\r\n  }, [location.pathname]);\r\n\r\n  useEffect((props) => {\r\n    StudentService.getStudentDetail()\r\n      .then(function(res){\r\n        const { data} = res;\r\n        console.log(\"data: \",data);\r\n        setUserData({\r\n          email: data.user.email,\r\n          first_name: data.user.first_name,\r\n          last_name: data.user.last_name,\r\n          gender: data.gender,\r\n          group: data.group,\r\n          id: data.id,\r\n        });\r\n      }).catch(error =>{\r\n        console.log(error);\r\n        \r\n      })\r\n  }, []);\r\n\r\n  const content = (\r\n    <Box\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Box\r\n        alignItems=\"center\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        p={2}\r\n      >\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/employee/account\"\r\n        />\r\n        <Typography\r\n          className={classes.name}\r\n          color=\"textPrimary\"\r\n          variant=\"h5\"\r\n        >\r\n          {userData.first_name+\" \"+userData.last_name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n        >\r\n          {userData.email}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\SDashboardLayout\\NavBar\\index.js",["782","783","784","785","786","787"],"import React, { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon\r\n} from 'react-feather';\r\nimport NavItem from './NavItem';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith'\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: '/student/dashboard',\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  {\r\n    href: '/student/account',\r\n    icon: UserIcon,\r\n    title: 'Account'\r\n  },\r\n  {\r\n    href: '/student/settings',\r\n    icon: SettingsIcon,\r\n    title: 'Settings'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n   // eslint-disable-next-line\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Box\r\n        alignItems=\"center\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        p={2}\r\n      >\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography\r\n          className={classes.name}\r\n          color=\"textPrimary\"\r\n          variant=\"h5\"\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n        >\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n      <Box\r\n        p={2}\r\n        m={2}\r\n        bgcolor=\"background.dark\"\r\n      >\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\EDashboardLayout\\NavBar\\NavItem.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\SDashboardLayout\\NavBar\\NavItem.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\layouts\\DashboardLayout\\NavBar\\NavItem.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\CoordinatorSearch.js",["788","789"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function(...args) {\r\n    const context = this;\r\n    if (timeout) clearTimeout(timeout);\r\n    timeout = setTimeout(() => {\r\n      timeout = null;\r\n      func.apply(context, args);\r\n    }, wait);\r\n  };\r\n}\r\n\r\nexport default function CoordinatorSearch() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [inputSearch, setInputSearch] = useState(\"\");\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const debounceOnChange = React.useCallback(\r\n    debounce(value => {\r\n      setInputSearch(value);\r\n    }, 400),\r\n    []\r\n  );\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const loading = open && options.length === 0;\r\n  const [coordinators, setCoordinators] = useState([]);\r\n\r\n  function handleChange(value) {\r\n    setInputValue(value);\r\n    debounceOnChange(value);\r\n  }\r\n\r\n  const AllCoordinators = []\r\n  function handleResult(){\r\n      for (let i = 0; i < coordinators.length; i++) {\r\n        const item= coordinators[i].id;\r\n        AllCoordinators[i] = item;\r\n      }\r\n      console.log(\"All Coordinators: \",AllCoordinators)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    (async () => {\r\n        const response = await axios.get(\r\n            \"http://20.37.50.140:8000/api/employee/search/?q=\"+inputValue\r\n          );\r\n    \r\n\r\n      if (active) {\r\n        console.log(response.data);\r\n        setOptions(response.data);\r\n      }\r\n    })();\r\n  }, [inputSearch]);\r\n\r\n  return (\r\n    <div className=\"CoordinatorSearch\">\r\n      <Autocomplete\r\n        multiple\r\n        filterSelectedOptions\r\n        options={options}\r\n        getOptionLabel={option => option.first_name+\" \"+option.last_name}\r\n        open={open}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n        }}\r\n        onClose={() => {\r\n          setOpen(false);\r\n          handleChange('');\r\n        }}\r\n        autoComplete\r\n        loading={loading}\r\n        inputValue={inputValue}\r\n        includeInputInList\r\n        //disableOpenOnFocus\r\n        onChange={(event, newValue) => {setCoordinators(newValue)}}\r\n        onSelect={handleResult}\r\n        renderInput={params => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Search Coordinator\"\r\n            variant=\"outlined\"\r\n            onChange={event => handleChange(event.target.value)}\r\n            fullWidth\r\n          />\r\n        )}\r\n        renderOption={option => {\r\n          return <div>{option.first_name+\" \"+option.last_name}</div>;\r\n        }}\r\n      />\r\n\r\n      <button type=\"button\" onClick={handleResult}>See</button>\r\n    </div>\r\n  );\r\n}\r\n",["790","791"],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\CompanySearch.js",["792","793"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function(...args) {\r\n    const context = this;\r\n    if (timeout) clearTimeout(timeout);\r\n    timeout = setTimeout(() => {\r\n      timeout = null;\r\n      func.apply(context, args);\r\n    }, wait);\r\n  };\r\n}\r\n\r\nexport default function CompanySearch() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [inputSearch, setInputSearch] = useState(\"\");\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const debounceOnChange = React.useCallback(\r\n    debounce(value => {\r\n      setInputSearch(value);\r\n    }, 400),\r\n    []\r\n  );\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const loading = open && options.length === 0;\r\n  const [company, setCompany] = useState([]);\r\n\r\n  function handleChange(value) {\r\n    setInputValue(value);\r\n    debounceOnChange(value);\r\n  }\r\n\r\n  const AllComapnies = []\r\n  function handleResult(){\r\n      for (let i = 0; i < company.length; i++) {\r\n        const item= company[i].id;\r\n        AllComapnies[i] = item;\r\n      }\r\n      console.log(\"All Comapnies: \",AllComapnies)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    (async () => {\r\n      const response = await axios.get(\r\n        \"http://20.37.50.140:8000/api/company/search/?q=\"+inputValue\r\n      );\r\n\r\n      if (active) {\r\n        console.log(response.data);\r\n        setOptions(response.data);\r\n      }\r\n    })();\r\n  }, [inputSearch]);\r\n\r\n  return (\r\n    <div className=\"CompanySearch\">\r\n      <Autocomplete\r\n        multiple\r\n        filterSelectedOptions\r\n        options={options}\r\n        getOptionLabel={option => option.name}\r\n        open={open}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n        }}\r\n        onClose={() => {\r\n          setOpen(false);\r\n          handleChange('');\r\n        }}\r\n        autoComplete = {false}\r\n        loading={loading}\r\n        inputValue={inputValue}\r\n        includeInputInList\r\n        //disableOpenOnFocus\r\n        onChange={(event, newValue) => {setCompany(newValue)}}\r\n        onSelect={handleResult}\r\n        renderInput={params => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Search Company\"\r\n            variant=\"outlined\"\r\n            onChange={event => handleChange(event.target.value)}\r\n            fullWidth\r\n            autoComplete = \"false\"\r\n          />\r\n        )}\r\n        renderOption={option => {\r\n          return <div>{option.name}</div>;\r\n        }}\r\n      />\r\n\r\n      <button type=\"button\" onClick={handleResult}>See</button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\rounds\\RoundDetails.js",[],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\drive\\DriveListView\\DriveMenuButton.js",["794","795","796"],"import React,{useState } from 'react';\nimport { Button, Menu, MenuItem } from '@material-ui/core';\n\nimport DriveService from '../../../services/DriveService';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { NavLink } from \"react-router-dom\";\nimport Popup from \"../../../components/Popup\";\nimport ProfileDetails from \"./ProfileDetails\";\n\nexport function DriveMenuButton({ row, goToEdit }) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openPopup, setOpenPopup] = useState(false)\n  const[ posts, setPosts] = useState([]);\n  const [recordForEdit, setRecordForEdit] = useState(null)\n\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const getAllDrives = () => {\n    DriveService.getAllDrives()\n      .then(res => {        \n          setPosts(res.data);          \n      })\n      .catch( err => {\n          console.log(err);\n      })\n  }\n  const deleteDrive = id => {\n    console.log('Student in func : ' + id);\n    DriveService.deleteDrive({ id: id })\n      .then(res => {\n        console.log('in Result  : ' + res.data);\n        setTimeout(window.location.reload(false), 2000);\n      })\n      .catch(err => {\n        console.log(err);\n        setTimeout(window.location.reload(false), 2000);\n      });\n  };\n  function openPopupWithExtraData(id) {\n    console.log('Student in func : ' + id);\n    DriveService.getSingleDrive({ id: id })\n      .then(res => {\n        console.log('in Result  : ' + res.data);\n        openInPopup(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n  const addOrEdit = (drive, resetForm) => {\n    if (drive.id === 0)\n        console.log(\"Inserted\");\n    else\n        console.log(\"Edited\");\n    resetForm()\n    setRecordForEdit(null)\n    setOpenPopup(false)\n    console.log(\"From add or edit\")\n    getAllDrives();\n}\n  const openInPopup = item => {\n    setRecordForEdit(item)\n    setOpenPopup(true)\n}\nconst handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id={`actions-${row.id}`}\n        anchorEl={anchorEl}\n        //keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem\n          onClick={() => {\n            openPopupWithExtraData(row.id);\n          }}\n        >\n          Edit\n        </MenuItem>\n        <MenuItem>\n          <NavLink\n            className=\"navbar-item\"\n            activeClassName=\"is-active\"\n            to=\"/employee/afterdrive\"\n          >\n            Details\n            </NavLink>\n\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            deleteDrive(row.id);\n          }}\n        >\n          Delete\n        </MenuItem>\n      </Menu>\n\n      <Popup\n        title=\"Drive Form\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n      >\n        <ProfileDetails\n            recordForEdit={recordForEdit}\n            addOrEdit={addOrEdit} />\n    </Popup>\n    </>\n  );\n}\n","C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\VolunteeringDrives.js",["797"],"C:\\Users\\HP\\Desktop\\BE Project\\tnpvision_frontend\\src\\views\\reports\\StudentDashboardView\\EligibleDrives.js",["798","799"],{"ruleId":"800","replacedBy":"801"},{"ruleId":"802","replacedBy":"803"},{"ruleId":"804","severity":1,"message":"805","line":25,"column":8,"nodeType":"806","messageId":"807","endLine":25,"endColumn":13},{"ruleId":"804","severity":1,"message":"808","line":16,"column":10,"nodeType":"806","messageId":"807","endLine":16,"endColumn":21},{"ruleId":"809","severity":1,"message":"810","line":134,"column":28,"nodeType":"811","endLine":134,"endColumn":45},{"ruleId":"809","severity":1,"message":"812","line":173,"column":6,"nodeType":"813","endLine":173,"endColumn":19,"suggestions":"814"},{"ruleId":"804","severity":1,"message":"815","line":9,"column":3,"nodeType":"806","messageId":"807","endLine":9,"endColumn":7},{"ruleId":"804","severity":1,"message":"816","line":57,"column":10,"nodeType":"806","messageId":"807","endLine":57,"endColumn":30},{"ruleId":"804","severity":1,"message":"817","line":63,"column":9,"nodeType":"806","messageId":"807","endLine":63,"endColumn":14},{"ruleId":"818","severity":1,"message":"819","line":181,"column":40,"nodeType":"820","messageId":"821","endLine":181,"endColumn":41},{"ruleId":"804","severity":1,"message":"822","line":2,"column":8,"nodeType":"806","messageId":"807","endLine":2,"endColumn":13},{"ruleId":"804","severity":1,"message":"823","line":82,"column":24,"nodeType":"806","messageId":"807","endLine":82,"endColumn":37},{"ruleId":"804","severity":1,"message":"824","line":83,"column":26,"nodeType":"806","messageId":"807","endLine":83,"endColumn":41},{"ruleId":"804","severity":1,"message":"825","line":85,"column":12,"nodeType":"806","messageId":"807","endLine":85,"endColumn":17},{"ruleId":"804","severity":1,"message":"826","line":87,"column":12,"nodeType":"806","messageId":"807","endLine":87,"endColumn":17},{"ruleId":"804","severity":1,"message":"827","line":89,"column":11,"nodeType":"806","messageId":"807","endLine":89,"endColumn":23},{"ruleId":"809","severity":1,"message":"810","line":128,"column":30,"nodeType":"811","endLine":128,"endColumn":47},{"ruleId":"809","severity":1,"message":"810","line":135,"column":31,"nodeType":"811","endLine":135,"endColumn":48},{"ruleId":"809","severity":1,"message":"810","line":142,"column":31,"nodeType":"811","endLine":142,"endColumn":48},{"ruleId":"809","severity":1,"message":"828","line":172,"column":8,"nodeType":"813","endLine":172,"endColumn":22,"suggestions":"829"},{"ruleId":"809","severity":1,"message":"830","line":205,"column":8,"nodeType":"813","endLine":205,"endColumn":22,"suggestions":"831"},{"ruleId":"809","severity":1,"message":"832","line":238,"column":8,"nodeType":"813","endLine":238,"endColumn":22,"suggestions":"833"},{"ruleId":"804","severity":1,"message":"834","line":6,"column":10,"nodeType":"806","messageId":"807","endLine":6,"endColumn":21},{"ruleId":"804","severity":1,"message":"835","line":7,"column":8,"nodeType":"806","messageId":"807","endLine":7,"endColumn":20},{"ruleId":"804","severity":1,"message":"836","line":132,"column":10,"nodeType":"806","messageId":"807","endLine":132,"endColumn":18},{"ruleId":"804","severity":1,"message":"837","line":143,"column":10,"nodeType":"806","messageId":"807","endLine":143,"endColumn":18},{"ruleId":"809","severity":1,"message":"838","line":190,"column":6,"nodeType":"813","endLine":190,"endColumn":21,"suggestions":"839"},{"ruleId":"840","severity":1,"message":"841","line":1,"column":1,"nodeType":"842","endLine":35,"endColumn":3},{"ruleId":"840","severity":1,"message":"843","line":1,"column":1,"nodeType":"842","endLine":27,"endColumn":3},{"ruleId":"804","severity":1,"message":"844","line":1,"column":17,"nodeType":"806","messageId":"807","endLine":1,"endColumn":25},{"ruleId":"804","severity":1,"message":"822","line":10,"column":8,"nodeType":"806","messageId":"807","endLine":10,"endColumn":13},{"ruleId":"804","severity":1,"message":"845","line":11,"column":8,"nodeType":"806","messageId":"807","endLine":11,"endColumn":12},{"ruleId":"804","severity":1,"message":"815","line":2,"column":21,"nodeType":"806","messageId":"807","endLine":2,"endColumn":25},{"ruleId":"804","severity":1,"message":"846","line":2,"column":27,"nodeType":"806","messageId":"807","endLine":2,"endColumn":37},{"ruleId":"804","severity":1,"message":"847","line":2,"column":51,"nodeType":"806","messageId":"807","endLine":2,"endColumn":58},{"ruleId":"804","severity":1,"message":"848","line":6,"column":8,"nodeType":"806","messageId":"807","endLine":6,"endColumn":20},{"ruleId":"804","severity":1,"message":"849","line":7,"column":8,"nodeType":"806","messageId":"807","endLine":7,"endColumn":22},{"ruleId":"804","severity":1,"message":"850","line":8,"column":8,"nodeType":"806","messageId":"807","endLine":8,"endColumn":13},{"ruleId":"804","severity":1,"message":"851","line":9,"column":8,"nodeType":"806","messageId":"807","endLine":9,"endColumn":21},{"ruleId":"804","severity":1,"message":"852","line":10,"column":8,"nodeType":"806","messageId":"807","endLine":10,"endColumn":22},{"ruleId":"804","severity":1,"message":"853","line":11,"column":8,"nodeType":"806","messageId":"807","endLine":11,"endColumn":19},{"ruleId":"804","severity":1,"message":"854","line":12,"column":8,"nodeType":"806","messageId":"807","endLine":12,"endColumn":23},{"ruleId":"804","severity":1,"message":"855","line":28,"column":11,"nodeType":"806","messageId":"807","endLine":28,"endColumn":18},{"ruleId":"804","severity":1,"message":"855","line":28,"column":11,"nodeType":"806","messageId":"807","endLine":28,"endColumn":18},{"ruleId":"804","severity":1,"message":"855","line":28,"column":11,"nodeType":"806","messageId":"807","endLine":28,"endColumn":18},{"ruleId":"804","severity":1,"message":"822","line":10,"column":8,"nodeType":"806","messageId":"807","endLine":10,"endColumn":13},{"ruleId":"804","severity":1,"message":"845","line":11,"column":8,"nodeType":"806","messageId":"807","endLine":11,"endColumn":12},{"ruleId":"804","severity":1,"message":"856","line":1,"column":8,"nodeType":"806","messageId":"807","endLine":1,"endColumn":12},{"ruleId":"804","severity":1,"message":"856","line":1,"column":8,"nodeType":"806","messageId":"807","endLine":1,"endColumn":12},{"ruleId":"804","severity":1,"message":"857","line":1,"column":17,"nodeType":"806","messageId":"807","endLine":1,"endColumn":26},{"ruleId":"804","severity":1,"message":"822","line":12,"column":8,"nodeType":"806","messageId":"807","endLine":12,"endColumn":13},{"ruleId":"804","severity":1,"message":"858","line":14,"column":18,"nodeType":"806","messageId":"807","endLine":14,"endColumn":28},{"ruleId":"804","severity":1,"message":"859","line":2,"column":8,"nodeType":"806","messageId":"807","endLine":2,"endColumn":17},{"ruleId":"804","severity":1,"message":"860","line":6,"column":9,"nodeType":"806","messageId":"807","endLine":6,"endColumn":19},{"ruleId":"804","severity":1,"message":"844","line":1,"column":17,"nodeType":"806","messageId":"807","endLine":1,"endColumn":25},{"ruleId":"804","severity":1,"message":"857","line":1,"column":27,"nodeType":"806","messageId":"807","endLine":1,"endColumn":36},{"ruleId":"804","severity":1,"message":"822","line":16,"column":8,"nodeType":"806","messageId":"807","endLine":16,"endColumn":13},{"ruleId":"804","severity":1,"message":"845","line":17,"column":8,"nodeType":"806","messageId":"807","endLine":17,"endColumn":12},{"ruleId":"804","severity":1,"message":"861","line":2,"column":8,"nodeType":"806","messageId":"807","endLine":2,"endColumn":12},{"ruleId":"804","severity":1,"message":"862","line":4,"column":8,"nodeType":"806","messageId":"807","endLine":4,"endColumn":16},{"ruleId":"804","severity":1,"message":"863","line":19,"column":19,"nodeType":"806","messageId":"807","endLine":19,"endColumn":23},{"ruleId":"804","severity":1,"message":"864","line":42,"column":9,"nodeType":"806","messageId":"807","endLine":42,"endColumn":16},{"ruleId":"865","severity":1,"message":"866","line":70,"column":21,"nodeType":"867","messageId":"868","endLine":70,"endColumn":23},{"ruleId":"865","severity":1,"message":"866","line":71,"column":47,"nodeType":"867","messageId":"868","endLine":71,"endColumn":49},{"ruleId":"804","severity":1,"message":"869","line":74,"column":5,"nodeType":"806","messageId":"807","endLine":74,"endColumn":12},{"ruleId":"804","severity":1,"message":"870","line":75,"column":5,"nodeType":"806","messageId":"807","endLine":75,"endColumn":15},{"ruleId":"804","severity":1,"message":"871","line":78,"column":5,"nodeType":"806","messageId":"807","endLine":78,"endColumn":22},{"ruleId":"804","severity":1,"message":"872","line":79,"column":5,"nodeType":"806","messageId":"807","endLine":79,"endColumn":14},{"ruleId":"809","severity":1,"message":"838","line":135,"column":5,"nodeType":"813","endLine":135,"endColumn":15,"suggestions":"873"},{"ruleId":"840","severity":1,"message":"843","line":3,"column":1,"nodeType":"842","endLine":144,"endColumn":3},{"ruleId":"804","severity":1,"message":"874","line":4,"column":8,"nodeType":"806","messageId":"807","endLine":4,"endColumn":14},{"ruleId":"804","severity":1,"message":"875","line":7,"column":8,"nodeType":"806","messageId":"807","endLine":7,"endColumn":16},{"ruleId":"804","severity":1,"message":"876","line":11,"column":3,"nodeType":"806","messageId":"807","endLine":11,"endColumn":9},{"ruleId":"804","severity":1,"message":"877","line":14,"column":3,"nodeType":"806","messageId":"807","endLine":14,"endColumn":11},{"ruleId":"804","severity":1,"message":"846","line":21,"column":3,"nodeType":"806","messageId":"807","endLine":21,"endColumn":13},{"ruleId":"804","severity":1,"message":"878","line":28,"column":8,"nodeType":"806","messageId":"807","endLine":28,"endColumn":19},{"ruleId":"804","severity":1,"message":"879","line":54,"column":9,"nodeType":"806","messageId":"807","endLine":54,"endColumn":24},{"ruleId":"804","severity":1,"message":"880","line":66,"column":9,"nodeType":"806","messageId":"807","endLine":66,"endColumn":24},{"ruleId":"865","severity":1,"message":"866","line":135,"column":23,"nodeType":"867","messageId":"868","endLine":135,"endColumn":25},{"ruleId":"840","severity":1,"message":"843","line":3,"column":1,"nodeType":"842","endLine":52,"endColumn":3},{"ruleId":"804","severity":1,"message":"881","line":12,"column":9,"nodeType":"806","messageId":"807","endLine":12,"endColumn":17},{"ruleId":"804","severity":1,"message":"882","line":2,"column":8,"nodeType":"806","messageId":"807","endLine":2,"endColumn":16},{"ruleId":"804","severity":1,"message":"883","line":4,"column":10,"nodeType":"806","messageId":"807","endLine":4,"endColumn":20},{"ruleId":"804","severity":1,"message":"861","line":2,"column":8,"nodeType":"806","messageId":"807","endLine":2,"endColumn":12},{"ruleId":"804","severity":1,"message":"863","line":4,"column":19,"nodeType":"806","messageId":"807","endLine":4,"endColumn":23},{"ruleId":"804","severity":1,"message":"862","line":5,"column":8,"nodeType":"806","messageId":"807","endLine":5,"endColumn":16},{"ruleId":"804","severity":1,"message":"877","line":17,"column":3,"nodeType":"806","messageId":"807","endLine":17,"endColumn":11},{"ruleId":"804","severity":1,"message":"864","line":50,"column":9,"nodeType":"806","messageId":"807","endLine":50,"endColumn":16},{"ruleId":"865","severity":1,"message":"866","line":66,"column":21,"nodeType":"867","messageId":"868","endLine":66,"endColumn":23},{"ruleId":"865","severity":1,"message":"866","line":67,"column":47,"nodeType":"867","messageId":"868","endLine":67,"endColumn":49},{"ruleId":"804","severity":1,"message":"869","line":70,"column":5,"nodeType":"806","messageId":"807","endLine":70,"endColumn":12},{"ruleId":"804","severity":1,"message":"870","line":71,"column":5,"nodeType":"806","messageId":"807","endLine":71,"endColumn":15},{"ruleId":"804","severity":1,"message":"871","line":74,"column":5,"nodeType":"806","messageId":"807","endLine":74,"endColumn":22},{"ruleId":"809","severity":1,"message":"838","line":124,"column":6,"nodeType":"813","endLine":124,"endColumn":21,"suggestions":"884"},{"ruleId":"840","severity":1,"message":"885","line":1,"column":1,"nodeType":"842","endLine":6,"endColumn":13},{"ruleId":"804","severity":1,"message":"846","line":2,"column":27,"nodeType":"806","messageId":"807","endLine":2,"endColumn":37},{"ruleId":"804","severity":1,"message":"822","line":8,"column":8,"nodeType":"806","messageId":"807","endLine":8,"endColumn":13},{"ruleId":"804","severity":1,"message":"886","line":26,"column":7,"nodeType":"806","messageId":"807","endLine":26,"endColumn":14},{"ruleId":"804","severity":1,"message":"887","line":41,"column":7,"nodeType":"806","messageId":"807","endLine":41,"endColumn":17},{"ruleId":"888","severity":1,"message":"889","line":100,"column":9,"nodeType":"811","endLine":100,"endColumn":24},{"ruleId":"809","severity":1,"message":"838","line":93,"column":6,"nodeType":"813","endLine":93,"endColumn":21,"suggestions":"890"},{"ruleId":"804","severity":1,"message":"845","line":11,"column":8,"nodeType":"806","messageId":"807","endLine":11,"endColumn":12},{"ruleId":"804","severity":1,"message":"856","line":1,"column":8,"nodeType":"806","messageId":"807","endLine":1,"endColumn":12},{"ruleId":"800","replacedBy":"891"},{"ruleId":"802","replacedBy":"892"},{"ruleId":"840","severity":1,"message":"843","line":3,"column":1,"nodeType":"842","endLine":144,"endColumn":3},{"ruleId":"804","severity":1,"message":"874","line":4,"column":8,"nodeType":"806","messageId":"807","endLine":4,"endColumn":14},{"ruleId":"804","severity":1,"message":"875","line":6,"column":8,"nodeType":"806","messageId":"807","endLine":6,"endColumn":16},{"ruleId":"804","severity":1,"message":"876","line":10,"column":3,"nodeType":"806","messageId":"807","endLine":10,"endColumn":9},{"ruleId":"804","severity":1,"message":"877","line":13,"column":3,"nodeType":"806","messageId":"807","endLine":13,"endColumn":11},{"ruleId":"804","severity":1,"message":"846","line":20,"column":3,"nodeType":"806","messageId":"807","endLine":20,"endColumn":13},{"ruleId":"804","severity":1,"message":"878","line":27,"column":8,"nodeType":"806","messageId":"807","endLine":27,"endColumn":19},{"ruleId":"804","severity":1,"message":"879","line":53,"column":9,"nodeType":"806","messageId":"807","endLine":53,"endColumn":24},{"ruleId":"804","severity":1,"message":"880","line":65,"column":9,"nodeType":"806","messageId":"807","endLine":65,"endColumn":24},{"ruleId":"840","severity":1,"message":"843","line":3,"column":1,"nodeType":"842","endLine":144,"endColumn":3},{"ruleId":"804","severity":1,"message":"861","line":2,"column":8,"nodeType":"806","messageId":"807","endLine":2,"endColumn":12},{"ruleId":"804","severity":1,"message":"862","line":4,"column":8,"nodeType":"806","messageId":"807","endLine":4,"endColumn":16},{"ruleId":"804","severity":1,"message":"893","line":5,"column":10,"nodeType":"806","messageId":"807","endLine":5,"endColumn":21},{"ruleId":"804","severity":1,"message":"894","line":5,"column":23,"nodeType":"806","messageId":"807","endLine":5,"endColumn":39},{"ruleId":"804","severity":1,"message":"895","line":5,"column":53,"nodeType":"806","messageId":"807","endLine":5,"endColumn":64},{"ruleId":"804","severity":1,"message":"822","line":13,"column":8,"nodeType":"806","messageId":"807","endLine":13,"endColumn":13},{"ruleId":"804","severity":1,"message":"863","line":14,"column":19,"nodeType":"806","messageId":"807","endLine":14,"endColumn":23},{"ruleId":"804","severity":1,"message":"869","line":387,"column":5,"nodeType":"806","messageId":"807","endLine":387,"endColumn":12},{"ruleId":"804","severity":1,"message":"870","line":388,"column":5,"nodeType":"806","messageId":"807","endLine":388,"endColumn":15},{"ruleId":"804","severity":1,"message":"871","line":391,"column":5,"nodeType":"806","messageId":"807","endLine":391,"endColumn":22},{"ruleId":"804","severity":1,"message":"872","line":392,"column":5,"nodeType":"806","messageId":"807","endLine":392,"endColumn":14},{"ruleId":"809","severity":1,"message":"838","line":448,"column":5,"nodeType":"813","endLine":448,"endColumn":15,"suggestions":"896"},{"ruleId":"804","severity":1,"message":"844","line":1,"column":17,"nodeType":"806","messageId":"807","endLine":1,"endColumn":25},{"ruleId":"804","severity":1,"message":"857","line":1,"column":27,"nodeType":"806","messageId":"807","endLine":1,"endColumn":36},{"ruleId":"804","severity":1,"message":"822","line":16,"column":8,"nodeType":"806","messageId":"807","endLine":16,"endColumn":13},{"ruleId":"804","severity":1,"message":"845","line":17,"column":8,"nodeType":"806","messageId":"807","endLine":17,"endColumn":12},{"ruleId":"804","severity":1,"message":"822","line":5,"column":8,"nodeType":"806","messageId":"807","endLine":5,"endColumn":13},{"ruleId":"804","severity":1,"message":"897","line":19,"column":8,"nodeType":"806","messageId":"807","endLine":19,"endColumn":12},{"ruleId":"804","severity":1,"message":"864","line":32,"column":9,"nodeType":"806","messageId":"807","endLine":32,"endColumn":16},{"ruleId":"800","replacedBy":"801"},{"ruleId":"802","replacedBy":"803"},{"ruleId":"804","severity":1,"message":"861","line":2,"column":8,"nodeType":"806","messageId":"807","endLine":2,"endColumn":12},{"ruleId":"804","severity":1,"message":"863","line":4,"column":19,"nodeType":"806","messageId":"807","endLine":4,"endColumn":23},{"ruleId":"804","severity":1,"message":"877","line":17,"column":3,"nodeType":"806","messageId":"807","endLine":17,"endColumn":11},{"ruleId":"804","severity":1,"message":"864","line":55,"column":9,"nodeType":"806","messageId":"807","endLine":55,"endColumn":16},{"ruleId":"804","severity":1,"message":"869","line":75,"column":5,"nodeType":"806","messageId":"807","endLine":75,"endColumn":12},{"ruleId":"804","severity":1,"message":"870","line":76,"column":5,"nodeType":"806","messageId":"807","endLine":76,"endColumn":15},{"ruleId":"804","severity":1,"message":"871","line":79,"column":5,"nodeType":"806","messageId":"807","endLine":79,"endColumn":22},{"ruleId":"809","severity":1,"message":"838","line":139,"column":6,"nodeType":"813","endLine":139,"endColumn":21,"suggestions":"898"},{"ruleId":"804","severity":1,"message":"859","line":2,"column":8,"nodeType":"806","messageId":"807","endLine":2,"endColumn":17},{"ruleId":"804","severity":1,"message":"862","line":3,"column":8,"nodeType":"806","messageId":"807","endLine":3,"endColumn":16},{"ruleId":"804","severity":1,"message":"893","line":4,"column":10,"nodeType":"806","messageId":"807","endLine":4,"endColumn":21},{"ruleId":"804","severity":1,"message":"894","line":4,"column":23,"nodeType":"806","messageId":"807","endLine":4,"endColumn":39},{"ruleId":"804","severity":1,"message":"895","line":4,"column":53,"nodeType":"806","messageId":"807","endLine":4,"endColumn":64},{"ruleId":"804","severity":1,"message":"846","line":4,"column":67,"nodeType":"806","messageId":"807","endLine":4,"endColumn":77},{"ruleId":"804","severity":1,"message":"899","line":4,"column":80,"nodeType":"806","messageId":"807","endLine":4,"endColumn":86},{"ruleId":"804","severity":1,"message":"863","line":15,"column":21,"nodeType":"806","messageId":"807","endLine":15,"endColumn":25},{"ruleId":"804","severity":1,"message":"869","line":62,"column":7,"nodeType":"806","messageId":"807","endLine":62,"endColumn":14},{"ruleId":"804","severity":1,"message":"870","line":63,"column":7,"nodeType":"806","messageId":"807","endLine":63,"endColumn":17},{"ruleId":"804","severity":1,"message":"871","line":66,"column":7,"nodeType":"806","messageId":"807","endLine":66,"endColumn":24},{"ruleId":"804","severity":1,"message":"872","line":67,"column":7,"nodeType":"806","messageId":"807","endLine":67,"endColumn":16},{"ruleId":"804","severity":1,"message":"900","line":83,"column":15,"nodeType":"806","messageId":"807","endLine":83,"endColumn":19},{"ruleId":"809","severity":1,"message":"838","line":126,"column":7,"nodeType":"813","endLine":126,"endColumn":17,"suggestions":"901"},{"ruleId":"804","severity":1,"message":"859","line":2,"column":8,"nodeType":"806","messageId":"807","endLine":2,"endColumn":17},{"ruleId":"804","severity":1,"message":"862","line":3,"column":8,"nodeType":"806","messageId":"807","endLine":3,"endColumn":16},{"ruleId":"804","severity":1,"message":"893","line":4,"column":10,"nodeType":"806","messageId":"807","endLine":4,"endColumn":21},{"ruleId":"804","severity":1,"message":"894","line":4,"column":23,"nodeType":"806","messageId":"807","endLine":4,"endColumn":39},{"ruleId":"804","severity":1,"message":"895","line":4,"column":53,"nodeType":"806","messageId":"807","endLine":4,"endColumn":64},{"ruleId":"804","severity":1,"message":"846","line":4,"column":67,"nodeType":"806","messageId":"807","endLine":4,"endColumn":77},{"ruleId":"804","severity":1,"message":"899","line":4,"column":80,"nodeType":"806","messageId":"807","endLine":4,"endColumn":86},{"ruleId":"804","severity":1,"message":"863","line":15,"column":21,"nodeType":"806","messageId":"807","endLine":15,"endColumn":25},{"ruleId":"804","severity":1,"message":"902","line":17,"column":9,"nodeType":"806","messageId":"807","endLine":17,"endColumn":20},{"ruleId":"804","severity":1,"message":"869","line":67,"column":7,"nodeType":"806","messageId":"807","endLine":67,"endColumn":14},{"ruleId":"804","severity":1,"message":"870","line":68,"column":7,"nodeType":"806","messageId":"807","endLine":68,"endColumn":17},{"ruleId":"804","severity":1,"message":"871","line":71,"column":7,"nodeType":"806","messageId":"807","endLine":71,"endColumn":24},{"ruleId":"804","severity":1,"message":"872","line":72,"column":7,"nodeType":"806","messageId":"807","endLine":72,"endColumn":16},{"ruleId":"804","severity":1,"message":"900","line":88,"column":15,"nodeType":"806","messageId":"807","endLine":88,"endColumn":19},{"ruleId":"809","severity":1,"message":"838","line":122,"column":7,"nodeType":"813","endLine":122,"endColumn":17,"suggestions":"903"},{"ruleId":"804","severity":1,"message":"859","line":2,"column":8,"nodeType":"806","messageId":"807","endLine":2,"endColumn":17},{"ruleId":"804","severity":1,"message":"893","line":4,"column":10,"nodeType":"806","messageId":"807","endLine":4,"endColumn":21},{"ruleId":"804","severity":1,"message":"894","line":4,"column":23,"nodeType":"806","messageId":"807","endLine":4,"endColumn":39},{"ruleId":"804","severity":1,"message":"895","line":4,"column":53,"nodeType":"806","messageId":"807","endLine":4,"endColumn":64},{"ruleId":"804","severity":1,"message":"846","line":4,"column":67,"nodeType":"806","messageId":"807","endLine":4,"endColumn":77},{"ruleId":"804","severity":1,"message":"899","line":4,"column":80,"nodeType":"806","messageId":"807","endLine":4,"endColumn":86},{"ruleId":"804","severity":1,"message":"863","line":15,"column":21,"nodeType":"806","messageId":"807","endLine":15,"endColumn":25},{"ruleId":"804","severity":1,"message":"869","line":70,"column":7,"nodeType":"806","messageId":"807","endLine":70,"endColumn":14},{"ruleId":"804","severity":1,"message":"870","line":71,"column":7,"nodeType":"806","messageId":"807","endLine":71,"endColumn":17},{"ruleId":"804","severity":1,"message":"871","line":74,"column":7,"nodeType":"806","messageId":"807","endLine":74,"endColumn":24},{"ruleId":"804","severity":1,"message":"872","line":75,"column":7,"nodeType":"806","messageId":"807","endLine":75,"endColumn":16},{"ruleId":"804","severity":1,"message":"900","line":91,"column":15,"nodeType":"806","messageId":"807","endLine":91,"endColumn":19},{"ruleId":"809","severity":1,"message":"838","line":127,"column":7,"nodeType":"813","endLine":127,"endColumn":17,"suggestions":"904"},{"ruleId":"804","severity":1,"message":"905","line":4,"column":23,"nodeType":"806","messageId":"807","endLine":4,"endColumn":29},{"ruleId":"804","severity":1,"message":"906","line":5,"column":25,"nodeType":"806","messageId":"807","endLine":5,"endColumn":40},{"ruleId":"804","severity":1,"message":"907","line":5,"column":76,"nodeType":"806","messageId":"807","endLine":5,"endColumn":84},{"ruleId":"804","severity":1,"message":"905","line":7,"column":3,"nodeType":"806","messageId":"807","endLine":7,"endColumn":9},{"ruleId":"804","severity":1,"message":"906","line":16,"column":18,"nodeType":"806","messageId":"807","endLine":16,"endColumn":33},{"ruleId":"804","severity":1,"message":"907","line":18,"column":11,"nodeType":"806","messageId":"807","endLine":18,"endColumn":19},{"ruleId":"804","severity":1,"message":"908","line":20,"column":18,"nodeType":"806","messageId":"807","endLine":20,"endColumn":33},{"ruleId":"804","severity":1,"message":"909","line":22,"column":15,"nodeType":"806","messageId":"807","endLine":22,"endColumn":27},{"ruleId":"804","severity":1,"message":"910","line":23,"column":12,"nodeType":"806","messageId":"807","endLine":23,"endColumn":21},{"ruleId":"809","severity":1,"message":"810","line":24,"column":28,"nodeType":"811","endLine":24,"endColumn":45},{"ruleId":"809","severity":1,"message":"812","line":63,"column":6,"nodeType":"813","endLine":63,"endColumn":19,"suggestions":"911"},{"ruleId":"800","replacedBy":"912"},{"ruleId":"802","replacedBy":"913"},{"ruleId":"809","severity":1,"message":"810","line":24,"column":28,"nodeType":"811","endLine":24,"endColumn":45},{"ruleId":"809","severity":1,"message":"812","line":62,"column":6,"nodeType":"813","endLine":62,"endColumn":19,"suggestions":"914"},{"ruleId":"804","severity":1,"message":"905","line":2,"column":10,"nodeType":"806","messageId":"807","endLine":2,"endColumn":16},{"ruleId":"804","severity":1,"message":"826","line":14,"column":10,"nodeType":"806","messageId":"807","endLine":14,"endColumn":15},{"ruleId":"804","severity":1,"message":"915","line":17,"column":9,"nodeType":"806","messageId":"807","endLine":17,"endColumn":24},{"ruleId":"804","severity":1,"message":"916","line":1,"column":38,"nodeType":"806","messageId":"807","endLine":1,"endColumn":48},{"ruleId":"804","severity":1,"message":"916","line":1,"column":38,"nodeType":"806","messageId":"807","endLine":1,"endColumn":48},{"ruleId":"804","severity":1,"message":"917","line":16,"column":8,"nodeType":"806","messageId":"807","endLine":16,"endColumn":25},"no-native-reassign",["918"],"no-negated-in-lhs",["919"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","MemberExpression","React Hook useEffect has a missing dependency: 'inputValue'. Either include it or remove the dependency array.","ArrayExpression",["920"],"'Grid' is defined but never used.","'isSubmitionCompleted' is assigned a value but never used.","'timer' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'axios' is defined but never used.","'setVolunteers' is assigned a value but never used.","'setCoordinators' is assigned a value but never used.","'value' is assigned a value but never used.","'posts' is assigned a value but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'inputValue1'. Either include it or remove the dependency array.",["921"],"React Hook useEffect has a missing dependency: 'inputValue2'. Either include it or remove the dependency array.",["922"],"React Hook useEffect has a missing dependency: 'inputValue3'. Either include it or remove the dependency array.",["923"],"'AllBranches' is defined but never used.","'Autocomplete' is defined but never used.","'volposts' is assigned a value but never used.","'corposts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["924"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign array to a variable before exporting as module default","'useState' is defined but never used.","'Auth' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'LatestOrders' is defined but never used.","'LatestProducts' is defined but never used.","'Sales' is defined but never used.","'TasksProgress' is defined but never used.","'TotalCustomers' is defined but never used.","'TotalProfit' is defined but never used.","'TrafficByDevice' is defined but never used.","'history' is assigned a value but never used.","'http' is defined but never used.","'useEffect' is defined but never used.","'RouterLink' is defined but never used.","'PropTypes' is defined but never used.","'withRouter' is defined but never used.","'clsx' is defined but never used.","'Controls' is defined but never used.","'Form' is defined but never used.","'classes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'valuess' is assigned a value but never used.","'setValuess' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'resetForm' is assigned a value but never used.",["925"],"'moment' is defined but never used.","'useTable' is defined but never used.","'Avatar' is defined but never used.","'Checkbox' is defined but never used.","'getInitials' is defined but never used.","'handleSelectAll' is assigned a value but never used.","'handleSelectOne' is assigned a value but never used.","'Redirect' is defined but never used.","'Snackbar' is defined but never used.","'makeStyles' is defined but never used.",["926"],"Assign arrow function to a variable before exporting as module default","'college' is assigned a value but never used.","'department' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().",["927"],["918"],["919"],"'FormControl' is defined but never used.","'FormControlLabel' is defined but never used.","'MuiCheckbox' is defined but never used.",["928"],"'Logo' is defined but never used.",["929"],"'AppBar' is defined but never used.","'data' is assigned a value but never used.",["930"],"'genderItems' is assigned a value but never used.",["931"],["932"],"'Button' is defined but never used.","'AlertCircleIcon' is defined but never used.","'LockIcon' is defined but never used.","'ShoppingBagIcon' is defined but never used.","'UserPlusIcon' is defined but never used.","'UsersIcon' is defined but never used.",["933"],["918"],["919"],["934"],"'handleMenuClick' is assigned a value but never used.","'useContext' is defined but never used.","'ArrowDownwardIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"935","fix":"936"},{"desc":"937","fix":"938"},{"desc":"939","fix":"940"},{"desc":"941","fix":"942"},{"desc":"943","fix":"944"},{"desc":"945","fix":"946"},{"desc":"943","fix":"947"},{"desc":"943","fix":"948"},{"desc":"945","fix":"949"},{"desc":"943","fix":"950"},{"desc":"945","fix":"951"},{"desc":"945","fix":"952"},{"desc":"945","fix":"953"},{"desc":"935","fix":"954"},{"desc":"935","fix":"955"},"Update the dependencies array to be: [inputSearch, inputValue]",{"range":"956","text":"957"},"Update the dependencies array to be: [inputSearch1, inputValue1]",{"range":"958","text":"959"},"Update the dependencies array to be: [inputSearch2, inputValue2]",{"range":"960","text":"961"},"Update the dependencies array to be: [inputSearch3, inputValue3]",{"range":"962","text":"963"},"Update the dependencies array to be: [recordForEdit, values]",{"range":"964","text":"965"},"Update the dependencies array to be: [userData, values]",{"range":"966","text":"967"},{"range":"968","text":"965"},{"range":"969","text":"965"},{"range":"970","text":"967"},{"range":"971","text":"965"},{"range":"972","text":"967"},{"range":"973","text":"967"},{"range":"974","text":"967"},{"range":"975","text":"957"},{"range":"976","text":"957"},[4967,4980],"[inputSearch, inputValue]",[5208,5222],"[inputSearch1, inputValue1]",[6493,6507],"[inputSearch2, inputValue2]",[7651,7665],"[inputSearch3, inputValue3]",[5810,5825],"[recordForEdit, values]",[3435,3445],"[userData, values]",[3080,3095],[2150,2165],[12279,12289],[3577,3592],[3790,3800],[3595,3605],[3392,3402],[1681,1694],[1628,1641]]